import{r as Xe,g as yx}from"./index-e63ce150.js";import{j as Un,_ as xx}from"./extends-bcbaa706.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const zu="175",hs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},fs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},a_=0,Md=1,l_=2,Sx=3,c_=0,ku=1,_a=2,Ei=3,ur=0,Fn=1,Fi=2,lr=0,xs=1,Ed=2,wd=3,Td=4,u_=5,Dr=100,h_=101,f_=102,d_=103,p_=104,m_=200,g_=201,__=202,v_=203,eu=204,tu=205,y_=206,x_=207,S_=208,M_=209,E_=210,w_=211,T_=212,A_=213,b_=214,nu=0,iu=1,ru=2,ws=3,su=4,ou=5,au=6,lu=7,Ya=0,C_=1,R_=2,zi=0,P_=1,I_=2,L_=3,Vd=4,D_=5,N_=6,U_=7,Ad="attached",O_="detached",Hu=300,hr=301,Or=302,ba=303,Ca=304,Io=306,Ra=1e3,gi=1001,Pa=1002,vn=1003,Gd=1004,Mx=1004,go=1005,Ex=1005,ln=1006,va=1007,wx=1007,Bi=1008,Tx=1008,Ai=1009,Wd=1010,Xd=1011,Mo=1012,Vu=1013,fr=1014,jn=1015,Lo=1016,Gu=1017,Wu=1018,Eo=1020,Yd=35902,qd=1021,Zd=1022,bn=1023,Jd=1024,jd=1025,wo=1026,To=1027,Xu=1028,qa=1029,Kd=1030,Yu=1031,Ax=1032,qu=1033,ya=33776,xa=33777,Sa=33778,Ma=33779,cu=35840,uu=35841,hu=35842,fu=35843,du=36196,pu=37492,mu=37496,gu=37808,_u=37809,vu=37810,yu=37811,xu=37812,Su=37813,Mu=37814,Eu=37815,wu=37816,Tu=37817,Au=37818,bu=37819,Cu=37820,Ru=37821,Ea=36492,Pu=36494,Iu=36495,Qd=36283,Lu=36284,Du=36285,Nu=36286,F_=2200,B_=2201,z_=2202,Ia=2300,Uu=2301,Jc=2302,gs=2400,_s=2401,La=2402,Zu=2500,$d=2501,bx=0,Cx=1,Rx=2,k_=3200,H_=3201,Px=3202,Ix=3203,Br=0,V_=1,sr="",Zn="srgb",Ts="srgb-linear",Da="linear",zt="srgb",Lx=0,ds=7680,Dx=7681,Nx=7682,Ux=7683,Ox=34055,Fx=34056,Bx=5386,zx=512,kx=513,Hx=514,Vx=515,Gx=516,Wx=517,Xx=518,bd=519,G_=512,W_=513,X_=514,ep=515,Y_=516,q_=517,Z_=518,J_=519,Na=35044,Yx=35048,qx=35040,Zx=35045,Jx=35049,jx=35041,Kx=35046,Qx=35050,$x=35042,eS="100",Cd="300 es",Ti=2e3,Ua=2001,tS={COMPUTE:"compute",RENDER:"render"};let Gi=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}};const wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let fg=1234567;const Ss=Math.PI/180,Ao=180/Math.PI;function si(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wn[r&255]+wn[r>>8&255]+wn[r>>16&255]+wn[r>>24&255]+"-"+wn[e&255]+wn[e>>8&255]+"-"+wn[e>>16&15|64]+wn[e>>24&255]+"-"+wn[t&63|128]+wn[t>>8&255]+"-"+wn[t>>16&255]+wn[t>>24&255]+wn[n&255]+wn[n>>8&255]+wn[n>>16&255]+wn[n>>24&255]).toLowerCase()}function ht(r,e,t){return Math.max(e,Math.min(t,r))}function tp(r,e){return(r%e+e)%e}function nS(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function iS(r,e,t){return r!==e?(t-r)/(e-r):0}function wa(r,e,t){return(1-t)*r+t*e}function rS(r,e,t,n){return wa(r,e,1-Math.exp(-t*n))}function sS(r,e=1){return e-Math.abs(tp(r,e*2)-e)}function oS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function aS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function lS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function cS(r,e){return r+Math.random()*(e-r)}function uS(r){return r*(.5-Math.random())}function hS(r){r!==void 0&&(fg=r);let e=fg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function fS(r){return r*Ss}function dS(r){return r*Ao}function pS(r){return(r&r-1)===0&&r!==0}function mS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function gS(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function _S(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),g=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*g,c*h);break;case"YXY":r.set(u*g,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function On(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function mt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const vS={DEG2RAD:Ss,RAD2DEG:Ao,generateUUID:si,clamp:ht,euclideanModulo:tp,mapLinear:nS,inverseLerp:iS,lerp:wa,damp:rS,pingpong:sS,smoothstep:oS,smootherstep:aS,randInt:lS,randFloat:cS,randFloatSpread:uS,seededRandom:hS,degToRad:fS,radToDeg:dS,isPowerOfTwo:pS,ceilPowerOfTwo:mS,floorPowerOfTwo:gS,setQuaternionFromProperEuler:_S,normalize:mt,denormalize:On};class pe{constructor(e=0,t=0){pe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ht(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,n,i,s,l,c,u,h){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],y=n[8],M=i[0],x=i[3],v=i[6],E=i[1],w=i[4],T=i[7],L=i[2],P=i[5],N=i[8];return s[0]=l*M+c*E+u*L,s[3]=l*x+c*w+u*P,s[6]=l*v+c*T+u*N,s[1]=h*M+f*E+p*L,s[4]=h*x+f*w+p*P,s[7]=h*v+f*T+p*N,s[2]=m*M+g*E+y*L,s[5]=m*x+g*w+y*P,s[8]=m*v+g*T+y*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,m=c*u-f*s,g=h*s-l*u,y=t*p+n*m+i*g;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*l)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(l*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(bf.makeScale(e,t)),this}rotate(e){return this.premultiply(bf.makeRotation(-e)),this}translate(e,t){return this.premultiply(bf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const bf=new pt;function j_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const yS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function _o(r,e){return new yS[r](e)}function Oa(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function K_(){const r=Oa("canvas");return r.style.display="block",r}const dg={};function jc(r){r in dg||(dg[r]=!0,console.warn(r))}function xS(r,e,t){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function SS(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function MS(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const pg=new pt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),mg=new pt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ES(){const r={enabled:!0,workingColorSpace:Ts,spaces:{},convert:function(i,s,l){return this.enabled===!1||s===l||!s||!l||(this.spaces[s].transfer===zt&&(i.r=cr(i.r),i.g=cr(i.g),i.b=cr(i.b)),this.spaces[s].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===zt&&(i.r=So(i.r),i.g=So(i.g),i.b=So(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===sr?Da:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,l){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[Ts]:{primaries:e,whitePoint:n,transfer:Da,toXYZ:pg,fromXYZ:mg,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Zn},outputColorSpaceConfig:{drawingBufferColorSpace:Zn}},[Zn]:{primaries:e,whitePoint:n,transfer:zt,toXYZ:pg,fromXYZ:mg,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Zn}}}),r}const It=ES();function cr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function So(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let qs;class Q_{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{qs===void 0&&(qs=Oa("canvas")),qs.width=e.width,qs.height=e.height;const i=qs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=qs}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Oa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=cr(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(cr(t[n]/255)*255):t[n]=cr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let wS=0;class Nr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:wS++}),this.uuid=si(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Cf(i[l].image)):s.push(Cf(i[l]))}else s=Cf(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Cf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Q_.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let TS=0;class jt extends Gi{constructor(e=jt.DEFAULT_IMAGE,t=jt.DEFAULT_MAPPING,n=gi,i=gi,s=ln,l=Bi,c=bn,u=Ai,h=jt.DEFAULT_ANISOTROPY,f=sr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:TS++}),this.uuid=si(),this.name="",this.source=new Nr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Hu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ra:e.x=e.x-Math.floor(e.x);break;case gi:e.x=e.x<0?0:1;break;case Pa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ra:e.y=e.y-Math.floor(e.y);break;case gi:e.y=e.y<0?0:1;break;case Pa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}jt.DEFAULT_IMAGE=null;jt.DEFAULT_MAPPING=Hu;jt.DEFAULT_ANISOTROPY=1;class Dt{constructor(e=0,t=0,n=0,i=1){Dt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],y=u[9],M=u[2],x=u[6],v=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+g+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,T=(g+1)/2,L=(v+1)/2,P=(f+m)/4,N=(p+M)/4,F=(y+x)/4;return w>T&&w>L?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=P/n,s=N/n):T>L?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=P/i,s=F/i):L<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(L),n=N/s,i=F/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-M)/E,this.z=(m-f)/E,this.w=Math.acos((h+g+v-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this.z=ht(this.z,e.z,t.z),this.w=ht(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this.z=ht(this.z,e,t),this.w=ht(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ju extends Gi{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Dt(0,0,e,t),this.scissorTest=!1,this.viewport=new Dt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ln,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new jt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new Nr(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Vi extends Ju{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Za extends jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=vn,this.minFilter=vn,this.wrapR=gi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class AS extends Vi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Za(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ju extends jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=vn,this.minFilter=vn,this.wrapR=gi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class bS extends Vi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ju(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Cn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[l+0],g=s[l+1],y=s[l+2],M=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==y){let x=1-c;const v=u*m+h*g+f*y+p*M,E=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const L=Math.sqrt(w),P=Math.atan2(L,v*E);x=Math.sin(x*P)/L,c=Math.sin(c*P)/L}const T=c*E;if(u=u*x+m*T,h=h*x+g*T,f=f*x+y*T,p=p*x+M*T,x===1-c){const L=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=L,h*=L,f*=L,p*=L}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],m=s[l+1],g=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*g-h*m,e[t+1]=u*y+f*m+h*p-c*g,e[t+2]=h*y+f*g+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),g=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"YXZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"ZXY":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"ZYX":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"YZX":this._x=m*f*p+h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p-m*g*y;break;case"XZY":this._x=m*f*p-h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p+m*g*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(l-i)*g}else if(n>c&&n>p){const g=2*Math.sqrt(1+n-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(i+l)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-n-p);this._w=(s-h)/g,this._x=(i+l)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-c);this._w=(l-i)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ht(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*l+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class O{constructor(e=0,t=0,n=0){O.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(gg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(gg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this.z=ht(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this.z=ht(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Rf.copy(this).projectOnVector(e),this.sub(Rf)}reflect(e){return this.sub(Rf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ht(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Rf=new O,gg=new Cn;class Bn{constructor(e=new O(1/0,1/0,1/0),t=new O(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(xi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(xi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,xi):xi.fromBufferAttribute(s,l),xi.applyMatrix4(e.matrixWorld),this.expandByPoint(xi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),tc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),tc.copy(n.boundingBox)),tc.applyMatrix4(e.matrixWorld),this.union(tc)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,xi),xi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ea),nc.subVectors(this.max,ea),Zs.subVectors(e.a,ea),Js.subVectors(e.b,ea),js.subVectors(e.c,ea),Tr.subVectors(Js,Zs),Ar.subVectors(js,Js),Qr.subVectors(Zs,js);let t=[0,-Tr.z,Tr.y,0,-Ar.z,Ar.y,0,-Qr.z,Qr.y,Tr.z,0,-Tr.x,Ar.z,0,-Ar.x,Qr.z,0,-Qr.x,-Tr.y,Tr.x,0,-Ar.y,Ar.x,0,-Qr.y,Qr.x,0];return!Pf(t,Zs,Js,js,nc)||(t=[1,0,0,0,1,0,0,0,1],!Pf(t,Zs,Js,js,nc))?!1:(ic.crossVectors(Tr,Ar),t=[ic.x,ic.y,ic.z],Pf(t,Zs,Js,js,nc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,xi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(xi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Qi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Qi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Qi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Qi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Qi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Qi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Qi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Qi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Qi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Qi=[new O,new O,new O,new O,new O,new O,new O,new O],xi=new O,tc=new Bn,Zs=new O,Js=new O,js=new O,Tr=new O,Ar=new O,Qr=new O,ea=new O,nc=new O,ic=new O,$r=new O;function Pf(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){$r.fromArray(r,s);const c=i.x*Math.abs($r.x)+i.y*Math.abs($r.y)+i.z*Math.abs($r.z),u=e.dot($r),h=t.dot($r),f=n.dot($r);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const CS=new Bn,ta=new O,If=new O;class Rn{constructor(e=new O,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):CS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ta.subVectors(e,this.center);const t=ta.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ta,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(If.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ta.copy(e.center).add(If)),this.expandByPoint(ta.copy(e.center).sub(If))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const $i=new O,Lf=new O,rc=new O,br=new O,Df=new O,sc=new O,Nf=new O;class Cs{constructor(e=new O,t=new O(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$i)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=$i.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($i.copy(this.origin).addScaledVector(this.direction,t),$i.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Lf.copy(e).add(t).multiplyScalar(.5),rc.copy(t).sub(e).normalize(),br.copy(this.origin).sub(Lf);const s=e.distanceTo(t)*.5,l=-this.direction.dot(rc),c=br.dot(this.direction),u=-br.dot(rc),h=br.lengthSq(),f=Math.abs(1-l*l);let p,m,g,y;if(f>0)if(p=l*u-c,m=l*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const M=1/f;p*=M,m*=M,g=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Lf).addScaledVector(rc,m),g}intersectSphere(e,t){$i.subVectors(e.center,this.origin);const n=$i.dot(this.direction),i=$i.dot($i)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,l=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,l=(e.min.y-m.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,$i)!==null}intersectTriangle(e,t,n,i,s){Df.subVectors(t,e),sc.subVectors(n,e),Nf.crossVectors(Df,sc);let l=this.direction.dot(Nf),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;br.subVectors(this.origin,e);const u=c*this.direction.dot(sc.crossVectors(br,sc));if(u<0)return null;const h=c*this.direction.dot(Df.cross(br));if(h<0||u+h>l)return null;const f=-c*br.dot(Nf);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ct{constructor(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x){ct.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x)}set(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=f,v[10]=p,v[14]=m,v[3]=g,v[7]=y,v[11]=M,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ct().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ks.setFromMatrixColumn(e,0).length(),s=1/Ks.setFromMatrixColumn(e,1).length(),l=1/Ks.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*f,g=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+y*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=y+g*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m+M*c,t[4]=y*c-g,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=g*c-y,t[6]=M+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m-M*c,t[4]=-l*p,t[8]=y+g*c,t[1]=g+y*c,t[5]=l*f,t[9]=M-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*f,g=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=y*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,g=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=y*p+g,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+y,t[10]=m-M*p}else if(e.order==="XZY"){const m=l*u,g=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=l*f,t[9]=g*p-y,t[2]=y*p-g,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(RS,e,PS)}lookAt(e,t,n){const i=this.elements;return ii.subVectors(e,t),ii.lengthSq()===0&&(ii.z=1),ii.normalize(),Cr.crossVectors(n,ii),Cr.lengthSq()===0&&(Math.abs(n.z)===1?ii.x+=1e-4:ii.z+=1e-4,ii.normalize(),Cr.crossVectors(n,ii)),Cr.normalize(),oc.crossVectors(ii,Cr),i[0]=Cr.x,i[4]=oc.x,i[8]=ii.x,i[1]=Cr.y,i[5]=oc.y,i[9]=ii.y,i[2]=Cr.z,i[6]=oc.z,i[10]=ii.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],y=n[2],M=n[6],x=n[10],v=n[14],E=n[3],w=n[7],T=n[11],L=n[15],P=i[0],N=i[4],F=i[8],R=i[12],b=i[1],U=i[5],J=i[9],Z=i[13],ee=i[2],ce=i[6],K=i[10],ye=i[14],H=i[3],se=i[7],re=i[11],_e=i[15];return s[0]=l*P+c*b+u*ee+h*H,s[4]=l*N+c*U+u*ce+h*se,s[8]=l*F+c*J+u*K+h*re,s[12]=l*R+c*Z+u*ye+h*_e,s[1]=f*P+p*b+m*ee+g*H,s[5]=f*N+p*U+m*ce+g*se,s[9]=f*F+p*J+m*K+g*re,s[13]=f*R+p*Z+m*ye+g*_e,s[2]=y*P+M*b+x*ee+v*H,s[6]=y*N+M*U+x*ce+v*se,s[10]=y*F+M*J+x*K+v*re,s[14]=y*R+M*Z+x*ye+v*_e,s[3]=E*P+w*b+T*ee+L*H,s[7]=E*N+w*U+T*ce+L*se,s[11]=E*F+w*J+T*K+L*re,s[15]=E*R+w*Z+T*ye+L*_e,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],y=e[3],M=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*g-n*u*g)+M*(+t*u*g-t*h*m+s*l*m-i*l*g+i*h*f-s*u*f)+x*(+t*h*p-t*c*g-s*l*p+n*l*g+s*c*f-n*h*f)+v*(-i*c*f-t*u*p+t*c*m+i*l*p-n*l*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],y=e[12],M=e[13],x=e[14],v=e[15],E=p*x*h-M*m*h+M*u*g-c*x*g-p*u*v+c*m*v,w=y*m*h-f*x*h-y*u*g+l*x*g+f*u*v-l*m*v,T=f*M*h-y*p*h+y*c*g-l*M*g-f*c*v+l*p*v,L=y*p*u-f*M*u-y*c*m+l*M*m+f*c*x-l*p*x,P=t*E+n*w+i*T+s*L;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/P;return e[0]=E*N,e[1]=(M*m*s-p*x*s-M*i*g+n*x*g+p*i*v-n*m*v)*N,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*v+n*u*v)*N,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*g-n*u*g)*N,e[4]=w*N,e[5]=(f*x*s-y*m*s+y*i*g-t*x*g-f*i*v+t*m*v)*N,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*N,e[7]=(l*m*s-f*u*s+f*i*h-t*m*h-l*i*g+t*u*g)*N,e[8]=T*N,e[9]=(y*p*s-f*M*s-y*n*g+t*M*g+f*n*v-t*p*v)*N,e[10]=(l*M*s-y*c*s+y*n*h-t*M*h-l*n*v+t*c*v)*N,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*g-t*c*g)*N,e[12]=L*N,e[13]=(f*M*i-y*p*i+y*n*m-t*M*m-f*n*x+t*p*x)*N,e[14]=(y*c*i-l*M*i-y*n*u+t*M*u+l*n*x-t*c*x)*N,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,m=s*h,g=s*f,y=s*p,M=l*f,x=l*p,v=c*p,E=u*h,w=u*f,T=u*p,L=n.x,P=n.y,N=n.z;return i[0]=(1-(M+v))*L,i[1]=(g+T)*L,i[2]=(y-w)*L,i[3]=0,i[4]=(g-T)*P,i[5]=(1-(m+v))*P,i[6]=(x+E)*P,i[7]=0,i[8]=(y+w)*N,i[9]=(x-E)*N,i[10]=(1-(m+M))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ks.set(i[0],i[1],i[2]).length();const l=Ks.set(i[4],i[5],i[6]).length(),c=Ks.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Si.copy(this);const h=1/s,f=1/l,p=1/c;return Si.elements[0]*=h,Si.elements[1]*=h,Si.elements[2]*=h,Si.elements[4]*=f,Si.elements[5]*=f,Si.elements[6]*=f,Si.elements[8]*=p,Si.elements[9]*=p,Si.elements[10]*=p,t.setFromRotationMatrix(Si),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Ti){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,y;if(c===Ti)g=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===Ua)g=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Ti){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),m=(t+e)*h,g=(n+i)*f;let y,M;if(c===Ti)y=(l+s)*p,M=-2*p;else if(c===Ua)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ks=new O,Si=new ct,RS=new O(0,0,0),PS=new O(1,1,1),Cr=new O,oc=new O,ii=new O,_g=new ct,vg=new Cn;class oi{constructor(e=0,t=0,n=0,i=oi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(ht(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-ht(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(ht(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-ht(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(ht(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-ht(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return _g.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_g,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return vg.setFromEuler(this),this.setFromQuaternion(vg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}oi.DEFAULT_ORDER="XYZ";class Ms{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let IS=0;const yg=new O,Qs=new Cn,er=new ct,ac=new O,na=new O,LS=new O,DS=new Cn,xg=new O(1,0,0),Sg=new O(0,1,0),Mg=new O(0,0,1),Eg={type:"added"},NS={type:"removed"},$s={type:"childadded",child:null},Uf={type:"childremoved",child:null};class Nt extends Gi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:IS++}),this.uuid=si(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Nt.DEFAULT_UP.clone();const e=new O,t=new oi,n=new Cn,i=new O(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ct},normalMatrix:{value:new pt}}),this.matrix=new ct,this.matrixWorld=new ct,this.matrixAutoUpdate=Nt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Nt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Qs.setFromAxisAngle(e,t),this.quaternion.multiply(Qs),this}rotateOnWorldAxis(e,t){return Qs.setFromAxisAngle(e,t),this.quaternion.premultiply(Qs),this}rotateX(e){return this.rotateOnAxis(xg,e)}rotateY(e){return this.rotateOnAxis(Sg,e)}rotateZ(e){return this.rotateOnAxis(Mg,e)}translateOnAxis(e,t){return yg.copy(e).applyQuaternion(this.quaternion),this.position.add(yg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(xg,e)}translateY(e){return this.translateOnAxis(Sg,e)}translateZ(e){return this.translateOnAxis(Mg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(er.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ac.copy(e):ac.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),na.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?er.lookAt(na,ac,this.up):er.lookAt(ac,na,this.up),this.quaternion.setFromRotationMatrix(er),i&&(er.extractRotation(i.matrixWorld),Qs.setFromRotationMatrix(er),this.quaternion.premultiply(Qs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Eg),$s.child=e,this.dispatchEvent($s),$s.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(NS),Uf.child=e,this.dispatchEvent(Uf),Uf.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),er.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),er.multiply(e.parent.matrixWorld)),e.applyMatrix4(er),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Eg),$s.child=e,this.dispatchEvent($s),$s.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(na,e,LS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(na,DS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),m=l(e.skeletons),g=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Nt.DEFAULT_UP=new O(0,1,0);Nt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Nt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Mi=new O,tr=new O,Of=new O,nr=new O,eo=new O,to=new O,wg=new O,Ff=new O,Bf=new O,zf=new O,kf=new Dt,Hf=new Dt,Vf=new Dt;class Jn{constructor(e=new O,t=new O,n=new O){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Mi.subVectors(e,t),i.cross(Mi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Mi.subVectors(i,t),tr.subVectors(n,t),Of.subVectors(e,t);const l=Mi.dot(Mi),c=Mi.dot(tr),u=Mi.dot(Of),h=tr.dot(tr),f=tr.dot(Of),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,g=(h*u-c*f)*m,y=(l*f-c*u)*m;return s.set(1-g-y,y,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,nr)===null?!1:nr.x>=0&&nr.y>=0&&nr.x+nr.y<=1}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,nr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,nr.x),u.addScaledVector(l,nr.y),u.addScaledVector(c,nr.z),u)}static getInterpolatedAttribute(e,t,n,i,s,l){return kf.setScalar(0),Hf.setScalar(0),Vf.setScalar(0),kf.fromBufferAttribute(e,t),Hf.fromBufferAttribute(e,n),Vf.fromBufferAttribute(e,i),l.setScalar(0),l.addScaledVector(kf,s.x),l.addScaledVector(Hf,s.y),l.addScaledVector(Vf,s.z),l}static isFrontFacing(e,t,n,i){return Mi.subVectors(n,t),tr.subVectors(e,t),Mi.cross(tr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Mi.subVectors(this.c,this.b),tr.subVectors(this.a,this.b),Mi.cross(tr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Jn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Jn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return Jn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Jn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Jn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;eo.subVectors(i,n),to.subVectors(s,n),Ff.subVectors(e,n);const u=eo.dot(Ff),h=to.dot(Ff);if(u<=0&&h<=0)return t.copy(n);Bf.subVectors(e,i);const f=eo.dot(Bf),p=to.dot(Bf);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(eo,l);zf.subVectors(e,s);const g=eo.dot(zf),y=to.dot(zf);if(y>=0&&g<=y)return t.copy(s);const M=g*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(to,c);const x=f*y-g*p;if(x<=0&&p-f>=0&&g-y>=0)return wg.subVectors(s,i),c=(p-f)/(p-f+(g-y)),t.copy(i).addScaledVector(wg,c);const v=1/(x+M+m);return l=M*v,c=m*v,t.copy(n).addScaledVector(eo,l).addScaledVector(to,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const $_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Rr={h:0,s:0,l:0},lc={h:0,s:0,l:0};function Gf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class He{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Zn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,It.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=It.workingColorSpace){return this.r=e,this.g=t,this.b=n,It.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=It.workingColorSpace){if(e=tp(e,1),t=ht(t,0,1),n=ht(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Gf(l,s,e+1/3),this.g=Gf(l,s,e),this.b=Gf(l,s,e-1/3)}return It.toWorkingColorSpace(this,i),this}setStyle(e,t=Zn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Zn){const n=$_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=cr(e.r),this.g=cr(e.g),this.b=cr(e.b),this}copyLinearToSRGB(e){return this.r=So(e.r),this.g=So(e.g),this.b=So(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Zn){return It.fromWorkingColorSpace(Tn.copy(this),e),Math.round(ht(Tn.r*255,0,255))*65536+Math.round(ht(Tn.g*255,0,255))*256+Math.round(ht(Tn.b*255,0,255))}getHexString(e=Zn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=It.workingColorSpace){It.fromWorkingColorSpace(Tn.copy(this),t);const n=Tn.r,i=Tn.g,s=Tn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=It.workingColorSpace){return It.fromWorkingColorSpace(Tn.copy(this),t),e.r=Tn.r,e.g=Tn.g,e.b=Tn.b,e}getStyle(e=Zn){It.fromWorkingColorSpace(Tn.copy(this),e);const t=Tn.r,n=Tn.g,i=Tn.b;return e!==Zn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Rr),this.setHSL(Rr.h+e,Rr.s+t,Rr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Rr),e.getHSL(lc);const n=wa(Rr.h,lc.h,t),i=wa(Rr.s,lc.s,t),s=wa(Rr.l,lc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Tn=new He;He.NAMES=$_;let US=0;class Pn extends Gi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:US++}),this.uuid=si(),this.name="",this.type="Material",this.blending=xs,this.side=ur,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eu,this.blendDst=tu,this.blendEquation=Dr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new He(0,0,0),this.blendAlpha=0,this.depthFunc=ws,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=bd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ds,this.stencilZFail=ds,this.stencilZPass=ds,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==xs&&(n.blending=this.blending),this.side!==ur&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==eu&&(n.blendSrc=this.blendSrc),this.blendDst!==tu&&(n.blendDst=this.blendDst),this.blendEquation!==Dr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ws&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==bd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ds&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ds&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ds&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class zr extends Pn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new He(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new oi,this.combine=Ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const or=OS();function OS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function qn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=ht(r,-65504,65504),or.floatView[0]=r;const e=or.uint32View[0],t=e>>23&511;return or.baseTable[t]+((e&8388607)>>or.shiftTable[t])}function pa(r){const e=r>>10;return or.uint32View[0]=or.mantissaTable[or.offsetTable[e]+(r&1023)]+or.exponentTable[e],or.floatView[0]}class FS{static toHalfFloat(e){return qn(e)}static fromHalfFloat(e){return pa(e)}}const rn=new O,cc=new pe;let BS=0;class kt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:BS++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Na,this.updateRanges=[],this.gpuType=jn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)cc.fromBufferAttribute(this,t),cc.applyMatrix3(e),this.setXY(t,cc.x,cc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix3(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix4(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyNormalMatrix(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.transformDirection(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=On(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=mt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=On(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=On(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=On(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=On(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Na&&(e.usage=this.usage),e}}class zS extends kt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class kS extends kt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class HS extends kt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class VS extends kt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class np extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class GS extends kt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ip extends kt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class WS extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=pa(this.array[e*this.itemSize]);return this.normalized&&(t=On(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=qn(t),this}getY(e){let t=pa(this.array[e*this.itemSize+1]);return this.normalized&&(t=On(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=qn(t),this}getZ(e){let t=pa(this.array[e*this.itemSize+2]);return this.normalized&&(t=On(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=qn(t),this}getW(e){let t=pa(this.array[e*this.itemSize+3]);return this.normalized&&(t=On(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=qn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this.array[e+2]=qn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this.array[e+2]=qn(i),this.array[e+3]=qn(s),this}}class Ze extends kt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let XS=0;const mi=new ct,Wf=new Nt,no=new O,ri=new Bn,ia=new Bn,mn=new O;class _t extends Gi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:XS++}),this.uuid=si(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(j_(e)?ip:np)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return mi.makeRotationFromQuaternion(e),this.applyMatrix4(mi),this}rotateX(e){return mi.makeRotationX(e),this.applyMatrix4(mi),this}rotateY(e){return mi.makeRotationY(e),this.applyMatrix4(mi),this}rotateZ(e){return mi.makeRotationZ(e),this.applyMatrix4(mi),this}translate(e,t,n){return mi.makeTranslation(e,t,n),this.applyMatrix4(mi),this}scale(e,t,n){return mi.makeScale(e,t,n),this.applyMatrix4(mi),this}lookAt(e){return Wf.lookAt(e),Wf.updateMatrix(),this.applyMatrix4(Wf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(no).negate(),this.translate(no.x,no.y,no.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const l=e[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Ze(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];ri.setFromBufferAttribute(s),this.morphTargetsRelative?(mn.addVectors(this.boundingBox.min,ri.min),this.boundingBox.expandByPoint(mn),mn.addVectors(this.boundingBox.max,ri.max),this.boundingBox.expandByPoint(mn)):(this.boundingBox.expandByPoint(ri.min),this.boundingBox.expandByPoint(ri.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new O,1/0);return}if(e){const n=this.boundingSphere.center;if(ri.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ia.setFromBufferAttribute(c),this.morphTargetsRelative?(mn.addVectors(ri.min,ia.min),ri.expandByPoint(mn),mn.addVectors(ri.max,ia.max),ri.expandByPoint(mn)):(ri.expandByPoint(ia.min),ri.expandByPoint(ia.max))}ri.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)mn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(mn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)mn.fromBufferAttribute(c,h),u&&(no.fromBufferAttribute(e,h),mn.add(no)),i=Math.max(i,n.distanceToSquared(mn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new kt(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let F=0;F<n.count;F++)c[F]=new O,u[F]=new O;const h=new O,f=new O,p=new O,m=new pe,g=new pe,y=new pe,M=new O,x=new O;function v(F,R,b){h.fromBufferAttribute(n,F),f.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,F),g.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),f.sub(h),p.sub(h),g.sub(m),y.sub(m);const U=1/(g.x*y.y-y.x*g.y);isFinite(U)&&(M.copy(f).multiplyScalar(y.y).addScaledVector(p,-g.y).multiplyScalar(U),x.copy(p).multiplyScalar(g.x).addScaledVector(f,-y.x).multiplyScalar(U),c[F].add(M),c[R].add(M),c[b].add(M),u[F].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let F=0,R=E.length;F<R;++F){const b=E[F],U=b.start,J=b.count;for(let Z=U,ee=U+J;Z<ee;Z+=3)v(e.getX(Z+0),e.getX(Z+1),e.getX(Z+2))}const w=new O,T=new O,L=new O,P=new O;function N(F){L.fromBufferAttribute(i,F),P.copy(L);const R=c[F];w.copy(R),w.sub(L.multiplyScalar(L.dot(R))).normalize(),T.crossVectors(P,R);const U=T.dot(u[F])<0?-1:1;l.setXYZW(F,w.x,w.y,w.z,U)}for(let F=0,R=E.length;F<R;++F){const b=E[F],U=b.start,J=b.count;for(let Z=U,ee=U+J;Z<ee;Z+=3)N(e.getX(Z+0)),N(e.getX(Z+1)),N(e.getX(Z+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new kt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new O,s=new O,l=new O,c=new O,u=new O,h=new O,f=new O,p=new O;if(e)for(let m=0,g=e.count;m<g;m+=3){const y=e.getX(m+0),M=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)mn.fromBufferAttribute(e,t),mn.normalize(),e.setXYZ(t,mn.x,mn.y,mn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*f;for(let v=0;v<f;v++)m[y++]=h[g++]}return new kt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new _t,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Tg=new ct,es=new Cs,uc=new Rn,Ag=new O,hc=new O,fc=new O,dc=new O,Xf=new O,pc=new O,bg=new O,mc=new O;class sn extends Nt{constructor(e=new _t,t=new zr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){pc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(Xf.fromBufferAttribute(p,e),l?pc.addScaledVector(Xf,f):pc.addScaledVector(Xf.sub(t),f))}t.add(pc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),uc.copy(n.boundingSphere),uc.applyMatrix4(s),es.copy(e.ray).recast(e.near),!(uc.containsPoint(es.origin)===!1&&(es.intersectSphere(uc,Ag)===null||es.origin.distanceToSquared(Ag)>(e.far-e.near)**2))&&(Tg.copy(s).invert(),es.copy(e.ray).applyMatrix4(Tg),!(n.boundingBox!==null&&es.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,es)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],E=Math.max(x.start,g.start),w=Math.min(c.count,Math.min(x.start+x.count,g.start+g.count));for(let T=E,L=w;T<L;T+=3){const P=c.getX(T),N=c.getX(T+1),F=c.getX(T+2);i=gc(this,v,e,n,h,f,p,P,N,F),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let x=y,v=M;x<v;x+=3){const E=c.getX(x),w=c.getX(x+1),T=c.getX(x+2);i=gc(this,l,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],E=Math.max(x.start,g.start),w=Math.min(u.count,Math.min(x.start+x.count,g.start+g.count));for(let T=E,L=w;T<L;T+=3){const P=T,N=T+1,F=T+2;i=gc(this,v,e,n,h,f,p,P,N,F),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let x=y,v=M;x<v;x+=3){const E=x,w=x+1,T=x+2;i=gc(this,l,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function YS(r,e,t,n,i,s,l,c){let u;if(e.side===Fn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===ur,c),u===null)return null;mc.copy(c),mc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(mc);return h<t.near||h>t.far?null:{distance:h,point:mc.clone(),object:r}}function gc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,hc),r.getVertexPosition(u,fc),r.getVertexPosition(h,dc);const f=YS(r,e,t,n,hc,fc,dc,bg);if(f){const p=new O;Jn.getBarycoord(bg,hc,fc,dc,p),i&&(f.uv=Jn.getInterpolatedAttribute(i,c,u,h,p,new pe)),s&&(f.uv1=Jn.getInterpolatedAttribute(s,c,u,h,p,new pe)),l&&(f.normal=Jn.getInterpolatedAttribute(l,c,u,h,p,new O),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new O,materialIndex:0};Jn.getNormal(hc,fc,dc,m.normal),f.face=m,f.barycoord=p}return f}class Rs extends _t{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let m=0,g=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ze(h,3)),this.setAttribute("normal",new Ze(f,3)),this.setAttribute("uv",new Ze(p,2));function y(M,x,v,E,w,T,L,P,N,F,R){const b=T/N,U=L/F,J=T/2,Z=L/2,ee=P/2,ce=N+1,K=F+1;let ye=0,H=0;const se=new O;for(let re=0;re<K;re++){const _e=re*U-Z;for(let Ie=0;Ie<ce;Ie++){const qe=Ie*b-J;se[M]=qe*E,se[x]=_e*w,se[v]=ee,h.push(se.x,se.y,se.z),se[M]=0,se[x]=0,se[v]=P>0?1:-1,f.push(se.x,se.y,se.z),p.push(Ie/N),p.push(1-re/F),ye+=1}}for(let re=0;re<F;re++)for(let _e=0;_e<N;_e++){const Ie=m+_e+ce*re,qe=m+_e+ce*(re+1),oe=m+(_e+1)+ce*(re+1),xe=m+(_e+1)+ce*re;u.push(Ie,qe,xe),u.push(qe,oe,xe),H+=6}c.addGroup(g,H,R),g+=H,m+=ye}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function bo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Nn(r){const e={};for(let t=0;t<r.length;t++){const n=bo(r[t]);for(const i in n)e[i]=n[i]}return e}function qS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function ev(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:It.workingColorSpace}const tv={clone:bo,merge:Nn};var ZS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,JS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class bi extends Pn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ZS,this.fragmentShader=JS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=bo(e.uniforms),this.uniformsGroups=qS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ja extends Nt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ct,this.projectionMatrix=new ct,this.projectionMatrixInverse=new ct,this.coordinateSystem=Ti}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Pr=new O,Cg=new pe,Rg=new pe;class $t extends Ja{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ao*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ss*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ao*2*Math.atan(Math.tan(Ss*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Pr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z),Pr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z)}getViewSize(e,t){return this.getViewBounds(e,Cg,Rg),t.subVectors(Rg,Cg)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ss*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const io=-90,ro=1;class nv extends Nt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new $t(io,ro,e,t);i.layers=this.layers,this.add(i);const s=new $t(io,ro,e,t);s.layers=this.layers,this.add(s);const l=new $t(io,ro,e,t);l.layers=this.layers,this.add(l);const c=new $t(io,ro,e,t);c.layers=this.layers,this.add(c);const u=new $t(io,ro,e,t);u.layers=this.layers,this.add(u);const h=new $t(io,ro,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Ti)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Ua)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,g),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class ja extends jt{constructor(e=[],t=hr,n,i,s,l,c,u,h,f){super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class iv extends Vi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new ja(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ln}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Rs(5,5,5),s=new bi({name:"CubemapFromEquirect",uniforms:bo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Fn,blending:lr});s.uniforms.tEquirect.value=t;const l=new sn(i,s),c=t.minFilter;return t.minFilter===Bi&&(t.minFilter=ln),new nv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}class vo extends Nt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const jS={type:"move"};class Kc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new vo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new vo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new O,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new O),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new vo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new O,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new O),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),v=this._getHandJoint(h,M);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,y=.005;h.inputState.pinching&&m>g+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(jS)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new vo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Ku{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new He(e),this.density=t}clone(){return new Ku(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Qu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new He(e),this.near=t,this.far=n}clone(){return new Qu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class rp extends Nt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new oi,this.environmentIntensity=1,this.environmentRotation=new oi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class $u{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Na,this.updateRanges=[],this.version=0,this.uuid=si()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Dn=new O;class As{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix4(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyNormalMatrix(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.transformDirection(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=On(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=mt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=On(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=On(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=On(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=On(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new kt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new As(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class sp extends Pn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new He(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let so;const ra=new O,oo=new O,ao=new O,lo=new pe,sa=new pe,rv=new ct,_c=new O,oa=new O,vc=new O,Pg=new pe,Yf=new pe,Ig=new pe;class sv extends Nt{constructor(e=new sp){if(super(),this.isSprite=!0,this.type="Sprite",so===void 0){so=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new $u(t,5);so.setIndex([0,1,2,0,2,3]),so.setAttribute("position",new As(n,3,0,!1)),so.setAttribute("uv",new As(n,2,3,!1))}this.geometry=so,this.material=e,this.center=new pe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),oo.setFromMatrixScale(this.matrixWorld),rv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ao.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&oo.multiplyScalar(-ao.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;yc(_c.set(-.5,-.5,0),ao,l,oo,i,s),yc(oa.set(.5,-.5,0),ao,l,oo,i,s),yc(vc.set(.5,.5,0),ao,l,oo,i,s),Pg.set(0,0),Yf.set(1,0),Ig.set(1,1);let c=e.ray.intersectTriangle(_c,oa,vc,!1,ra);if(c===null&&(yc(oa.set(-.5,.5,0),ao,l,oo,i,s),Yf.set(0,1),c=e.ray.intersectTriangle(_c,vc,oa,!1,ra),c===null))return;const u=e.ray.origin.distanceTo(ra);u<e.near||u>e.far||t.push({distance:u,point:ra.clone(),uv:Jn.getInterpolation(ra,_c,oa,vc,Pg,Yf,Ig,new pe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function yc(r,e,t,n,i,s){lo.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(sa.x=s*lo.x-i*lo.y,sa.y=i*lo.x+s*lo.y):sa.copy(lo),r.copy(e),r.x+=sa.x,r.y+=sa.y,r.applyMatrix4(rv)}const xc=new O,Lg=new O;class ov extends Nt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){xc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(xc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){xc.setFromMatrixPosition(e.matrixWorld),Lg.setFromMatrixPosition(this.matrixWorld);const n=xc.distanceTo(Lg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Dg=new O,Ng=new Dt,Ug=new Dt,KS=new O,Og=new ct,Sc=new O,qf=new Rn,Fg=new ct,Zf=new Cs;class av extends sn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Ad,this.bindMatrix=new ct,this.bindMatrixInverse=new ct,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Bn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Sc),this.boundingBox.expandByPoint(Sc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Rn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Sc),this.boundingSphere.expandByPoint(Sc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),qf.copy(this.boundingSphere),qf.applyMatrix4(i),e.ray.intersectsSphere(qf)!==!1&&(Fg.copy(i).invert(),Zf.copy(e.ray).applyMatrix4(Fg),!(this.boundingBox!==null&&Zf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Zf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Dt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Ad?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===O_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Ng.fromBufferAttribute(i.attributes.skinIndex,e),Ug.fromBufferAttribute(i.attributes.skinWeight,e),Dg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Ug.getComponent(s);if(l!==0){const c=Ng.getComponent(s);Og.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(KS.copy(Dg).applyMatrix4(Og),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class op extends Nt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ki extends jt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=vn,f=vn,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Bg=new ct,QS=new ct;class eh{constructor(e=[],t=[]){this.uuid=si(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ct)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ct;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:QS;Bg.multiplyMatrices(c,t[s]),Bg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new eh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ki(t,e,e,bn,jn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new op),this.bones.push(l),this.boneInverses.push(new ct().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Co extends kt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const co=new ct,zg=new ct,Mc=[],kg=new Bn,$S=new ct,aa=new sn,la=new Rn;class lv extends sn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Co(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,$S)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Bn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,co),kg.copy(e.boundingBox).applyMatrix4(co),this.boundingBox.union(kg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Rn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,co),la.copy(e.boundingSphere).applyMatrix4(co),this.boundingSphere.union(la)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,l=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(aa.geometry=this.geometry,aa.material=this.material,aa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),la.copy(this.boundingSphere),la.applyMatrix4(n),e.ray.intersectsSphere(la)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,co),zg.multiplyMatrices(n,co),aa.matrixWorld=zg,aa.raycast(e,Mc);for(let l=0,c=Mc.length;l<c;l++){const u=Mc[l];u.instanceId=s,u.object=this,t.push(u)}Mc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Co(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new ki(new Float32Array(i*this.count),i,this.count,Xu,jn));const s=this.morphTexture.source.data.data;let l=0;for(let h=0;h<n.length;h++)l+=n[h];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Jf=new O,eM=new O,tM=new pt;class rr{constructor(e=new O(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Jf.subVectors(n,t).cross(eM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Jf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||tM.getNormalMatrix(e),i=this.coplanarPoint(Jf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ts=new Rn,Ec=new O;class Ka{constructor(e=new rr,t=new rr,n=new rr,i=new rr,s=new rr,l=new rr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ti){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],y=i[9],M=i[10],x=i[11],v=i[12],E=i[13],w=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,x-g,T-v).normalize(),n[1].setComponents(u+s,m+h,x+g,T+v).normalize(),n[2].setComponents(u+l,m+f,x+y,T+E).normalize(),n[3].setComponents(u-l,m-f,x-y,T-E).normalize(),n[4].setComponents(u-c,m-p,x-M,T-w).normalize(),t===Ti)n[5].setComponents(u+c,m+p,x+M,T+w).normalize();else if(t===Ua)n[5].setComponents(c,p,M,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ts.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ts.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ts)}intersectsSprite(e){return ts.center.set(0,0,0),ts.radius=.7071067811865476,ts.applyMatrix4(e.matrixWorld),this.intersectsSphere(ts)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ec.x=i.normal.x>0?e.max.x:e.min.x,Ec.y=i.normal.y>0?e.max.y:e.min.y,Ec.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ec)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function jf(r,e){return r-e}function nM(r,e){return r.z-e.z}function iM(r,e){return e.z-r.z}class rM{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const s=this.pool,l=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const c=s[this.index];l.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const Yn=new ct,sM=new He(1,1,1),Kf=new Ka,wc=new Bn,ns=new Rn,ca=new O,Hg=new O,oM=new O,Qf=new rM,An=new sn,Tc=[];function aM(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}function is(r,e){if(r.constructor!==e.constructor){const t=Math.min(r.length,e.length);for(let n=0;n<t;n++)e[n]=r[n]}else{const t=Math.min(r.length,e.length);e.set(new r.constructor(r.buffer,0,t))}}class cv extends sn{constructor(e,t,n=t*2,i){super(new _t,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ki(t,e,e,bn,jn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new ki(t,e,e,qa,fr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new ki(t,e,e,bn,jn);n.colorSpace=It.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const l=e.getAttribute(s),{array:c,itemSize:u,normalized:h}=l,f=new c.constructor(n*u),p=new kt(f,u,h);t.setAttribute(s,p)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new kt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Yn),this.getBoundingBoxAt(s,wc).applyMatrix4(Yn),e.union(wc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Yn),this.getBoundingSphereAt(s,ns).applyMatrix4(Yn),e.union(ns)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(jf),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Yn.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const l=this._colorsTexture;return l&&(sM.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const l=e.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(jf),u=this._availableGeometryIds.shift(),s[u]=i):(u=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(u,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._geometryInfo[e];if(i&&l.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const f in n.attributes){const p=t.getAttribute(f),m=n.getAttribute(f);aM(p,m,u);const g=p.itemSize;for(let y=p.count,M=h;y<M;y++){const x=u+y;for(let v=0;v<g;v++)m.setComponent(x,v,0)}m.needsUpdate=!0,m.addUpdateRange(u*g,h*g)}if(i){const f=c.indexStart,p=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let m=0;m<l.count;m++)s.setX(f+m,u+l.getX(m));for(let m=l.count,g=p;m<g;m++)s.setX(f+m,u);s.needsUpdate=!0,s.addUpdateRange(f,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),s=this.geometry;for(let l=0,c=n.length;l<c;l++){const u=i[l],h=n[u];if(h.active!==!1){if(s.index!==null){if(h.indexStart!==t){const{indexStart:f,vertexStart:p,reservedIndexCount:m}=h,g=s.index,y=g.array,M=e-p;for(let x=f;x<f+m;x++)y[x]=y[x]+M;g.array.copyWithin(t,f,f+m),g.addUpdateRange(t,m),h.indexStart=t}t+=h.reservedIndexCount}if(h.vertexStart!==e){const{vertexStart:f,reservedVertexCount:p}=h,m=s.attributes;for(const g in m){const y=m[g],{array:M,itemSize:x}=y;M.copyWithin(e*x,f*x,(f+p)*x),y.addUpdateRange(e*x,p*x)}h.vertexStart=e}e+=h.reservedVertexCount,h.start=s.index?h.indexStart:h.vertexStart,this._nextIndexStart=s.index?h.indexStart+h.reservedIndexCount:0,this._nextVertexStart=h.vertexStart+h.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const s=new Bn,l=n.index,c=n.attributes.position;for(let u=i.start,h=i.start+i.count;u<h;u++){let f=u;l&&(f=l.getX(f)),s.expandByPoint(ca.fromBufferAttribute(c,f))}i.boundingBox=s}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const s=new Rn;this.getBoundingBoxAt(e,wc),wc.getCenter(s.center);const l=n.index,c=n.attributes.position;let u=0;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),ca.fromBufferAttribute(c,p),u=Math.max(u,s.center.distanceToSquared(ca))}s.radius=Math.sqrt(u),i.boundingSphere=s}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(jf);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),s=new Int32Array(e);is(this._multiDrawCounts,i),is(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=e;const l=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;l.dispose(),this._initIndirectTexture(),is(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),is(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),is(u.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new _t,this._initializeGeometry(s));const l=this.geometry;s.index&&is(s.index.array,l.index.array);for(const c in s.attributes)is(s.attributes[c].array,l.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,l=this.geometry;An.material=this.material,An.geometry.index=l.index,An.geometry.attributes=l.attributes,An.geometry.boundingBox===null&&(An.geometry.boundingBox=new Bn),An.geometry.boundingSphere===null&&(An.geometry.boundingSphere=new Rn);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const h=n[c].geometryIndex,f=i[h];An.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(c,An.matrixWorld).premultiply(s),this.getBoundingBoxAt(h,An.geometry.boundingBox),this.getBoundingSphereAt(h,An.geometry.boundingSphere),An.raycast(e,Tc);for(let p=0,m=Tc.length;p<m;p++){const g=Tc[p];g.object=this,g.batchId=c,t.push(g)}Tc.length=0}An.material=null,An.geometry.index=null,An.geometry.attributes={},An.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._instanceInfo,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._geometryInfo,m=this.perObjectFrustumCulled,g=this._indirectTexture,y=g.image.data;m&&(Yn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Kf.setFromProjectionMatrix(Yn,e.coordinateSystem));let M=0;if(this.sortObjects){Yn.copy(this.matrixWorld).invert(),ca.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Yn),Hg.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Yn);for(let E=0,w=u.length;E<w;E++)if(u[E].visible&&u[E].active){const T=u[E].geometryIndex;this.getMatrixAt(E,Yn),this.getBoundingSphereAt(T,ns).applyMatrix4(Yn);let L=!1;if(m&&(L=!Kf.intersectsSphere(ns)),!L){const P=p[T],N=oM.subVectors(ns.center,ca).dot(Hg);Qf.push(P.start,P.count,N,E)}}const x=Qf.list,v=this.customSort;v===null?x.sort(s.transparent?iM:nM):v.call(this,x,n);for(let E=0,w=x.length;E<w;E++){const T=x[E];h[M]=T.start*c,f[M]=T.count,y[M]=T.index,M++}Qf.reset()}else for(let x=0,v=u.length;x<v;x++)if(u[x].visible&&u[x].active){const E=u[x].geometryIndex;let w=!1;if(m&&(this.getMatrixAt(x,Yn),this.getBoundingSphereAt(E,ns).applyMatrix4(Yn),w=!Kf.intersectsSphere(ns)),!w){const T=p[E];h[M]=T.start*c,f[M]=T.count,y[M]=x,M++}}g.needsUpdate=!0,this._multiDrawCount=M,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class zn extends Pn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new He(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ou=new O,Fu=new O,Vg=new ct,ua=new Cs,Ac=new Rn,$f=new O,Gg=new O;class Fr extends Nt{constructor(e=new _t,t=new zn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Ou.fromBufferAttribute(t,i-1),Fu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ou.distanceTo(Fu);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ac.copy(n.boundingSphere),Ac.applyMatrix4(i),Ac.radius+=s,e.ray.intersectsSphere(Ac)===!1)return;Vg.copy(i).invert(),ua.copy(e.ray).applyMatrix4(Vg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=this.isLineSegments?2:1,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),y=Math.min(f.count,l.start+l.count);for(let M=g,x=y-1;M<x;M+=h){const v=f.getX(M),E=f.getX(M+1),w=bc(this,e,ua,u,v,E,M);w&&t.push(w)}if(this.isLineLoop){const M=f.getX(y-1),x=f.getX(g),v=bc(this,e,ua,u,M,x,y-1);v&&t.push(v)}}else{const g=Math.max(0,l.start),y=Math.min(m.count,l.start+l.count);for(let M=g,x=y-1;M<x;M+=h){const v=bc(this,e,ua,u,M,M+1,M);v&&t.push(v)}if(this.isLineLoop){const M=bc(this,e,ua,u,y-1,g,y-1);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function bc(r,e,t,n,i,s,l){const c=r.geometry.attributes.position;if(Ou.fromBufferAttribute(c,i),Fu.fromBufferAttribute(c,s),t.distanceSqToSegment(Ou,Fu,$f,Gg)>n)return;$f.applyMatrix4(r.matrixWorld);const h=e.ray.origin.distanceTo($f);if(!(h<e.near||h>e.far))return{distance:h,point:Gg.clone().applyMatrix4(r.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:r}}const Wg=new O,Xg=new O;class Wi extends Fr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Wg.fromBufferAttribute(t,i),Xg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Wg.distanceTo(Xg);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class uv extends Fr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class ap extends Pn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new He(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Yg=new ct,Rd=new Cs,Cc=new Rn,Rc=new O;class hv extends Nt{constructor(e=new _t,t=new ap){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Cc.copy(n.boundingSphere),Cc.applyMatrix4(i),Cc.radius+=s,e.ray.intersectsSphere(Cc)===!1)return;Yg.copy(i).invert(),Rd.copy(e.ray).applyMatrix4(Yg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),g=Math.min(h.count,l.start+l.count);for(let y=m,M=g;y<M;y++){const x=h.getX(y);Rc.fromBufferAttribute(p,x),qg(Rc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),g=Math.min(p.count,l.start+l.count);for(let y=m,M=g;y<M;y++)Rc.fromBufferAttribute(p,y),qg(Rc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function qg(r,e,t,n,i,s,l){const c=Rd.distanceSqToPoint(r);if(c<t){const u=new O;Rd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:l})}}class fv extends jt{constructor(e,t,n,i,s=ln,l=ln,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class lM extends fv{constructor(e,t,n,i,s,l,c,u){super({},e,t,n,i,s,l,c,u),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class cM extends jt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=vn,this.minFilter=vn,this.generateMipmaps=!1,this.needsUpdate=!0}}class th extends jt{constructor(e,t,n,i,s,l,c,u,h,f,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class uM extends th{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=gi,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class hM extends th{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,hr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class fM extends jt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class lp extends jt{constructor(e,t,n=fr,i,s,l,c=vn,u=vn,h,f=wo){if(f!==wo&&f!==To)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Nr(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Ci{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],m=n[i+1]-f,g=(l-f)/m;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new pe:new O);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new O,i=[],s=[],l=[],c=new O,u=new ct;for(let g=0;g<=e;g++){const y=g/e;i[g]=this.getTangentAt(y,new O)}s[0]=new O,l[0]=new O;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),l[g]=l[g-1].clone(),c.crossVectors(i[g-1],i[g]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(ht(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,y))}l[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(ht(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],g*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class nh extends Ci{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new pe){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class dv extends nh{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function cp(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let m=(l-s)/h-(c-s)/(h+f)+(c-l)/f,g=(c-l)/f-(u-l)/(f+p)+(u-c)/p;m*=f,g*=f,i(l,c,m,g)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Pc=new O,ed=new cp,td=new cp,nd=new cp;class pv extends Ci{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new O){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Pc.subVectors(i[0],i[1]).add(i[0]),h=Pc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Pc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Pc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),x=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),ed.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,M,x),td.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,M,x),nd.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,M,x)}else this.curveType==="catmullrom"&&(ed.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),td.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),nd.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(ed.calc(u),td.calc(u),nd.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new O().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Zg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function dM(r,e){const t=1-r;return t*t*e}function pM(r,e){return 2*(1-r)*r*e}function mM(r,e){return r*r*e}function Ta(r,e,t,n){return dM(r,e)+pM(r,t)+mM(r,n)}function gM(r,e){const t=1-r;return t*t*t*e}function _M(r,e){const t=1-r;return 3*t*t*r*e}function vM(r,e){return 3*(1-r)*r*r*e}function yM(r,e){return r*r*r*e}function Aa(r,e,t,n,i){return gM(r,e)+_M(r,t)+vM(r,n)+yM(r,i)}class up extends Ci{constructor(e=new pe,t=new pe,n=new pe,i=new pe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new pe){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(Aa(e,i.x,s.x,l.x,c.x),Aa(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class mv extends Ci{constructor(e=new O,t=new O,n=new O,i=new O){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new O){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(Aa(e,i.x,s.x,l.x,c.x),Aa(e,i.y,s.y,l.y,c.y),Aa(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class hp extends Ci{constructor(e=new pe,t=new pe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new pe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new pe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class gv extends Ci{constructor(e=new O,t=new O){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new O){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new O){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class fp extends Ci{constructor(e=new pe,t=new pe,n=new pe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new pe){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(Ta(e,i.x,s.x,l.x),Ta(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class dp extends Ci{constructor(e=new O,t=new O,n=new O){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new O){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(Ta(e,i.x,s.x,l.x),Ta(e,i.y,s.y,l.y),Ta(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class pp extends Ci{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new pe){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Zg(c,u.x,h.x,f.x,p.x),Zg(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new pe().fromArray(i))}return this}}var Bu=Object.freeze({__proto__:null,ArcCurve:dv,CatmullRomCurve3:pv,CubicBezierCurve:up,CubicBezierCurve3:mv,EllipseCurve:nh,LineCurve:hp,LineCurve3:gv,QuadraticBezierCurve:fp,QuadraticBezierCurve3:dp,SplineCurve:pp});class _v extends Ci{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Bu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Bu[i.type]().fromJSON(i))}return this}}class Fa extends _v{constructor(e){super(),this.type="Path",this.currentPoint=new pe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new hp(this.currentPoint.clone(),new pe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new fp(this.currentPoint.clone(),new pe(e,t),new pe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new up(this.currentPoint.clone(),new pe(e,t),new pe(n,i),new pe(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new pp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new nh(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Qa extends _t{constructor(e=[new pe(0,-.5),new pe(.5,0),new pe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=ht(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new O,m=new pe,g=new O,y=new O,M=new O;let x=0,v=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,v=e[E+1].y-e[E].y,g.x=v*1,g.y=-x,g.z=v*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[E+1].x-e[E].x,v=e[E+1].y-e[E].y,g.x=v*1,g.y=-x,g.z=v*0,y.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(y)}for(let E=0;E<=t;E++){const w=n+E*f*i,T=Math.sin(w),L=Math.cos(w);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*T,p.y=e[P].y,p.z=e[P].x*L,l.push(p.x,p.y,p.z),m.x=E/t,m.y=P/(e.length-1),c.push(m.x,m.y);const N=u[3*P+0]*T,F=u[3*P+1],R=u[3*P+0]*L;h.push(N,F,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const T=w+E*e.length,L=T,P=T+e.length,N=T+e.length+1,F=T+1;s.push(L,P,F),s.push(N,F,P)}this.setIndex(s),this.setAttribute("position",new Ze(l,3)),this.setAttribute("uv",new Ze(c,2)),this.setAttribute("normal",new Ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qa(e.points,e.segments,e.phiStart,e.phiLength)}}class ih extends Qa{constructor(e=1,t=1,n=4,i=8){const s=new Fa;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ih(e.radius,e.length,e.capSegments,e.radialSegments)}}class rh extends _t{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new O,f=new pe;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[m]/e+1)/2,f.y=(l[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Ze(l,3)),this.setAttribute("normal",new Ze(c,3)),this.setAttribute("uv",new Ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Do extends _t{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],g=[];let y=0;const M=[],x=n/2;let v=0;E(),l===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(f),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(g,2));function E(){const T=new O,L=new O;let P=0;const N=(t-e)/n;for(let F=0;F<=s;F++){const R=[],b=F/s,U=b*(t-e)+e;for(let J=0;J<=i;J++){const Z=J/i,ee=Z*u+c,ce=Math.sin(ee),K=Math.cos(ee);L.x=U*ce,L.y=-b*n+x,L.z=U*K,p.push(L.x,L.y,L.z),T.set(ce,N,K).normalize(),m.push(T.x,T.y,T.z),g.push(Z,1-b),R.push(y++)}M.push(R)}for(let F=0;F<i;F++)for(let R=0;R<s;R++){const b=M[R][F],U=M[R+1][F],J=M[R+1][F+1],Z=M[R][F+1];(e>0||R!==0)&&(f.push(b,U,Z),P+=3),(t>0||R!==s-1)&&(f.push(U,J,Z),P+=3)}h.addGroup(v,P,0),v+=P}function w(T){const L=y,P=new pe,N=new O;let F=0;const R=T===!0?e:t,b=T===!0?1:-1;for(let J=1;J<=i;J++)p.push(0,x*b,0),m.push(0,b,0),g.push(.5,.5),y++;const U=y;for(let J=0;J<=i;J++){const ee=J/i*u+c,ce=Math.cos(ee),K=Math.sin(ee);N.x=R*K,N.y=x*b,N.z=R*ce,p.push(N.x,N.y,N.z),m.push(0,b,0),P.x=ce*.5+.5,P.y=K*.5*b+.5,g.push(P.x,P.y),y++}for(let J=0;J<i;J++){const Z=L+J,ee=U+J;T===!0?f.push(ee,ee+1,Z):f.push(ee+1,ee,Z),F+=3}h.addGroup(v,F,T===!0?1:2),v+=F}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Do(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sh extends Do{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new sh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class kr extends _t{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new Ze(s,3)),this.setAttribute("normal",new Ze(s.slice(),3)),this.setAttribute("uv",new Ze(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new O,T=new O,L=new O;for(let P=0;P<t.length;P+=3)g(t[P+0],w),g(t[P+1],T),g(t[P+2],L),u(w,T,L,E)}function u(E,w,T,L){const P=L+1,N=[];for(let F=0;F<=P;F++){N[F]=[];const R=E.clone().lerp(T,F/P),b=w.clone().lerp(T,F/P),U=P-F;for(let J=0;J<=U;J++)J===0&&F===P?N[F][J]=R:N[F][J]=R.clone().lerp(b,J/U)}for(let F=0;F<P;F++)for(let R=0;R<2*(P-F)-1;R++){const b=Math.floor(R/2);R%2===0?(m(N[F][b+1]),m(N[F+1][b]),m(N[F][b])):(m(N[F][b+1]),m(N[F+1][b+1]),m(N[F+1][b]))}}function h(E){const w=new O;for(let T=0;T<s.length;T+=3)w.x=s[T+0],w.y=s[T+1],w.z=s[T+2],w.normalize().multiplyScalar(E),s[T+0]=w.x,s[T+1]=w.y,s[T+2]=w.z}function f(){const E=new O;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const T=x(E)/2/Math.PI+.5,L=v(E)/Math.PI+.5;l.push(T,1-L)}y(),p()}function p(){for(let E=0;E<l.length;E+=6){const w=l[E+0],T=l[E+2],L=l[E+4],P=Math.max(w,T,L),N=Math.min(w,T,L);P>.9&&N<.1&&(w<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),L<.2&&(l[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function g(E,w){const T=E*3;w.x=e[T+0],w.y=e[T+1],w.z=e[T+2]}function y(){const E=new O,w=new O,T=new O,L=new O,P=new pe,N=new pe,F=new pe;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),T.set(s[R+6],s[R+7],s[R+8]),P.set(l[b+0],l[b+1]),N.set(l[b+2],l[b+3]),F.set(l[b+4],l[b+5]),L.copy(E).add(w).add(T).divideScalar(3);const U=x(L);M(P,b+0,E,U),M(N,b+2,w,U),M(F,b+4,T,U)}}function M(E,w,T,L){L<0&&E.x===1&&(l[w]=E.x-1),T.x===0&&T.z===0&&(l[w]=L/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function v(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kr(e.vertices,e.indices,e.radius,e.details)}}class oh extends kr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oh(e.radius,e.detail)}}const Ic=new O,Lc=new O,id=new O,Dc=new Jn;class vv extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Ss*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:v}=Dc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Dc.getNormal(id),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,T=p[E],L=p[w],P=Dc[f[E]],N=Dc[f[w]],F=`${T}_${L}`,R=`${L}_${T}`;R in m&&m[R]?(id.dot(m[R].normal)<=s&&(g.push(P.x,P.y,P.z),g.push(N.x,N.y,N.z)),m[R]=null):F in m||(m[F]={index0:h[E],index1:h[w],normal:id.clone()})}}for(const y in m)if(m[y]){const{index0:M,index1:x}=m[y];Ic.fromBufferAttribute(c,M),Lc.fromBufferAttribute(c,x),g.push(Ic.x,Ic.y,Ic.z),g.push(Lc.x,Lc.y,Lc.z)}this.setAttribute("position",new Ze(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Es extends Fa{constructor(e){super(e),this.uuid=si(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Fa().fromJSON(i))}return this}}function xM(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=yv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h;if(n&&(s=TM(r,e,s,t)),r.length>80*t){c=1/0,u=1/0;let f=-1/0,p=-1/0;for(let m=t;m<i;m+=t){const g=r[m],y=r[m+1];g<c&&(c=g),y<u&&(u=y),g>f&&(f=g),y>p&&(p=y)}h=Math.max(f-c,p-u),h=h!==0?32767/h:0}return Ba(s,l,t,c,u,h,0),l}function yv(r,e,t,n,i){let s;if(i===OM(r,e,t,n)>0)for(let l=e;l<t;l+=n)s=Jg(l/n|0,r[l],r[l+1],s);else for(let l=t-n;l>=e;l-=n)s=Jg(l/n|0,r[l],r[l+1],s);return s&&Ro(s,s.next)&&(ka(s),s=s.next),s}function bs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Ro(t,t.next)||qt(t.prev,t,t.next)===0)){if(ka(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ba(r,e,t,n,i,s,l){if(!r)return;!l&&s&&PM(r,n,i,s);let c=r;for(;r.prev!==r.next;){const u=r.prev,h=r.next;if(s?MM(r,n,i,s):SM(r)){e.push(u.i,r.i,h.i),ka(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=EM(bs(r),e),Ba(r,e,t,n,i,s,2)):l===2&&wM(r,e,t,n,i,s):Ba(bs(r),e,t,n,i,s,1);break}}}function SM(r){const e=r.prev,t=r,n=r.next;if(qt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=Math.min(i,s,l),p=Math.min(c,u,h),m=Math.max(i,s,l),g=Math.max(c,u,h);let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&ma(i,c,s,u,l,h,y.x,y.y)&&qt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function MM(r,e,t,n){const i=r.prev,s=r,l=r.next;if(qt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,m=l.y,g=Math.min(c,u,h),y=Math.min(f,p,m),M=Math.max(c,u,h),x=Math.max(f,p,m),v=Pd(g,y,e,t,n),E=Pd(M,x,e,t,n);let w=r.prevZ,T=r.nextZ;for(;w&&w.z>=v&&T&&T.z<=E;){if(w.x>=g&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&ma(c,f,u,p,h,m,w.x,w.y)&&qt(w.prev,w,w.next)>=0||(w=w.prevZ,T.x>=g&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&ma(c,f,u,p,h,m,T.x,T.y)&&qt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;w&&w.z>=v;){if(w.x>=g&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&ma(c,f,u,p,h,m,w.x,w.y)&&qt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;T&&T.z<=E;){if(T.x>=g&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&ma(c,f,u,p,h,m,T.x,T.y)&&qt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function EM(r,e){let t=r;do{const n=t.prev,i=t.next.next;!Ro(n,i)&&Sv(n,t,t.next,i)&&za(n,i)&&za(i,n)&&(e.push(n.i,t.i,i.i),ka(t),ka(t.next),t=r=i),t=t.next}while(t!==r);return bs(t)}function wM(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&DM(l,c)){let u=Mv(l,c);l=bs(l,l.next),u=bs(u,u.next),Ba(l,e,t,n,i,s,0),Ba(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function TM(r,e,t,n){const i=[];for(let s=0,l=e.length;s<l;s++){const c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=yv(r,c,u,n,!1);h===h.next&&(h.steiner=!0),i.push(LM(h))}i.sort(AM);for(let s=0;s<i.length;s++)t=bM(i[s],t);return t}function AM(r,e){let t=r.x-e.x;if(t===0&&(t=r.y-e.y,t===0)){const n=(r.next.y-r.y)/(r.next.x-r.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function bM(r,e){const t=CM(r,e);if(!t)return e;const n=Mv(t,r);return bs(n,n.next),bs(t,t.next)}function CM(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,l;if(Ro(r,t))return t;do{if(Ro(r,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const p=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=n&&p>s&&(s=p,l=t.x<t.next.x?t:t.next,p===n))return l}t=t.next}while(t!==e);if(!l)return null;const c=l,u=l.x,h=l.y;let f=1/0;t=l;do{if(n>=t.x&&t.x>=u&&n!==t.x&&xv(i<h?n:s,i,u,h,i<h?s:n,i,t.x,t.y)){const p=Math.abs(i-t.y)/(n-t.x);za(t,r)&&(p<f||p===f&&(t.x>l.x||t.x===l.x&&RM(l,t)))&&(l=t,f=p)}t=t.next}while(t!==c);return l}function RM(r,e){return qt(r.prev,r,e.prev)<0&&qt(e.next,r,r.next)<0}function PM(r,e,t,n){let i=r;do i.z===0&&(i.z=Pd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,IM(i)}function IM(r){let e,t=1;do{let n=r,i;r=null;let s=null;for(e=0;n;){e++;let l=n,c=0;for(let h=0;h<t&&(c++,l=l.nextZ,!!l);h++);let u=t;for(;c>0||u>0&&l;)c!==0&&(u===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;n=l}s.nextZ=null,t*=2}while(e>1);return r}function Pd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function LM(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function xv(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function ma(r,e,t,n,i,s,l,c){return!(r===l&&e===c)&&xv(r,e,t,n,i,s,l,c)}function DM(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!NM(r,e)&&(za(r,e)&&za(e,r)&&UM(r,e)&&(qt(r.prev,r,e.prev)||qt(r,e.prev,e))||Ro(r,e)&&qt(r.prev,r,r.next)>0&&qt(e.prev,e,e.next)>0)}function qt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Ro(r,e){return r.x===e.x&&r.y===e.y}function Sv(r,e,t,n){const i=Uc(qt(r,e,t)),s=Uc(qt(r,e,n)),l=Uc(qt(t,n,r)),c=Uc(qt(t,n,e));return!!(i!==s&&l!==c||i===0&&Nc(r,t,e)||s===0&&Nc(r,n,e)||l===0&&Nc(t,r,n)||c===0&&Nc(t,e,n))}function Nc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Uc(r){return r>0?1:r<0?-1:0}function NM(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Sv(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function za(r,e){return qt(r.prev,r,r.next)<0?qt(r,e,r.next)>=0&&qt(r,r.prev,e)>=0:qt(r,e,r.prev)<0||qt(r,r.next,e)<0}function UM(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Mv(r,e){const t=Id(r.i,r.x,r.y),n=Id(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Jg(r,e,t,n){const i=Id(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ka(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Id(r,e,t){return{i:r,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function OM(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class FM{static triangulate(e,t,n=2){return xM(e,t,n)}}class Hi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Hi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];jg(e),Kg(n,e);let l=e.length;t.forEach(jg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,Kg(n,t[u]);const c=FM.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function jg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Kg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class ah extends _t{constructor(e=new Es([new pe(.5,.5),new pe(-.5,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Ze(i,3)),this.setAttribute("uv",new Ze(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:BM;let w,T=!1,L,P,N,F;v&&(w=v.getSpacedPoints(f),T=!0,m=!1,L=v.computeFrenetFrames(f,!1),P=new O,N=new O,F=new O),m||(x=0,g=0,y=0,M=0);const R=c.extractPoints(h);let b=R.shape;const U=R.holes;if(!Hi.isClockWise(b)){b=b.reverse();for(let ge=0,ve=U.length;ge<ve;ge++){const he=U[ge];Hi.isClockWise(he)&&(U[ge]=he.reverse())}}function Z(ge){const he=10000000000000001e-36;let be=ge[0];for(let ue=1;ue<=ge.length;ue++){const D=ue%ge.length,C=ge[D],W=C.x-be.x,te=C.y-be.y,de=W*W+te*te,ae=Math.max(Math.abs(C.x),Math.abs(C.y),Math.abs(be.x),Math.abs(be.y)),Ve=he*ae*ae;if(de<=Ve){ge.splice(D,1),ue--;continue}be=C}}Z(b),U.forEach(Z);const ee=U.length,ce=b;for(let ge=0;ge<ee;ge++){const ve=U[ge];b=b.concat(ve)}function K(ge,ve,he){return ve||console.error("THREE.ExtrudeGeometry: vec does not exist"),ge.clone().addScaledVector(ve,he)}const ye=b.length;function H(ge,ve,he){let be,ue,D;const C=ge.x-ve.x,W=ge.y-ve.y,te=he.x-ge.x,de=he.y-ge.y,ae=C*C+W*W,Ve=C*de-W*te;if(Math.abs(Ve)>Number.EPSILON){const Te=Math.sqrt(ae),ze=Math.sqrt(te*te+de*de),vt=ve.x-W/Te,Se=ve.y+C/Te,ke=he.x-de/ze,rt=he.y+te/ze,st=((ke-vt)*de-(rt-Se)*te)/(C*de-W*te);be=vt+C*st-ge.x,ue=Se+W*st-ge.y;const Oe=be*be+ue*ue;if(Oe<=2)return new pe(be,ue);D=Math.sqrt(Oe/2)}else{let Te=!1;C>Number.EPSILON?te>Number.EPSILON&&(Te=!0):C<-Number.EPSILON?te<-Number.EPSILON&&(Te=!0):Math.sign(W)===Math.sign(de)&&(Te=!0),Te?(be=-W,ue=C,D=Math.sqrt(ae)):(be=C,ue=W,D=Math.sqrt(ae/2))}return new pe(be/D,ue/D)}const se=[];for(let ge=0,ve=ce.length,he=ve-1,be=ge+1;ge<ve;ge++,he++,be++)he===ve&&(he=0),be===ve&&(be=0),se[ge]=H(ce[ge],ce[he],ce[be]);const re=[];let _e,Ie=se.concat();for(let ge=0,ve=ee;ge<ve;ge++){const he=U[ge];_e=[];for(let be=0,ue=he.length,D=ue-1,C=be+1;be<ue;be++,D++,C++)D===ue&&(D=0),C===ue&&(C=0),_e[be]=H(he[be],he[D],he[C]);re.push(_e),Ie=Ie.concat(_e)}const qe=[],oe=[];for(let ge=0;ge<x;ge++){const ve=ge/x,he=g*Math.cos(ve*Math.PI/2),be=y*Math.sin(ve*Math.PI/2)+M;for(let ue=0,D=ce.length;ue<D;ue++){const C=K(ce[ue],se[ue],be);ut(C.x,C.y,-he),ve==0&&qe.push(C)}for(let ue=0,D=ee;ue<D;ue++){const C=U[ue];_e=re[ue];const W=[];for(let te=0,de=C.length;te<de;te++){const ae=K(C[te],_e[te],be);ut(ae.x,ae.y,-he),ve==0&&W.push(ae)}ve==0&&oe.push(W)}}const xe=Hi.triangulateShape(qe,oe),Ce=xe.length,Ae=y+M;for(let ge=0;ge<ye;ge++){const ve=m?K(b[ge],Ie[ge],Ae):b[ge];T?(N.copy(L.normals[0]).multiplyScalar(ve.x),P.copy(L.binormals[0]).multiplyScalar(ve.y),F.copy(w[0]).add(N).add(P),ut(F.x,F.y,F.z)):ut(ve.x,ve.y,0)}for(let ge=1;ge<=f;ge++)for(let ve=0;ve<ye;ve++){const he=m?K(b[ve],Ie[ve],Ae):b[ve];T?(N.copy(L.normals[ge]).multiplyScalar(he.x),P.copy(L.binormals[ge]).multiplyScalar(he.y),F.copy(w[ge]).add(N).add(P),ut(F.x,F.y,F.z)):ut(he.x,he.y,p/f*ge)}for(let ge=x-1;ge>=0;ge--){const ve=ge/x,he=g*Math.cos(ve*Math.PI/2),be=y*Math.sin(ve*Math.PI/2)+M;for(let ue=0,D=ce.length;ue<D;ue++){const C=K(ce[ue],se[ue],be);ut(C.x,C.y,p+he)}for(let ue=0,D=U.length;ue<D;ue++){const C=U[ue];_e=re[ue];for(let W=0,te=C.length;W<te;W++){const de=K(C[W],_e[W],be);T?ut(de.x,de.y+w[f-1].y,w[f-1].x+he):ut(de.x,de.y,p+he)}}}tt(),St();function tt(){const ge=i.length/3;if(m){let ve=0,he=ye*ve;for(let be=0;be<Ce;be++){const ue=xe[be];bt(ue[2]+he,ue[1]+he,ue[0]+he)}ve=f+x*2,he=ye*ve;for(let be=0;be<Ce;be++){const ue=xe[be];bt(ue[0]+he,ue[1]+he,ue[2]+he)}}else{for(let ve=0;ve<Ce;ve++){const he=xe[ve];bt(he[2],he[1],he[0])}for(let ve=0;ve<Ce;ve++){const he=xe[ve];bt(he[0]+ye*f,he[1]+ye*f,he[2]+ye*f)}}n.addGroup(ge,i.length/3-ge,0)}function St(){const ge=i.length/3;let ve=0;$e(ce,ve),ve+=ce.length;for(let he=0,be=U.length;he<be;he++){const ue=U[he];$e(ue,ve),ve+=ue.length}n.addGroup(ge,i.length/3-ge,1)}function $e(ge,ve){let he=ge.length;for(;--he>=0;){const be=he;let ue=he-1;ue<0&&(ue=ge.length-1);for(let D=0,C=f+x*2;D<C;D++){const W=ye*D,te=ye*(D+1),de=ve+be+W,ae=ve+ue+W,Ve=ve+ue+te,Te=ve+be+te;it(de,ae,Ve,Te)}}}function ut(ge,ve,he){u.push(ge),u.push(ve),u.push(he)}function bt(ge,ve,he){z(ge),z(ve),z(he);const be=i.length/3,ue=E.generateTopUV(n,i,be-3,be-2,be-1);Vt(ue[0]),Vt(ue[1]),Vt(ue[2])}function it(ge,ve,he,be){z(ge),z(ve),z(be),z(ve),z(he),z(be);const ue=i.length/3,D=E.generateSideWallUV(n,i,ue-6,ue-3,ue-2,ue-1);Vt(D[0]),Vt(D[1]),Vt(D[3]),Vt(D[1]),Vt(D[2]),Vt(D[3])}function z(ge){i.push(u[ge*3+0]),i.push(u[ge*3+1]),i.push(u[ge*3+2])}function Vt(ge){s.push(ge.x),s.push(ge.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return zM(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Bu[i.type]().fromJSON(i)),new ah(n,e.options)}}const BM={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new pe(s,l),new pe(c,u),new pe(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new pe(l,1-u),new pe(h,1-p),new pe(m,1-y),new pe(M,1-v)]:[new pe(c,1-u),new pe(f,1-p),new pe(g,1-y),new pe(x,1-v)]}};function zM(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class lh extends kr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lh(e.radius,e.detail)}}class $a extends kr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new $a(e.radius,e.detail)}}class No extends _t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,g=[],y=[],M=[],x=[];for(let v=0;v<f;v++){const E=v*m-l;for(let w=0;w<h;w++){const T=w*p-s;y.push(T,-E,0),M.push(0,0,1),x.push(w/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let E=0;E<c;E++){const w=E+h*v,T=E+h*(v+1),L=E+1+h*(v+1),P=E+1+h*v;g.push(w,T,P),g.push(T,L,P)}this.setIndex(g),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(M,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new No(e.width,e.height,e.widthSegments,e.heightSegments)}}class ch extends _t{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new O,y=new pe;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const v=s+x/n*l;g.x=p*Math.cos(v),g.y=p*Math.sin(v),u.push(g.x,g.y,g.z),h.push(0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let M=0;M<i;M++){const x=M*(n+1);for(let v=0;v<n;v++){const E=v+x,w=E,T=E+n+1,L=E+n+2,P=E+1;c.push(w,T,P),c.push(T,L,P)}}this.setIndex(c),this.setAttribute("position",new Ze(u,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ch(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class uh extends _t{constructor(e=new Es([new pe(0,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ze(i,3)),this.setAttribute("normal",new Ze(s,3)),this.setAttribute("uv",new Ze(l,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const y=m.holes;Hi.isClockWise(g)===!1&&(g=g.reverse());for(let x=0,v=y.length;x<v;x++){const E=y[x];Hi.isClockWise(E)===!0&&(y[x]=E.reverse())}const M=Hi.triangulateShape(g,y);for(let x=0,v=y.length;x<v;x++){const E=y[x];g=g.concat(E)}for(let x=0,v=g.length;x<v;x++){const E=g[x];i.push(E.x,E.y,0),s.push(0,0,1),l.push(E.x,E.y)}for(let x=0,v=M.length;x<v;x++){const E=M[x],w=E[0]+p,T=E[1]+p,L=E[2]+p;n.push(w,T,L),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return kM(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new uh(n,e.curveSegments)}}function kM(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class el extends _t{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new O,m=new O,g=[],y=[],M=[],x=[];for(let v=0;v<=n;v++){const E=[],w=v/n;let T=0;v===0&&l===0?T=.5/t:v===n&&u===Math.PI&&(T=-.5/t);for(let L=0;L<=t;L++){const P=L/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+w*c),p.y=e*Math.cos(l+w*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+w*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),x.push(P+T,1-w),E.push(h++)}f.push(E)}for(let v=0;v<n;v++)for(let E=0;E<t;E++){const w=f[v][E+1],T=f[v][E],L=f[v+1][E],P=f[v+1][E+1];(v!==0||l>0)&&g.push(w,T,P),(v!==n-1||u<Math.PI)&&g.push(T,L,P)}this.setIndex(g),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(M,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new el(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class hh extends kr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hh(e.radius,e.detail)}}class fh extends _t{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new O,p=new O,m=new O;for(let g=0;g<=n;g++)for(let y=0;y<=i;y++){const M=y/i*s,x=g/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let y=1;y<=i;y++){const M=(i+1)*g+y-1,x=(i+1)*(g-1)+y-1,v=(i+1)*(g-1)+y,E=(i+1)*g+y;l.push(M,x,E),l.push(x,v,E)}this.setIndex(l),this.setAttribute("position",new Ze(c,3)),this.setAttribute("normal",new Ze(u,3)),this.setAttribute("uv",new Ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class dh extends _t{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new O,m=new O,g=new O,y=new O,M=new O,x=new O,v=new O;for(let w=0;w<=n;++w){const T=w/n*s*Math.PI*2;E(T,s,l,e,g),E(T+.01,s,l,e,y),x.subVectors(y,g),v.addVectors(y,g),M.crossVectors(x,v),v.crossVectors(M,x),M.normalize(),v.normalize();for(let L=0;L<=i;++L){const P=L/i*Math.PI*2,N=-t*Math.cos(P),F=t*Math.sin(P);p.x=g.x+(N*v.x+F*M.x),p.y=g.y+(N*v.y+F*M.y),p.z=g.z+(N*v.z+F*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(w/n),f.push(L/i)}}for(let w=1;w<=n;w++)for(let T=1;T<=i;T++){const L=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),N=(i+1)*w+T,F=(i+1)*(w-1)+T;c.push(L,P,F),c.push(P,N,F)}this.setIndex(c),this.setAttribute("position",new Ze(u,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(f,2));function E(w,T,L,P,N){const F=Math.cos(w),R=Math.sin(w),b=L/T*w,U=Math.cos(b);N.x=P*(2+U)*.5*F,N.y=P*(2+U)*R*.5,N.z=P*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new dh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ph extends _t{constructor(e=new dp(new O(-1,-1,0),new O(-1,1,0),new O(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new O,u=new O,h=new pe;let f=new O;const p=[],m=[],g=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(g,2));function M(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),v()}function x(w){f=e.getPointAt(w/t,f);const T=l.normals[w],L=l.binormals[w];for(let P=0;P<=i;P++){const N=P/i*Math.PI*2,F=Math.sin(N),R=-Math.cos(N);u.x=R*T.x+F*L.x,u.y=R*T.y+F*L.y,u.z=R*T.z+F*L.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let w=1;w<=t;w++)for(let T=1;T<=i;T++){const L=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),N=(i+1)*w+T,F=(i+1)*(w-1)+T;y.push(L,P,F),y.push(P,N,F)}}function E(){for(let w=0;w<=t;w++)for(let T=0;T<=i;T++)h.x=w/t,h.y=T/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ph(new Bu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Ev extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new O,s=new O;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let y=m,M=m+g;y<M;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,E),Qg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),Qg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Qg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var $g=Object.freeze({__proto__:null,BoxGeometry:Rs,CapsuleGeometry:ih,CircleGeometry:rh,ConeGeometry:sh,CylinderGeometry:Do,DodecahedronGeometry:oh,EdgesGeometry:vv,ExtrudeGeometry:ah,IcosahedronGeometry:lh,LatheGeometry:Qa,OctahedronGeometry:$a,PlaneGeometry:No,PolyhedronGeometry:kr,RingGeometry:ch,ShapeGeometry:uh,SphereGeometry:el,TetrahedronGeometry:hh,TorusGeometry:fh,TorusKnotGeometry:dh,TubeGeometry:ph,WireframeGeometry:Ev});class wv extends Pn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new He(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Tv extends bi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class mp extends Pn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new He(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new oi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Av extends mp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ht(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new He(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new He(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new He(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class bv extends Pn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new He(16777215),this.specular=new He(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new oi,this.combine=Ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cv extends Pn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new He(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Rv extends Pn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Pv extends Pn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new He(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new oi,this.combine=Ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class gp extends Pn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=k_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class _p extends Pn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Iv extends Pn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new He(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Lv extends zn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function vs(r,e){return!r||r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Dv(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Nv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Ld(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function vp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push(...l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function HM(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const y=h.times[g]*i;if(!(y<t||y>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=vs(p,h.times.constructor),h.values=vs(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function VM(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const v=f,E=p-f;M=c.values.slice(v,E)}else if(s>=c.times[y]){const v=y*p+f,E=v+p-f;M=c.values.slice(v,E)}else{const v=c.createInterpolant(),E=f,w=p-f;v.evaluate(s),M=v.resultBuffer.slice(E,w)}u==="quaternion"&&new Cn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let v=0;v<x;++v){const E=v*g+m;if(u==="quaternion")Cn.multiplyQuaternionsFlat(h.values,E,M,0,h.values,E);else{const w=g-m*2;for(let T=0;T<w;++T)h.values[E+T]-=M[T]}}}return r.blendMode=$d,r}class GM{static convertArray(e,t){return vs(e,t)}static isTypedArray(e){return Dv(e)}static getKeyframeOrder(e){return Nv(e)}static sortedArray(e,t,n){return Ld(e,t,n)}static flattenJSON(e,t,n,i){vp(e,t,n,i)}static subclip(e,t,n,i,s=30){return HM(e,t,n,i,s)}static makeClipAdditive(e,t=0,n=e,i=30){return VM(e,t,n,i)}}class tl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Uv extends tl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:gs,endingEnd:gs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case _s:s=e,c=2*t-n;break;case La:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case _s:l=e,u=2*n-t;break;case La:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,v=-m*x+2*m*M-m*y,E=(1+m)*x+(-1.5-2*m)*M+(-.5+m)*y+1,w=(-1-g)*x+(1.5+g)*M+.5*y,T=g*x-g*M;for(let L=0;L!==c;++L)s[L]=v*l[f+L]+E*l[h+L]+w*l[u+L]+T*l[p+L];return s}}class yp extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*f;return s}}class Ov extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class _i{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=vs(t,this.TimeBufferType),this.values=vs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:vs(e.times,Array),values:vs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ov(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new yp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Uv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ia:t=this.InterpolantFactoryMethodDiscrete;break;case Uu:t=this.InterpolantFactoryMethodLinear;break;case Jc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ia;case this.InterpolantFactoryMethodLinear:return Uu;case this.InterpolantFactoryMethodSmooth:return Jc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&Dv(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Jc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,g=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[m+y]||M!==t[g+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}_i.prototype.ValueTypeName="";_i.prototype.TimeBufferType=Float32Array;_i.prototype.ValueBufferType=Float32Array;_i.prototype.DefaultInterpolation=Uu;class Ps extends _i{constructor(e,t,n){super(e,t,n)}}Ps.prototype.ValueTypeName="bool";Ps.prototype.ValueBufferType=Array;Ps.prototype.DefaultInterpolation=Ia;Ps.prototype.InterpolantFactoryMethodLinear=void 0;Ps.prototype.InterpolantFactoryMethodSmooth=void 0;class xp extends _i{constructor(e,t,n,i){super(e,t,n,i)}}xp.prototype.ValueTypeName="color";class Ha extends _i{constructor(e,t,n,i){super(e,t,n,i)}}Ha.prototype.ValueTypeName="number";class Fv extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Cn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class nl extends _i{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new Fv(this.times,this.values,this.getValueSize(),e)}}nl.prototype.ValueTypeName="quaternion";nl.prototype.InterpolantFactoryMethodSmooth=void 0;class Is extends _i{constructor(e,t,n){super(e,t,n)}}Is.prototype.ValueTypeName="string";Is.prototype.ValueBufferType=Array;Is.prototype.DefaultInterpolation=Ia;Is.prototype.InterpolantFactoryMethodLinear=void 0;Is.prototype.InterpolantFactoryMethodSmooth=void 0;class Va extends _i{constructor(e,t,n,i){super(e,t,n,i)}}Va.prototype.ValueTypeName="vector";class Ga{constructor(e="",t=-1,n=[],i=Zu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=si(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(XM(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(_i.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=Nv(u);u=Ld(u,1,f),h=Ld(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Ha(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,y,M){if(g.length!==0){const x=[],v=[];vp(g,x,v,y),x.length!==0&&M.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let M=0;M<m[y].morphTargets.length;M++)g[m[y].morphTargets[M]]=-1;for(const M in g){const x=[],v=[];for(let E=0;E!==m[y].morphTargets.length;++E){const w=m[y];x.push(w.time),v.push(w.morphTarget===M?1:0)}i.push(new Ha(".morphTargetInfluence["+M+"]",x,v))}u=g.length*l}else{const g=".bones["+t[p].name+"]";n(Va,g+".position",m,"pos",i),n(nl,g+".quaternion",m,"rot",i),n(Va,g+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function WM(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ha;case"vector":case"vector2":case"vector3":case"vector4":return Va;case"color":return xp;case"quaternion":return nl;case"bool":case"boolean":return Ps;case"string":return Is}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function XM(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=WM(r.type);if(r.times===void 0){const t=[],n=[];vp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ar={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Sp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],y=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return y}return null}}}const Bv=new Sp;class Kn{constructor(e){this.manager=e!==void 0?e:Bv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Kn.DEFAULT_MATERIAL_NAME="__DEFAULT";const ir={};class YM extends Error{constructor(e,t){super(e),this.response=t}}class dr extends Kn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ar.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ir[e]!==void 0){ir[e].push({onLoad:t,onProgress:n,onError:i});return}ir[e]=[],ir[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=ir[e],p=h.body.getReader(),m=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),g=m?parseInt(m):0,y=g!==0;let M=0;const x=new ReadableStream({start(v){E();function E(){p.read().then(({done:w,value:T})=>{if(w)v.close();else{M+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:g});for(let P=0,N=f.length;P<N;P++){const F=f[P];F.onProgress&&F.onProgress(L)}v.enqueue(T),E()}},w=>{v.error(w)})}}});return new Response(x)}else throw new YM(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c==="")return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(y=>g.decode(y))}}}).then(h=>{ar.add(e,h);const f=ir[e];delete ir[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=ir[e];if(f===void 0)throw this.manager.itemError(e),h;delete ir[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class qM extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new dr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ga.parse(e[n]);t.push(i)}return t}}class ZM extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new th,u=new dr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);l[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=ln),c.image=l,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let y=0;y<g;y++){l[y]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+M]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=ln),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Wa extends Kn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ar.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Oa("img");function u(){f(),ar.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class JM extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=new ja;s.colorSpace=Zn;const l=new Wa(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class jM extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ki,c=new dr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:gi,l.wrapT=h.wrapT!==void 0?h.wrapT:gi,l.magFilter=h.magFilter!==void 0?h.magFilter:ln,l.minFilter=h.minFilter!==void 0?h.minFilter:ln,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(l.colorSpace=h.colorSpace),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Bi),h.mipmapCount===1&&(l.minFilter=ln),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class KM extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=new jt,l=new Wa(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Hr extends Nt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new He(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class zv extends Hr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new He(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const rd=new ct,e0=new O,t0=new O;class Mp{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pe(512,512),this.map=null,this.mapPass=null,this.matrix=new ct,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ka,this._frameExtents=new pe(1,1),this._viewportCount=1,this._viewports=[new Dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;e0.setFromMatrixPosition(e.matrixWorld),t.position.copy(e0),t0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(t0),t.updateMatrixWorld(),rd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(rd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(rd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class QM extends Mp{constructor(){super(new $t(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ao*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class kv extends Hr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.target=new Nt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new QM}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const n0=new ct,ha=new O,sd=new O;class $M extends Mp{constructor(){super(new $t(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new pe(4,2),this._viewportCount=6,this._viewports=[new Dt(2,1,1,1),new Dt(0,1,1,1),new Dt(3,1,1,1),new Dt(1,1,1,1),new Dt(3,0,1,1),new Dt(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ha.setFromMatrixPosition(e.matrixWorld),n.position.copy(ha),sd.copy(n.position),sd.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(sd),n.updateMatrixWorld(),i.makeTranslation(-ha.x,-ha.y,-ha.z),n0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n0)}}class Hv extends Hr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new $M}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ur extends Ja{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class eE extends Mp{constructor(){super(new Ur(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Vv extends Hr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.target=new Nt,this.shadow=new eE}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Gv extends Hr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Wv extends Hr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Xv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new O)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Yv extends Hr{constructor(e=new Xv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class mh extends Kn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new dr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new He().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new He().setHex(l.value);break;case"v2":i.uniforms[s].value=new pe().fromArray(l.value);break;case"v3":i.uniforms[s].value=new O().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Dt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new ct().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new pe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new pe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return mh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:wv,SpriteMaterial:sp,RawShaderMaterial:Tv,ShaderMaterial:bi,PointsMaterial:ap,MeshPhysicalMaterial:Av,MeshStandardMaterial:mp,MeshPhongMaterial:bv,MeshToonMaterial:Cv,MeshNormalMaterial:Rv,MeshLambertMaterial:Pv,MeshDepthMaterial:gp,MeshDistanceMaterial:_p,MeshBasicMaterial:zr,MeshMatcapMaterial:Iv,LineDashedMaterial:Lv,LineBasicMaterial:zn,Material:Pn};return new t[e]}}class Dd{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class qv extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Zv extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new dr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,y){if(t[y]!==void 0)return t[y];const x=g.interleavedBuffers[y],v=s(g,x.buffer),E=_o(x.type,v),w=new $u(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(g,y){if(n[y]!==void 0)return n[y];const x=g.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new qv:new _t,c=e.data.index;if(c!==void 0){const g=_o(c.type,c.array);l.setIndex(new kt(g,1))}const u=e.data.attributes;for(const g in u){const y=u[g];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new As(x,y.itemSize,y.offset,y.normalized)}else{const x=_o(y.type,y.array),v=y.isInstancedBufferAttribute?Co:kt;M=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),l.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const y=h[g],M=[];for(let x=0,v=y.length;x<v;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const T=i(e.data,E.data);w=new As(T,E.itemSize,E.offset,E.normalized)}else{const T=_o(E.type,E.array);w=new kt(T,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),M.push(w)}l.morphAttributes[g]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,y=p.length;g!==y;++g){const M=p[g];l.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new O;m.center!==void 0&&g.fromArray(m.center),l.boundingSphere=new Rn(g,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class tE extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?Dd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new dr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Dd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new dr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),this.bindLightTargets(h),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),this.bindLightTargets(u),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Es().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new eh().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Zv;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in $g?c=$g[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new mh;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ga.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:_o(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Sp(t);s=new Wa(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?g.push(v):g.push(new ki(v.data,v.width,v.height)))}i[p.uuid]=new Nr(g)}else{const g=c(p.url);i[p.uuid]=new Nr(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:_o(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Wa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],y=await s(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new ki(y.data,y.width,y.height)))}n[u.uuid]=new Nr(f)}else{const f=await s(u.url);n[u.uuid]=new Nr(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new ja,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new ki:f=new jt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,nE)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],i0),f.wrapT=n(c.wrap[1],i0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,r0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,r0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),g.push(n[x])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":l=new rp,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new He(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new Qu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new Ku(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new $t(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Ur(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new Gv(e.color,e.intensity);break;case"DirectionalLight":l=new Vv(e.color,e.intensity),l.target=e.target||"";break;case"PointLight":l=new Hv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new Wv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new kv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),l.target=e.target||"";break;case"HemisphereLight":l=new zv(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new Yv().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new av(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new sn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,y=e.instanceColor;l=new lv(f,p,m),l.instanceMatrix=new Co(new Float32Array(g.array),16),y!==void 0&&(l.instanceColor=new Co(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),l=new cv(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=f,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const x=new Bn;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const v=new Rn;return v.radius=M.sphereRadius,v.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:v}}),l._maxInstanceCount=e.maxInstanceCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(l._colorsTexture=h(e.colorsTexture.uuid));break;case"LOD":l=new ov;break;case"Line":l=new Fr(c(e.geometry),u(e.material));break;case"LineLoop":l=new uv(c(e.geometry),u(e.material));break;case"LineSegments":l=new Wi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new hv(c(e.geometry),u(e.material));break;case"Sprite":l=new sv(u(e.material));break;case"Group":l=new vo;break;case"Bone":l=new op;break;default:l=new Nt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(l.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)l.add(this.parseObject(m[g],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const y=m[g];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const y=m[g],M=l.getObjectByProperty("uuid",y.object);M!==void 0&&l.addLevel(M,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Nt}})}}const nE={UVMapping:Hu,CubeReflectionMapping:hr,CubeRefractionMapping:Or,EquirectangularReflectionMapping:ba,EquirectangularRefractionMapping:Ca,CubeUVReflectionMapping:Io},i0={RepeatWrapping:Ra,ClampToEdgeWrapping:gi,MirroredRepeatWrapping:Pa},r0={NearestFilter:vn,NearestMipmapNearestFilter:Gd,NearestMipmapLinearFilter:go,LinearFilter:ln,LinearMipmapNearestFilter:va,LinearMipmapLinearFilter:Bi};class iE extends Kn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ar.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return ar.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),ar.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});ar.add(e,u),s.manager.itemStart(e)}}let Oc;class Ep{static getContext(){return Oc===void 0&&(Oc=new(window.AudioContext||window.webkitAudioContext)),Oc}static setContext(e){Oc=e}}class rE extends Kn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new dr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);Ep.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const s0=new ct,o0=new ct,rs=new ct;class sE{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new $t,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new $t,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,rs.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(Ss*t.fov*.5)/t.zoom;let c,u;o0.elements[12]=-i,s0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,rs.elements[0]=2*t.near/(u-c),rs.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(rs),c=-l*t.aspect-s,u=l*t.aspect-s,rs.elements[0]=2*t.near/(u-c),rs.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(rs)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(o0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(s0)}}class Jv extends $t{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class wp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=a0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=a0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function a0(){return performance.now()}const ss=new O,l0=new Cn,oE=new O,os=new O;class aE extends Nt{constructor(){super(),this.type="AudioListener",this.context=Ep.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new wp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ss,l0,oE),os.set(0,0,-1).applyQuaternion(l0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ss.x,i),t.positionY.linearRampToValueAtTime(ss.y,i),t.positionZ.linearRampToValueAtTime(ss.z,i),t.forwardX.linearRampToValueAtTime(os.x,i),t.forwardY.linearRampToValueAtTime(os.y,i),t.forwardZ.linearRampToValueAtTime(os.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ss.x,ss.y,ss.z),t.setOrientation(os.x,os.y,os.z,n.x,n.y,n.z)}}class jv extends Nt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const as=new O,c0=new Cn,lE=new O,ls=new O;class cE extends jv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(as,c0,lE),ls.set(0,0,1).applyQuaternion(c0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(as.x,n),t.positionY.linearRampToValueAtTime(as.y,n),t.positionZ.linearRampToValueAtTime(as.z,n),t.orientationX.linearRampToValueAtTime(ls.x,n),t.orientationY.linearRampToValueAtTime(ls.y,n),t.orientationZ.linearRampToValueAtTime(ls.z,n)}else t.setPosition(as.x,as.y,as.z),t.setOrientation(ls.x,ls.y,ls.z)}}class uE{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Kv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Cn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Cn.multiplyQuaternionsFlat(e,l,e,t,e,n),Cn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Tp="\\[\\]\\.:\\/",hE=new RegExp("["+Tp+"]","g"),Ap="[^"+Tp+"]",fE="[^"+Tp.replace("\\.","")+"]",dE=/((?:WC+[\/:])*)/.source.replace("WC",Ap),pE=/(WCOD+)?/.source.replace("WCOD",fE),mE=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ap),gE=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ap),_E=new RegExp("^"+dE+pE+mE+gE+"$"),vE=["material","materials","bones","map"];class yE{constructor(e,t,n){const i=n||Lt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Lt{constructor(e,t,n){this.path=t,this.parsedPath=n||Lt.parseTrackName(t),this.node=Lt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Lt.Composite(e,t,n):new Lt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(hE,"")}static parseTrackName(e){const t=_E.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);vE.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Lt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?c=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Lt.Composite=yE;Lt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Lt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Lt.prototype.GetterByBindingType=[Lt.prototype._getValue_direct,Lt.prototype._getValue_array,Lt.prototype._getValue_arrayElement,Lt.prototype._getValue_toArray];Lt.prototype.SetterByBindingTypeAndVersioning=[[Lt.prototype._setValue_direct,Lt.prototype._setValue_direct_setNeedsUpdate,Lt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_array,Lt.prototype._setValue_array_setNeedsUpdate,Lt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_arrayElement,Lt.prototype._setValue_arrayElement_setNeedsUpdate,Lt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_fromArray,Lt.prototype._setValue_fromArray_setNeedsUpdate,Lt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class xE{constructor(){this.isAnimationObjectGroup=!0,this.uuid=si(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let y=t[g];if(y===void 0){y=u++,t[g]=y,e.push(m);for(let M=0,x=l;M!==x;++M)s[M].push(new Lt(m,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[g]=M,e[M]=m;for(let v=0,E=l;v!==E;++v){const w=s[v],T=w[M];let L=w[y];w[y]=T,L===void 0&&(L=new Lt(m,n[v],i[v])),w[M]=L}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,y=i;g!==y;++g){const M=n[g],x=M[p],v=M[f];M[f]=x,M[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],y=--l,M=e[y];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let x=0,v=i;x!==v;++x){const E=n[x],w=E[m],T=E[y];E[p]=w,E[m]=T,E.pop()}}else{const m=--l,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const y=u[m];p[m]=new Lt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Qv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:gs,endingEnd:gs};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=B_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case $d:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case Zu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===z_;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===F_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=_s,i.endingEnd=_s):(e?i.endingStart=this.zeroSlopeAtStart?_s:gs:i.endingStart=La,t?i.endingEnd=this.zeroSlopeAtEnd?_s:gs:i.endingEnd=La)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const SE=new Float32Array(1);class ME extends Gi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],g=m.name;let y=f[g];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new Kv(Lt.create(n,g,M),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,g),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new yp(new Float32Array(2),new Float32Array(2),1,SE),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Ga.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Zu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new Qv(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ga.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class EE extends Ju{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new ju(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class wE extends Ju{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Za(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class bp{constructor(e){this.value=e}clone(){return new bp(this.value.clone===void 0?this.value:this.value.clone())}}let TE=0;class AE extends Gi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:TE++}),this.name="",this.usage=Na,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class bE extends $u{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class CE{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const u0=new ct;class Cp{constructor(e,t,n=0,i=1/0){this.ray=new Cs(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ms,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return u0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(u0),this}intersectObject(e,t=!0,n=[]){return Nd(e,this,n,t),n.sort(h0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Nd(e[i],this,n,t);return n.sort(h0),n}}function h0(r,e){return r.distance-e.distance}function Nd(r,e,t,n){let i=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let l=0,c=s.length;l<c;l++)Nd(s[l],e,t,!0)}}class Ud{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=ht(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ht(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class RE{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Rp{constructor(e,t,n,i){Rp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}}const f0=new pe;class PE{constructor(e=new pe(1/0,1/0),t=new pe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=f0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,f0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const d0=new O,Fc=new O;class IE{constructor(e=new O,t=new O){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){d0.subVectors(e,this.start),Fc.subVectors(this.end,this.start);const n=Fc.dot(Fc);let s=Fc.dot(d0)/n;return t&&(s=ht(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const p0=new O;class LE extends Nt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new _t,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Ze(i,3));const s=new zn({fog:!1,toneMapped:!1});this.cone=new Wi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),p0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(p0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Ir=new O,Bc=new ct,od=new ct;class DE extends Wi{constructor(e){const t=$v(e),n=new _t,i=[],s=[],l=new He(0,0,1),c=new He(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ze(i,3)),n.setAttribute("color",new Ze(s,3));const u=new zn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");od.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Bc.multiplyMatrices(od,c.matrixWorld),Ir.setFromMatrixPosition(Bc),i.setXYZ(l,Ir.x,Ir.y,Ir.z),Bc.multiplyMatrices(od,c.parent.matrixWorld),Ir.setFromMatrixPosition(Bc),i.setXYZ(l+1,Ir.x,Ir.y,Ir.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function $v(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push(...$v(r.children[t]));return e}class NE extends sn{constructor(e,t,n){const i=new el(t,4,2),s=new zr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const UE=new O,m0=new He,g0=new He;class OE extends Nt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new $a(t);i.rotateY(Math.PI*.5),this.material=new zr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new kt(l,3)),this.add(new sn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");m0.copy(this.light.color),g0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?m0:g0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(UE.setFromMatrixPosition(this.light.matrixWorld).negate())}}class FE extends Wi{constructor(e=10,t=10,n=4473924,i=8947848){n=new He(n),i=new He(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=m===s?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new _t;f.setAttribute("position",new Ze(u,3)),f.setAttribute("color",new Ze(h,3));const p=new zn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class BE extends Wi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new He(s),l=new He(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,y);const M=p&1?s:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:l,g=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*g,v=Math.cos(M)*g;c.push(x,0,v),u.push(m.r,m.g,m.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*g,v=Math.cos(M)*g,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new _t;h.setAttribute("position",new Ze(c,3)),h.setAttribute("color",new Ze(u,3));const f=new zn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const _0=new O,zc=new O,v0=new O;class zE extends Nt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new _t;i.setAttribute("position",new Ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new zn({fog:!1,toneMapped:!1});this.lightPlane=new Fr(i,s),this.add(this.lightPlane),i=new _t,i.setAttribute("position",new Ze([0,0,0,0,0,1],3)),this.targetLine=new Fr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),_0.setFromMatrixPosition(this.light.matrixWorld),zc.setFromMatrixPosition(this.light.target.matrixWorld),v0.subVectors(zc,_0),this.lightPlane.lookAt(zc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(zc),this.targetLine.scale.z=v0.length()}}const kc=new O,Jt=new Ja;class kE extends Wi{constructor(e){const t=new _t,n=new zn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Ze(i,3)),t.setAttribute("color",new Ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new He(16755200),f=new He(16711680),p=new He(43775),m=new He(16777215),g=new He(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Jt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===Ti?-1:0;Qt("c",t,e,Jt,0,0,s),Qt("t",t,e,Jt,0,0,1),Qt("n1",t,e,Jt,-1,-1,s),Qt("n2",t,e,Jt,n,-1,s),Qt("n3",t,e,Jt,-1,i,s),Qt("n4",t,e,Jt,n,i,s),Qt("f1",t,e,Jt,-1,-1,1),Qt("f2",t,e,Jt,n,-1,1),Qt("f3",t,e,Jt,-1,i,1),Qt("f4",t,e,Jt,n,i,1),Qt("u1",t,e,Jt,n*.7,i*1.1,s),Qt("u2",t,e,Jt,-1*.7,i*1.1,s),Qt("u3",t,e,Jt,0,i*2,s),Qt("cf1",t,e,Jt,-1,0,1),Qt("cf2",t,e,Jt,n,0,1),Qt("cf3",t,e,Jt,0,-1,1),Qt("cf4",t,e,Jt,0,i,1),Qt("cn1",t,e,Jt,-1,0,s),Qt("cn2",t,e,Jt,n,0,s),Qt("cn3",t,e,Jt,0,-1,s),Qt("cn4",t,e,Jt,0,i,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Qt(r,e,t,n,i,s,l){kc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],kc.x,kc.y,kc.z)}}const Hc=new Bn;class HE extends Wi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new _t;s.setIndex(new kt(n,1)),s.setAttribute("position",new kt(i,3)),super(s,new zn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Hc.setFromObject(this.object),Hc.isEmpty())return;const e=Hc.min,t=Hc.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class VE extends Wi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new _t;s.setIndex(new kt(n,1)),s.setAttribute("position",new Ze(i,3)),super(s,new zn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class GE extends Fr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new _t;l.setAttribute("position",new Ze(s,3)),l.computeBoundingSphere(),super(l,new zn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new _t;u.setAttribute("position",new Ze(c,3)),u.computeBoundingSphere(),this.add(new sn(u,new zr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const y0=new O;let Vc,ad;class WE extends Nt{constructor(e=new O(0,0,1),t=new O(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Vc===void 0&&(Vc=new _t,Vc.setAttribute("position",new Ze([0,0,0,0,1,0],3)),ad=new Do(0,.5,1,5,1),ad.translate(0,-.5,0)),this.position.copy(t),this.line=new Fr(Vc,new zn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new sn(ad,new zr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{y0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(y0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class XE extends Wi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _t;i.setAttribute("position",new Ze(t,3)),i.setAttribute("color",new Ze(n,3));const s=new zn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new He,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YE{constructor(){this.type="ShapePath",this.color=new He,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Fa,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const E=[];for(let w=0,T=v.length;w<T;w++){const L=v[w],P=new Es;P.curves=L.curves,E.push(P)}return E}function n(v,E){const w=E.length;let T=!1;for(let L=w-1,P=0;P<w;L=P++){let N=E[L],F=E[P],R=F.x-N.x,b=F.y-N.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(N=E[P],R=-R,F=E[L],b=-b),v.y<N.y||v.y>F.y)continue;if(v.y===N.y){if(v.x===N.x)return!0}else{const U=b*(v.x-N.x)-R*(v.y-N.y);if(U===0)return!0;if(U<0)continue;T=!T}}else{if(v.y!==N.y)continue;if(F.x<=v.x&&v.x<=N.x||N.x<=v.x&&v.x<=F.x)return!0}}return T}const i=Hi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new Es,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],y=0,M;m[y]=void 0,g[y]=[];for(let v=0,E=s.length;v<E;v++)c=s[v],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!f&&m[y]&&y++,m[y]={s:new Es,p:M},m[y].s.curves=c.curves,f&&y++,g[y]=[]):g[y].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,E=0;for(let w=0,T=m.length;w<T;w++)p[w]=[];for(let w=0,T=m.length;w<T;w++){const L=g[w];for(let P=0;P<L.length;P++){const N=L[P];let F=!0;for(let R=0;R<m.length;R++)n(N.p,m[R].p)&&(w!==R&&E++,F?(F=!1,p[R].push(N)):v=!0);F&&p[w].push(N)}}E>0&&v===!1&&(g=p)}let x;for(let v=0,E=m.length;v<E;v++){u=m[v].s,h.push(u),x=g[v];for(let w=0,T=x.length;w<T;w++)u.holes.push(x[w].h)}return h}}class qE extends Gi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function ZE(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function JE(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function jE(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function Od(r,e,t,n){const i=KE(n);switch(t){case qd:return r*e;case Jd:return r*e;case jd:return r*e*2;case Xu:return r*e/i.components*i.byteLength;case qa:return r*e/i.components*i.byteLength;case Kd:return r*e*2/i.components*i.byteLength;case Yu:return r*e*2/i.components*i.byteLength;case Zd:return r*e*3/i.components*i.byteLength;case bn:return r*e*4/i.components*i.byteLength;case qu:return r*e*4/i.components*i.byteLength;case ya:case xa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Sa:case Ma:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case uu:case fu:return Math.max(r,16)*Math.max(e,8)/4;case cu:case hu:return Math.max(r,8)*Math.max(e,8)/2;case du:case pu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case mu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case gu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case _u:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case vu:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case yu:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case xu:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Su:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Mu:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Eu:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case wu:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Tu:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Au:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case bu:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Cu:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Ru:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case Ea:case Pu:case Iu:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Qd:case Lu:return Math.ceil(r/4)*Math.ceil(e/4)*8;case Du:case Nu:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function KE(r){switch(r){case Ai:case Wd:return{byteLength:1,components:1};case Mo:case Xd:case Lo:return{byteLength:2,components:1};case Gu:case Wu:return{byteLength:2,components:4};case fr:case Vu:case jn:return{byteLength:4,components:1};case Yd:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}class QE{static contain(e,t){return ZE(e,t)}static cover(e,t){return JE(e,t)}static fill(e){return jE(e)}static getByteLength(e,t,n,i){return Od(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:zu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=zu);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function ey(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function $E(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?g=r.HALF_FLOAT:g=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=r.SHORT;else if(h instanceof Uint32Array)g=r.UNSIGNED_INT;else if(h instanceof Int32Array)g=r.INT;else if(h instanceof Int8Array)g=r.BYTE;else if(h instanceof Uint8Array)g=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u.updateRanges;if(r.bindBuffer(h,c),p.length===0)r.bufferSubData(h,0,f);else{p.sort((g,y)=>g.start-y.start);let m=0;for(let g=1;g<p.length;g++){const y=p[m],M=p[g];M.start<=y.start+y.count+1?y.count=Math.max(y.count,M.start+M.count-y.start):(++m,p[m]=M)}p.length=m+1;for(let g=0,y=p.length;g<y;g++){const M=p[g];r.bufferSubData(h,M.start*f.BYTES_PER_ELEMENT,f,M.start,M.count)}u.clearUpdateRanges()}u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:l}}var e1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,t1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,n1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,i1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,r1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,s1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,o1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,a1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,l1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,c1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,u1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,h1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,f1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,d1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,p1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,m1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,g1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,_1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,v1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,y1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,x1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,S1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,M1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,E1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,w1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,T1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,A1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,b1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,C1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,R1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,P1="gl_FragColor = linearToOutputTexel( gl_FragColor );",I1=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,L1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,D1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,N1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,U1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,O1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,F1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,B1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,z1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,k1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,H1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,V1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,G1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,W1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,X1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Y1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,q1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Z1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,J1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,j1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,K1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Q1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ew=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,tw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,nw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,iw=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,rw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,sw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,ow=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,aw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,lw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,cw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,uw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,hw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,fw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,dw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,pw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,mw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,gw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,_w=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,vw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,yw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,xw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Sw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Mw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Ew=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,ww=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Tw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Aw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,bw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Cw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Rw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Pw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Iw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Lw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Dw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Nw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Uw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Ow=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Fw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Bw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,zw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,kw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Hw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Vw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Gw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Ww=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Xw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Yw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,qw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Zw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Jw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,jw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Kw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Qw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const $w=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,eT=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,tT=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,nT=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iT=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,rT=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,sT=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,oT=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,aT=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,lT=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,cT=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,uT=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hT=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fT=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dT=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,pT=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mT=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gT=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_T=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,vT=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yT=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,xT=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ST=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MT=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ET=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,wT=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,TT=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,AT=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bT=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,CT=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,RT=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,PT=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,IT=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,LT=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:e1,alphahash_pars_fragment:t1,alphamap_fragment:n1,alphamap_pars_fragment:i1,alphatest_fragment:r1,alphatest_pars_fragment:s1,aomap_fragment:o1,aomap_pars_fragment:a1,batching_pars_vertex:l1,batching_vertex:c1,begin_vertex:u1,beginnormal_vertex:h1,bsdfs:f1,iridescence_fragment:d1,bumpmap_pars_fragment:p1,clipping_planes_fragment:m1,clipping_planes_pars_fragment:g1,clipping_planes_pars_vertex:_1,clipping_planes_vertex:v1,color_fragment:y1,color_pars_fragment:x1,color_pars_vertex:S1,color_vertex:M1,common:E1,cube_uv_reflection_fragment:w1,defaultnormal_vertex:T1,displacementmap_pars_vertex:A1,displacementmap_vertex:b1,emissivemap_fragment:C1,emissivemap_pars_fragment:R1,colorspace_fragment:P1,colorspace_pars_fragment:I1,envmap_fragment:L1,envmap_common_pars_fragment:D1,envmap_pars_fragment:N1,envmap_pars_vertex:U1,envmap_physical_pars_fragment:Y1,envmap_vertex:O1,fog_vertex:F1,fog_pars_vertex:B1,fog_fragment:z1,fog_pars_fragment:k1,gradientmap_pars_fragment:H1,lightmap_pars_fragment:V1,lights_lambert_fragment:G1,lights_lambert_pars_fragment:W1,lights_pars_begin:X1,lights_toon_fragment:q1,lights_toon_pars_fragment:Z1,lights_phong_fragment:J1,lights_phong_pars_fragment:j1,lights_physical_fragment:K1,lights_physical_pars_fragment:Q1,lights_fragment_begin:$1,lights_fragment_maps:ew,lights_fragment_end:tw,logdepthbuf_fragment:nw,logdepthbuf_pars_fragment:iw,logdepthbuf_pars_vertex:rw,logdepthbuf_vertex:sw,map_fragment:ow,map_pars_fragment:aw,map_particle_fragment:lw,map_particle_pars_fragment:cw,metalnessmap_fragment:uw,metalnessmap_pars_fragment:hw,morphinstance_vertex:fw,morphcolor_vertex:dw,morphnormal_vertex:pw,morphtarget_pars_vertex:mw,morphtarget_vertex:gw,normal_fragment_begin:_w,normal_fragment_maps:vw,normal_pars_fragment:yw,normal_pars_vertex:xw,normal_vertex:Sw,normalmap_pars_fragment:Mw,clearcoat_normal_fragment_begin:Ew,clearcoat_normal_fragment_maps:ww,clearcoat_pars_fragment:Tw,iridescence_pars_fragment:Aw,opaque_fragment:bw,packing:Cw,premultiplied_alpha_fragment:Rw,project_vertex:Pw,dithering_fragment:Iw,dithering_pars_fragment:Lw,roughnessmap_fragment:Dw,roughnessmap_pars_fragment:Nw,shadowmap_pars_fragment:Uw,shadowmap_pars_vertex:Ow,shadowmap_vertex:Fw,shadowmask_pars_fragment:Bw,skinbase_vertex:zw,skinning_pars_vertex:kw,skinning_vertex:Hw,skinnormal_vertex:Vw,specularmap_fragment:Gw,specularmap_pars_fragment:Ww,tonemapping_fragment:Xw,tonemapping_pars_fragment:Yw,transmission_fragment:qw,transmission_pars_fragment:Zw,uv_pars_fragment:Jw,uv_pars_vertex:jw,uv_vertex:Kw,worldpos_vertex:Qw,background_vert:$w,background_frag:eT,backgroundCube_vert:tT,backgroundCube_frag:nT,cube_vert:iT,cube_frag:rT,depth_vert:sT,depth_frag:oT,distanceRGBA_vert:aT,distanceRGBA_frag:lT,equirect_vert:cT,equirect_frag:uT,linedashed_vert:hT,linedashed_frag:fT,meshbasic_vert:dT,meshbasic_frag:pT,meshlambert_vert:mT,meshlambert_frag:gT,meshmatcap_vert:_T,meshmatcap_frag:vT,meshnormal_vert:yT,meshnormal_frag:xT,meshphong_vert:ST,meshphong_frag:MT,meshphysical_vert:ET,meshphysical_frag:wT,meshtoon_vert:TT,meshtoon_frag:AT,points_vert:bT,points_frag:CT,shadow_vert:RT,shadow_frag:PT,sprite_vert:IT,sprite_frag:LT},De={common:{diffuse:{value:new He(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},envMapRotation:{value:new pt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new pe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new He(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new He(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new He(16777215)},opacity:{value:1},center:{value:new pe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},wi={basic:{uniforms:Nn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:Nn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new He(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:Nn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new He(0)},specular:{value:new He(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:Nn([De.common,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.roughnessmap,De.metalnessmap,De.fog,De.lights,{emissive:{value:new He(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:Nn([De.common,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.gradientmap,De.fog,De.lights,{emissive:{value:new He(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:Nn([De.common,De.bumpmap,De.normalmap,De.displacementmap,De.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:Nn([De.points,De.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:Nn([De.common,De.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:Nn([De.common,De.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:Nn([De.common,De.bumpmap,De.normalmap,De.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:Nn([De.sprite,De.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new pt}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:Nn([De.common,De.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:Nn([De.lights,De.fog,{color:{value:new He(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};wi.physical={uniforms:Nn([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new pe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new He(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new pe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new He(0)},specularColor:{value:new He(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new pe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const Gc={r:0,b:0,g:0},cs=new oi,DT=new ct;function NT(r,e,t,n,i,s,l){const c=new He(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function y(w){let T=w.isScene===!0?w.background:null;return T&&T.isTexture&&(T=(w.backgroundBlurriness>0?t:e).get(T)),T}function M(w){let T=!1;const L=y(w);L===null?v(c,u):L&&L.isColor&&(v(L,1),T=!0);const P=r.xr.getEnvironmentBlendMode();P==="additive"?n.buffers.color.setClear(0,0,0,1,l):P==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function x(w,T){const L=y(T);L&&(L.isCubeTexture||L.mapping===Io)?(f===void 0&&(f=new sn(new Rs(1,1,1),new bi({name:"BackgroundCubeMaterial",uniforms:bo(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:Fn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(P,N,F){this.matrixWorld.copyPosition(F.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),cs.copy(T.backgroundRotation),cs.x*=-1,cs.y*=-1,cs.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(cs.y*=-1,cs.z*=-1),f.material.uniforms.envMap.value=L,f.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(DT.makeRotationFromEuler(cs)),f.material.toneMapped=It.getTransfer(L.colorSpace)!==zt,(p!==L||m!==L.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,p=L,m=L.version,g=r.toneMapping),f.layers.enableAll(),w.unshift(f,f.geometry,f.material,0,0,null)):L&&L.isTexture&&(h===void 0&&(h=new sn(new No(2,2),new bi({name:"BackgroundMaterial",uniforms:bo(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:ur,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=L,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.toneMapped=It.getTransfer(L.colorSpace)!==zt,L.matrixAutoUpdate===!0&&L.updateMatrix(),h.material.uniforms.uvTransform.value.copy(L.matrix),(p!==L||m!==L.version||g!==r.toneMapping)&&(h.material.needsUpdate=!0,p=L,m=L.version,g=r.toneMapping),h.layers.enableAll(),w.unshift(h,h.geometry,h.material,0,0,null))}function v(w,T){w.getRGB(Gc,ev(r)),n.buffers.color.setClear(Gc.r,Gc.g,Gc.b,T,l)}function E(){f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0),h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0)}return{getClearColor:function(){return c},setClearColor:function(w,T=1){c.set(w),u=T,v(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(w){u=w,v(c,u)},render:M,addToRenderList:x,dispose:E}}function UT(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,l=!1;function c(b,U,J,Z,ee){let ce=!1;const K=p(Z,J,U);s!==K&&(s=K,h(s.object)),ce=g(b,Z,J,ee),ce&&y(b,Z,J,ee),ee!==null&&e.update(ee,r.ELEMENT_ARRAY_BUFFER),(ce||l)&&(l=!1,T(b,U,J,Z),ee!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(ee).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function f(b){return r.deleteVertexArray(b)}function p(b,U,J){const Z=J.wireframe===!0;let ee=n[b.id];ee===void 0&&(ee={},n[b.id]=ee);let ce=ee[U.id];ce===void 0&&(ce={},ee[U.id]=ce);let K=ce[Z];return K===void 0&&(K=m(u()),ce[Z]=K),K}function m(b){const U=[],J=[],Z=[];for(let ee=0;ee<t;ee++)U[ee]=0,J[ee]=0,Z[ee]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:J,attributeDivisors:Z,object:b,attributes:{},index:null}}function g(b,U,J,Z){const ee=s.attributes,ce=U.attributes;let K=0;const ye=J.getAttributes();for(const H in ye)if(ye[H].location>=0){const re=ee[H];let _e=ce[H];if(_e===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(_e=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(_e=b.instanceColor)),re===void 0||re.attribute!==_e||_e&&re.data!==_e.data)return!0;K++}return s.attributesNum!==K||s.index!==Z}function y(b,U,J,Z){const ee={},ce=U.attributes;let K=0;const ye=J.getAttributes();for(const H in ye)if(ye[H].location>=0){let re=ce[H];re===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(re=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(re=b.instanceColor));const _e={};_e.attribute=re,re&&re.data&&(_e.data=re.data),ee[H]=_e,K++}s.attributes=ee,s.attributesNum=K,s.index=Z}function M(){const b=s.newAttributes;for(let U=0,J=b.length;U<J;U++)b[U]=0}function x(b){v(b,0)}function v(b,U){const J=s.newAttributes,Z=s.enabledAttributes,ee=s.attributeDivisors;J[b]=1,Z[b]===0&&(r.enableVertexAttribArray(b),Z[b]=1),ee[b]!==U&&(r.vertexAttribDivisor(b,U),ee[b]=U)}function E(){const b=s.newAttributes,U=s.enabledAttributes;for(let J=0,Z=U.length;J<Z;J++)U[J]!==b[J]&&(r.disableVertexAttribArray(J),U[J]=0)}function w(b,U,J,Z,ee,ce,K){K===!0?r.vertexAttribIPointer(b,U,J,ee,ce):r.vertexAttribPointer(b,U,J,Z,ee,ce)}function T(b,U,J,Z){M();const ee=Z.attributes,ce=J.getAttributes(),K=U.defaultAttributeValues;for(const ye in ce){const H=ce[ye];if(H.location>=0){let se=ee[ye];if(se===void 0&&(ye==="instanceMatrix"&&b.instanceMatrix&&(se=b.instanceMatrix),ye==="instanceColor"&&b.instanceColor&&(se=b.instanceColor)),se!==void 0){const re=se.normalized,_e=se.itemSize,Ie=e.get(se);if(Ie===void 0)continue;const qe=Ie.buffer,oe=Ie.type,xe=Ie.bytesPerElement,Ce=oe===r.INT||oe===r.UNSIGNED_INT||se.gpuType===Vu;if(se.isInterleavedBufferAttribute){const Ae=se.data,tt=Ae.stride,St=se.offset;if(Ae.isInstancedInterleavedBuffer){for(let $e=0;$e<H.locationSize;$e++)v(H.location+$e,Ae.meshPerAttribute);b.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=Ae.meshPerAttribute*Ae.count)}else for(let $e=0;$e<H.locationSize;$e++)x(H.location+$e);r.bindBuffer(r.ARRAY_BUFFER,qe);for(let $e=0;$e<H.locationSize;$e++)w(H.location+$e,_e/H.locationSize,oe,re,tt*xe,(St+_e/H.locationSize*$e)*xe,Ce)}else{if(se.isInstancedBufferAttribute){for(let Ae=0;Ae<H.locationSize;Ae++)v(H.location+Ae,se.meshPerAttribute);b.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let Ae=0;Ae<H.locationSize;Ae++)x(H.location+Ae);r.bindBuffer(r.ARRAY_BUFFER,qe);for(let Ae=0;Ae<H.locationSize;Ae++)w(H.location+Ae,_e/H.locationSize,oe,re,_e*xe,_e/H.locationSize*Ae*xe,Ce)}}else if(K!==void 0){const re=K[ye];if(re!==void 0)switch(re.length){case 2:r.vertexAttrib2fv(H.location,re);break;case 3:r.vertexAttrib3fv(H.location,re);break;case 4:r.vertexAttrib4fv(H.location,re);break;default:r.vertexAttrib1fv(H.location,re)}}}}E()}function L(){F();for(const b in n){const U=n[b];for(const J in U){const Z=U[J];for(const ee in Z)f(Z[ee].object),delete Z[ee];delete U[J]}delete n[b]}}function P(b){if(n[b.id]===void 0)return;const U=n[b.id];for(const J in U){const Z=U[J];for(const ee in Z)f(Z[ee].object),delete Z[ee];delete U[J]}delete n[b.id]}function N(b){for(const U in n){const J=n[U];if(J[b.id]===void 0)continue;const Z=J[b.id];for(const ee in Z)f(Z[ee].object),delete Z[ee];delete J[b.id]}}function F(){R(),l=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:F,resetDefaultState:R,dispose:L,releaseStatesOfGeometry:P,releaseStatesOfProgram:N,initAttributes:M,enableAttribute:x,disableUnusedAttributes:E}}function OT(r,e,t){let n;function i(h){n=h}function s(h,f){r.drawArrays(n,h,f),t.update(f,n,1)}function l(h,f,p){p!==0&&(r.drawArraysInstanced(n,h,f,p),t.update(f,n,p))}function c(h,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,h,0,f,0,p);let g=0;for(let y=0;y<p;y++)g+=f[y];t.update(g,n,1)}function u(h,f,p,m){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let y=0;y<h.length;y++)l(h[y],f[y],m[y]);else{g.multiDrawArraysInstancedWEBGL(n,h,0,f,0,m,0,p);let y=0;for(let M=0;M<p;M++)y+=f[M]*m[M];t.update(y,n,1)}}this.setMode=i,this.render=s,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function FT(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(N){return!(N!==bn&&n.convert(N)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(N){const F=N===Lo&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(N!==Ai&&n.convert(N)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&N!==jn&&!F)}function u(N){if(N==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let h=t.precision!==void 0?t.precision:"highp";const f=u(h);f!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",f,"instead."),h=f);const p=t.logarithmicDepthBuffer===!0,m=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),g=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=r.getParameter(r.MAX_TEXTURE_SIZE),x=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),v=r.getParameter(r.MAX_VERTEX_ATTRIBS),E=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),w=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),L=y>0,P=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:h,logarithmicDepthBuffer:p,reverseDepthBuffer:m,maxTextures:g,maxVertexTextures:y,maxTextureSize:M,maxCubemapSize:x,maxAttributes:v,maxVertexUniforms:E,maxVaryings:w,maxFragmentUniforms:T,vertexTextures:L,maxSamples:P}}function BT(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new rr,c=new pt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const E=s?0:n,w=E*4;let T=v.clippingState||null;u.value=T,T=f(y,m,w,g);for(let L=0;L!==w;++L)T[L]=t[L];v.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const v=g+M*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<v)&&(x=new Float32Array(v));for(let w=0,T=g;w!==M;++w,T+=4)l.copy(p[w]).applyMatrix4(E,c),l.normal.toArray(x,T),x[T+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function zT(r){let e=new WeakMap;function t(l,c){return c===ba?l.mapping=hr:c===Ca&&(l.mapping=Or),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===ba||c===Ca)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new iv(u.height);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const yo=4,x0=[.125,.215,.35,.446,.526,.582],ms=20,ld=new Ur,S0=new He;let cd=null,ud=0,hd=0,fd=!1;const ps=(1+Math.sqrt(5))/2,uo=1/ps,M0=[new O(-ps,uo,0),new O(ps,uo,0),new O(-uo,0,ps),new O(uo,0,ps),new O(0,ps,-uo),new O(0,ps,uo),new O(-1,1,-1),new O(1,1,-1),new O(-1,1,1),new O(1,1,1)],kT=new O;class Fd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,s={}){const{size:l=256,position:c=kT}=s;cd=this._renderer.getRenderTarget(),ud=this._renderer.getActiveCubeFace(),hd=this._renderer.getActiveMipmapLevel(),fd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(e,n,i,u,c),t>0&&this._blur(u,0,0,t),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=T0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=w0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(cd,ud,hd),this._renderer.xr.enabled=fd,e.scissorTest=!1,Wc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===hr||e.mapping===Or?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),cd=this._renderer.getRenderTarget(),ud=this._renderer.getActiveCubeFace(),hd=this._renderer.getActiveMipmapLevel(),fd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ln,minFilter:ln,generateMipmaps:!1,type:Lo,format:bn,colorSpace:Ts,depthBuffer:!1},i=E0(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=E0(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=HT(s)),this._blurMaterial=VT(s,e,t)}return i}_compileMaterial(e){const t=new sn(this._lodPlanes[0],e);this._renderer.compile(t,ld)}_sceneToCubeUV(e,t,n,i,s){const u=new $t(90,1,t,n),h=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,g=p.toneMapping;p.getClearColor(S0),p.toneMapping=zi,p.autoClear=!1;const y=new zr({name:"PMREM.Background",side:Fn,depthWrite:!1,depthTest:!1}),M=new sn(new Rs,y);let x=!1;const v=e.background;v?v.isColor&&(y.color.copy(v),e.background=null,x=!0):(y.color.copy(S0),x=!0);for(let E=0;E<6;E++){const w=E%3;w===0?(u.up.set(0,h[E],0),u.position.set(s.x,s.y,s.z),u.lookAt(s.x+f[E],s.y,s.z)):w===1?(u.up.set(0,0,h[E]),u.position.set(s.x,s.y,s.z),u.lookAt(s.x,s.y+f[E],s.z)):(u.up.set(0,h[E],0),u.position.set(s.x,s.y,s.z),u.lookAt(s.x,s.y,s.z+f[E]));const T=this._cubeSize;Wc(i,w*T,E>2?T:0,T,T),p.setRenderTarget(i),x&&p.render(M,u),p.render(e,u)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=g,p.autoClear=m,e.background=v}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===hr||e.mapping===Or;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=T0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=w0());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new sn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Wc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,ld)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const l=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=M0[(i-s-1)%M0.length];this._blur(e,s-1,s,l,c)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new sn(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*ms-1),M=s/y,x=isFinite(s)?1+Math.floor(f*M):ms;x>ms&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${ms}`);const v=[];let E=0;for(let N=0;N<ms;++N){const F=N/M,R=Math.exp(-F*F/2);v.push(R),N===0?E+=R:N<x&&(E+=2*R)}for(let N=0;N<v.length;N++)v[N]=v[N]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=y,m.mipInt.value=w-n;const T=this._sizeLods[i],L=3*T*(i>w-yo?i-w+yo:0),P=4*(this._cubeSize-T);Wc(t,L,P,3*T,2*T),u.setRenderTarget(t),u.render(p,ld)}}function HT(r){const e=[],t=[],n=[];let i=r;const s=r-yo+1+x0.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-yo?u=x0[l-r+yo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,y=6,M=3,x=2,v=1,E=new Float32Array(M*y*g),w=new Float32Array(x*y*g),T=new Float32Array(v*y*g);for(let P=0;P<g;P++){const N=P%3*2/3-1,F=P>2?0:-1,R=[N,F,0,N+2/3,F,0,N+2/3,F+1,0,N,F,0,N+2/3,F+1,0,N,F+1,0];E.set(R,M*y*P),w.set(m,x*y*P);const b=[P,P,P,P,P,P];T.set(b,v*y*P)}const L=new _t;L.setAttribute("position",new kt(E,M)),L.setAttribute("uv",new kt(w,x)),L.setAttribute("faceIndex",new kt(T,v)),e.push(L),i>yo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function E0(r,e,t){const n=new Vi(r,e,t);return n.texture.mapping=Io,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Wc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function VT(r,e,t){const n=new Float32Array(ms),i=new O(0,1,0);return new bi({name:"SphericalGaussianBlur",defines:{n:ms,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Pp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function w0(){return new bi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Pp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function T0(){return new bi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Pp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function Pp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function GT(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ba||u===Ca,f=u===hr||u===Or;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new Fd(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const g=c.image;return h&&g&&g.height>0||f&&g&&i(g)?(t===null&&(t=new Fd(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function WT(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&jc("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function XT(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);m.removeEventListener("dispose",l),delete i[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const g in m)e.update(m[g],r.ARRAY_BUFFER)}function h(p){const m=[],g=p.index,y=p.attributes.position;let M=0;if(g!==null){const E=g.array;M=g.version;for(let w=0,T=E.length;w<T;w+=3){const L=E[w+0],P=E[w+1],N=E[w+2];m.push(L,P,P,N,N,L)}}else if(y!==void 0){const E=y.array;M=y.version;for(let w=0,T=E.length/3-1;w<T;w+=3){const L=w+0,P=w+1,N=w+2;m.push(L,P,P,N,N,L)}}else return;const x=new(j_(m)?ip:np)(m,1);x.version=M;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function YT(r,e,t){let n;function i(m){n=m}let s,l;function c(m){s=m.type,l=m.bytesPerElement}function u(m,g){r.drawElements(n,g,s,m*l),t.update(g,n,1)}function h(m,g,y){y!==0&&(r.drawElementsInstanced(n,g,s,m*l,y),t.update(g,n,y))}function f(m,g,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,g,0,s,m,0,y);let x=0;for(let v=0;v<y;v++)x+=g[v];t.update(x,n,1)}function p(m,g,y,M){if(y===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let v=0;v<m.length;v++)h(m[v]/l,g[v],M[v]);else{x.multiDrawElementsInstancedWEBGL(n,g,0,s,m,0,M,0,y);let v=0;for(let E=0;E<y;E++)v+=g[E]*M[E];t.update(v,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function qT(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function ZT(r,e,t){const n=new WeakMap,i=new Dt;function s(l,c,u){const h=l.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){N.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const g=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],v=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;g===!0&&(w=1),y===!0&&(w=2),M===!0&&(w=3);let T=c.attributes.position.count*w,L=1;T>e.maxTextureSize&&(L=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const P=new Float32Array(T*L*4*p),N=new Za(P,T,L,p);N.type=jn,N.needsUpdate=!0;const F=w*4;for(let b=0;b<p;b++){const U=x[b],J=v[b],Z=E[b],ee=T*L*4*b;for(let ce=0;ce<U.count;ce++){const K=ce*F;g===!0&&(i.fromBufferAttribute(U,ce),P[ee+K+0]=i.x,P[ee+K+1]=i.y,P[ee+K+2]=i.z,P[ee+K+3]=0),y===!0&&(i.fromBufferAttribute(J,ce),P[ee+K+4]=i.x,P[ee+K+5]=i.y,P[ee+K+6]=i.z,P[ee+K+7]=0),M===!0&&(i.fromBufferAttribute(Z,ce),P[ee+K+8]=i.x,P[ee+K+9]=i.y,P[ee+K+10]=i.z,P[ee+K+11]=Z.itemSize===4?i.w:1)}}m={count:p,texture:N,size:new pe(T,L)},n.set(c,m),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",l.morphTexture,t);else{let g=0;for(let M=0;M<h.length;M++)g+=h[M];const y=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function JT(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const ty=new jt,A0=new lp(1,1),ny=new Za,iy=new ju,ry=new ja,b0=[],C0=[],R0=new Float32Array(16),P0=new Float32Array(9),I0=new Float32Array(4);function Uo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=b0[i];if(s===void 0&&(s=new Float32Array(i),b0[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function cn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function un(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function gh(r,e){let t=C0[e];t===void 0&&(t=new Int32Array(e),C0[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function jT(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function KT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2fv(this.addr,e),un(t,e)}}function QT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(cn(t,e))return;r.uniform3fv(this.addr,e),un(t,e)}}function $T(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4fv(this.addr,e),un(t,e)}}function eA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;I0.set(n),r.uniformMatrix2fv(this.addr,!1,I0),un(t,n)}}function tA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;P0.set(n),r.uniformMatrix3fv(this.addr,!1,P0),un(t,n)}}function nA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;R0.set(n),r.uniformMatrix4fv(this.addr,!1,R0),un(t,n)}}function iA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function rA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2iv(this.addr,e),un(t,e)}}function sA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3iv(this.addr,e),un(t,e)}}function oA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4iv(this.addr,e),un(t,e)}}function aA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function lA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2uiv(this.addr,e),un(t,e)}}function cA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3uiv(this.addr,e),un(t,e)}}function uA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4uiv(this.addr,e),un(t,e)}}function hA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(A0.compareFunction=ep,s=A0):s=ty,t.setTexture2D(e||s,i)}function fA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||iy,i)}function dA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||ry,i)}function pA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||ny,i)}function mA(r){switch(r){case 5126:return jT;case 35664:return KT;case 35665:return QT;case 35666:return $T;case 35674:return eA;case 35675:return tA;case 35676:return nA;case 5124:case 35670:return iA;case 35667:case 35671:return rA;case 35668:case 35672:return sA;case 35669:case 35673:return oA;case 5125:return aA;case 36294:return lA;case 36295:return cA;case 36296:return uA;case 35678:case 36198:case 36298:case 36306:case 35682:return hA;case 35679:case 36299:case 36307:return fA;case 35680:case 36300:case 36308:case 36293:return dA;case 36289:case 36303:case 36311:case 36292:return pA}}function gA(r,e){r.uniform1fv(this.addr,e)}function _A(r,e){const t=Uo(e,this.size,2);r.uniform2fv(this.addr,t)}function vA(r,e){const t=Uo(e,this.size,3);r.uniform3fv(this.addr,t)}function yA(r,e){const t=Uo(e,this.size,4);r.uniform4fv(this.addr,t)}function xA(r,e){const t=Uo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function SA(r,e){const t=Uo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function MA(r,e){const t=Uo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function EA(r,e){r.uniform1iv(this.addr,e)}function wA(r,e){r.uniform2iv(this.addr,e)}function TA(r,e){r.uniform3iv(this.addr,e)}function AA(r,e){r.uniform4iv(this.addr,e)}function bA(r,e){r.uniform1uiv(this.addr,e)}function CA(r,e){r.uniform2uiv(this.addr,e)}function RA(r,e){r.uniform3uiv(this.addr,e)}function PA(r,e){r.uniform4uiv(this.addr,e)}function IA(r,e,t){const n=this.cache,i=e.length,s=gh(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||ty,s[l])}function LA(r,e,t){const n=this.cache,i=e.length,s=gh(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||iy,s[l])}function DA(r,e,t){const n=this.cache,i=e.length,s=gh(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||ry,s[l])}function NA(r,e,t){const n=this.cache,i=e.length,s=gh(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||ny,s[l])}function UA(r){switch(r){case 5126:return gA;case 35664:return _A;case 35665:return vA;case 35666:return yA;case 35674:return xA;case 35675:return SA;case 35676:return MA;case 5124:case 35670:return EA;case 35667:case 35671:return wA;case 35668:case 35672:return TA;case 35669:case 35673:return AA;case 5125:return bA;case 36294:return CA;case 36295:return RA;case 36296:return PA;case 35678:case 36198:case 36298:case 36306:case 35682:return IA;case 35679:case 36299:case 36307:return LA;case 35680:case 36300:case 36308:case 36293:return DA;case 36289:case 36303:case 36311:case 36292:return NA}}class OA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=mA(t.type)}}class FA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=UA(t.type)}}class BA{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const dd=/(\w+)(\])?(\[|\.)?/g;function L0(r,e){r.seq.push(e),r.map[e.id]=e}function zA(r,e,t){const n=r.name,i=n.length;for(dd.lastIndex=0;;){const s=dd.exec(n),l=dd.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){L0(t,h===void 0?new OA(c,r,e):new FA(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new BA(c),L0(t,p)),t=p}}}class Qc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);zA(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function D0(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const kA=37297;let HA=0;function VA(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}const N0=new pt;function GA(r){It._getMatrix(N0,It.workingColorSpace,r);const e=`mat3( ${N0.elements.map(t=>t.toFixed(4))} )`;switch(It.getTransfer(r)){case Da:return[e,"LinearTransferOETF"];case zt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function U0(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+VA(r.getShaderSource(e),l)}else return i}function WA(r,e){const t=GA(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function XA(r,e){let t;switch(e){case P_:t="Linear";break;case I_:t="Reinhard";break;case L_:t="Cineon";break;case Vd:t="ACESFilmic";break;case N_:t="AgX";break;case U_:t="Neutral";break;case D_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Xc=new O;function YA(){It.getLuminanceCoefficients(Xc);const r=Xc.x.toFixed(4),e=Xc.y.toFixed(4),t=Xc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function qA(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ga).join(`
`)}function ZA(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function JA(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ga(r){return r!==""}function O0(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function F0(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const jA=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bd(r){return r.replace(jA,QA)}const KA=new Map;function QA(r,e){let t=gt[e];if(t===void 0){const n=KA.get(e);if(n!==void 0)t=gt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Bd(t)}const $A=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function B0(r){return r.replace($A,eb)}function eb(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function z0(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function tb(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===ku?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===_a?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ei&&(e="SHADOWMAP_TYPE_VSM"),e}function nb(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case hr:case Or:e="ENVMAP_TYPE_CUBE";break;case Io:e="ENVMAP_TYPE_CUBE_UV";break}return e}function ib(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Or:e="ENVMAP_MODE_REFRACTION";break}return e}function rb(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ya:e="ENVMAP_BLENDING_MULTIPLY";break;case C_:e="ENVMAP_BLENDING_MIX";break;case R_:e="ENVMAP_BLENDING_ADD";break}return e}function sb(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function ob(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=tb(t),h=nb(t),f=ib(t),p=rb(t),m=sb(t),g=qA(t),y=ZA(s),M=i.createProgram();let x,v,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ga).join(`
`),x.length>0&&(x+=`
`),v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ga).join(`
`),v.length>0&&(v+=`
`)):(x=[z0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ga).join(`
`),v=[z0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==zi?"#define TONE_MAPPING":"",t.toneMapping!==zi?gt.tonemapping_pars_fragment:"",t.toneMapping!==zi?XA("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,WA("linearToOutputTexel",t.outputColorSpace),YA(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ga).join(`
`)),l=Bd(l),l=O0(l,t),l=F0(l,t),c=Bd(c),c=O0(c,t),c=F0(c,t),l=B0(l),c=B0(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[g,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["#define varying in",t.glslVersion===Cd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Cd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=E+x+l,T=E+v+c,L=D0(i,i.VERTEX_SHADER,w),P=D0(i,i.FRAGMENT_SHADER,T);i.attachShader(M,L),i.attachShader(M,P),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function N(U){if(r.debug.checkShaderErrors){const J=i.getProgramInfoLog(M).trim(),Z=i.getShaderInfoLog(L).trim(),ee=i.getShaderInfoLog(P).trim();let ce=!0,K=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(ce=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,L,P);else{const ye=U0(i,L,"vertex"),H=U0(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+U.name+`
Material Type: `+U.type+`

Program Info Log: `+J+`
`+ye+`
`+H)}else J!==""?console.warn("THREE.WebGLProgram: Program Info Log:",J):(Z===""||ee==="")&&(K=!1);K&&(U.diagnostics={runnable:ce,programLog:J,vertexShader:{log:Z,prefix:x},fragmentShader:{log:ee,prefix:v}})}i.deleteShader(L),i.deleteShader(P),F=new Qc(i,M),R=JA(i,M)}let F;this.getUniforms=function(){return F===void 0&&N(this),F};let R;this.getAttributes=function(){return R===void 0&&N(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(M,kA)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=HA++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=L,this.fragmentShader=P,this}let ab=0;class lb{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new cb(e),t.set(e,n)),n}}class cb{constructor(e){this.id=ab++,this.code=e,this.usedTimes=0}}function ub(r,e,t,n,i,s,l){const c=new Ms,u=new lb,h=new Set,f=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,U,J,Z){const ee=J.fog,ce=Z.geometry,K=R.isMeshStandardMaterial?J.environment:null,ye=(R.isMeshStandardMaterial?t:e).get(R.envMap||K),H=ye&&ye.mapping===Io?ye.image.height:null,se=y[R.type];R.precision!==null&&(g=i.getMaxPrecision(R.precision),g!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",g,"instead."));const re=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,_e=re!==void 0?re.length:0;let Ie=0;ce.morphAttributes.position!==void 0&&(Ie=1),ce.morphAttributes.normal!==void 0&&(Ie=2),ce.morphAttributes.color!==void 0&&(Ie=3);let qe,oe,xe,Ce;if(se){const wt=wi[se];qe=wt.vertexShader,oe=wt.fragmentShader}else qe=R.vertexShader,oe=R.fragmentShader,u.update(R),xe=u.getVertexShaderID(R),Ce=u.getFragmentShaderID(R);const Ae=r.getRenderTarget(),tt=r.state.buffers.depth.getReversed(),St=Z.isInstancedMesh===!0,$e=Z.isBatchedMesh===!0,ut=!!R.map,bt=!!R.matcap,it=!!ye,z=!!R.aoMap,Vt=!!R.lightMap,ge=!!R.bumpMap,ve=!!R.normalMap,he=!!R.displacementMap,be=!!R.emissiveMap,ue=!!R.metalnessMap,D=!!R.roughnessMap,C=R.anisotropy>0,W=R.clearcoat>0,te=R.dispersion>0,de=R.iridescence>0,ae=R.sheen>0,Ve=R.transmission>0,Te=C&&!!R.anisotropyMap,ze=W&&!!R.clearcoatMap,vt=W&&!!R.clearcoatNormalMap,Se=W&&!!R.clearcoatRoughnessMap,ke=de&&!!R.iridescenceMap,rt=de&&!!R.iridescenceThicknessMap,st=ae&&!!R.sheenColorMap,Oe=ae&&!!R.sheenRoughnessMap,V=!!R.specularMap,fe=!!R.specularColorMap,Ne=!!R.specularIntensityMap,k=Ve&&!!R.transmissionMap,Ee=Ve&&!!R.thicknessMap,ne=!!R.gradientMap,me=!!R.alphaMap,Fe=R.alphaTest>0,Pe=!!R.alphaHash,nt=!!R.extensions;let Pt=zi;R.toneMapped&&(Ae===null||Ae.isXRRenderTarget===!0)&&(Pt=r.toneMapping);const Wt={shaderID:se,shaderType:R.type,shaderName:R.name,vertexShader:qe,fragmentShader:oe,defines:R.defines,customVertexShaderID:xe,customFragmentShaderID:Ce,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:g,batching:$e,batchingColor:$e&&Z._colorsTexture!==null,instancing:St,instancingColor:St&&Z.instanceColor!==null,instancingMorph:St&&Z.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Ae===null?r.outputColorSpace:Ae.isXRRenderTarget===!0?Ae.texture.colorSpace:Ts,alphaToCoverage:!!R.alphaToCoverage,map:ut,matcap:bt,envMap:it,envMapMode:it&&ye.mapping,envMapCubeUVHeight:H,aoMap:z,lightMap:Vt,bumpMap:ge,normalMap:ve,displacementMap:m&&he,emissiveMap:be,normalMapObjectSpace:ve&&R.normalMapType===V_,normalMapTangentSpace:ve&&R.normalMapType===Br,metalnessMap:ue,roughnessMap:D,anisotropy:C,anisotropyMap:Te,clearcoat:W,clearcoatMap:ze,clearcoatNormalMap:vt,clearcoatRoughnessMap:Se,dispersion:te,iridescence:de,iridescenceMap:ke,iridescenceThicknessMap:rt,sheen:ae,sheenColorMap:st,sheenRoughnessMap:Oe,specularMap:V,specularColorMap:fe,specularIntensityMap:Ne,transmission:Ve,transmissionMap:k,thicknessMap:Ee,gradientMap:ne,opaque:R.transparent===!1&&R.blending===xs&&R.alphaToCoverage===!1,alphaMap:me,alphaTest:Fe,alphaHash:Pe,combine:R.combine,mapUv:ut&&M(R.map.channel),aoMapUv:z&&M(R.aoMap.channel),lightMapUv:Vt&&M(R.lightMap.channel),bumpMapUv:ge&&M(R.bumpMap.channel),normalMapUv:ve&&M(R.normalMap.channel),displacementMapUv:he&&M(R.displacementMap.channel),emissiveMapUv:be&&M(R.emissiveMap.channel),metalnessMapUv:ue&&M(R.metalnessMap.channel),roughnessMapUv:D&&M(R.roughnessMap.channel),anisotropyMapUv:Te&&M(R.anisotropyMap.channel),clearcoatMapUv:ze&&M(R.clearcoatMap.channel),clearcoatNormalMapUv:vt&&M(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&M(R.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&M(R.iridescenceMap.channel),iridescenceThicknessMapUv:rt&&M(R.iridescenceThicknessMap.channel),sheenColorMapUv:st&&M(R.sheenColorMap.channel),sheenRoughnessMapUv:Oe&&M(R.sheenRoughnessMap.channel),specularMapUv:V&&M(R.specularMap.channel),specularColorMapUv:fe&&M(R.specularColorMap.channel),specularIntensityMapUv:Ne&&M(R.specularIntensityMap.channel),transmissionMapUv:k&&M(R.transmissionMap.channel),thicknessMapUv:Ee&&M(R.thicknessMap.channel),alphaMapUv:me&&M(R.alphaMap.channel),vertexTangents:!!ce.attributes.tangent&&(ve||C),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,pointsUvs:Z.isPoints===!0&&!!ce.attributes.uv&&(ut||me),fog:!!ee,useFog:R.fog===!0,fogExp2:!!ee&&ee.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:tt,skinning:Z.isSkinnedMesh===!0,morphTargets:ce.morphAttributes.position!==void 0,morphNormals:ce.morphAttributes.normal!==void 0,morphColors:ce.morphAttributes.color!==void 0,morphTargetsCount:_e,morphTextureStride:Ie,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&U.length>0,shadowMapType:r.shadowMap.type,toneMapping:Pt,decodeVideoTexture:ut&&R.map.isVideoTexture===!0&&It.getTransfer(R.map.colorSpace)===zt,decodeVideoTextureEmissive:be&&R.emissiveMap.isVideoTexture===!0&&It.getTransfer(R.emissiveMap.colorSpace)===zt,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Fi,flipSided:R.side===Fn,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:nt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(nt&&R.extensions.multiDraw===!0||$e)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Wt.vertexUv1s=h.has(1),Wt.vertexUv2s=h.has(2),Wt.vertexUv3s=h.has(3),h.clear(),Wt}function v(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const U in R.defines)b.push(U),b.push(R.defines[U]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),b.dispersion&&c.enable(20),b.batchingColor&&c.enable(21),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.reverseDepthBuffer&&c.enable(4),b.skinning&&c.enable(5),b.morphTargets&&c.enable(6),b.morphNormals&&c.enable(7),b.morphColors&&c.enable(8),b.premultipliedAlpha&&c.enable(9),b.shadowMapEnabled&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.decodeVideoTextureEmissive&&c.enable(20),b.alphaToCoverage&&c.enable(21),R.push(c.mask)}function T(R){const b=y[R.type];let U;if(b){const J=wi[b];U=tv.clone(J.uniforms)}else U=R.uniforms;return U}function L(R,b){let U;for(let J=0,Z=f.length;J<Z;J++){const ee=f[J];if(ee.cacheKey===b){U=ee,++U.usedTimes;break}}return U===void 0&&(U=new ob(r,b,R,s),f.push(U)),U}function P(R){if(--R.usedTimes===0){const b=f.indexOf(R);f[b]=f[f.length-1],f.pop(),R.destroy()}}function N(R){u.remove(R)}function F(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:T,acquireProgram:L,releaseProgram:P,releaseShaderCache:N,programs:f,dispose:F}}function hb(){let r=new WeakMap;function e(l){return r.has(l)}function t(l){let c=r.get(l);return c===void 0&&(c={},r.set(l,c)),c}function n(l){r.delete(l)}function i(l,c,u){r.get(l)[c]=u}function s(){r=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function fb(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function k0(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function H0(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,g,y,M,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:g,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=g,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=M,v.group=x),e++,v}function c(p,m,g,y,M,x){const v=l(p,m,g,y,M,x);g.transmission>0?n.push(v):g.transparent===!0?i.push(v):t.push(v)}function u(p,m,g,y,M,x){const v=l(p,m,g,y,M,x);g.transmission>0?n.unshift(v):g.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||fb),n.length>1&&n.sort(m||k0),i.length>1&&i.sort(m||k0)}function f(){for(let p=e,m=r.length;p<m;p++){const g=r[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function db(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new H0,r.set(n,[l])):i>=s.length?(l=new H0,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function pb(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new O,color:new He};break;case"SpotLight":t={position:new O,direction:new O,color:new He,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new O,color:new He,distance:0,decay:0};break;case"HemisphereLight":t={direction:new O,skyColor:new He,groundColor:new He};break;case"RectAreaLight":t={color:new He,position:new O,halfWidth:new O,halfHeight:new O};break}return r[e.id]=t,t}}}function mb(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let gb=0;function _b(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function vb(r){const e=new pb,t=mb(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new O);const i=new O,s=new ct,l=new ct;function c(h){let f=0,p=0,m=0;for(let R=0;R<9;R++)n.probe[R].set(0,0,0);let g=0,y=0,M=0,x=0,v=0,E=0,w=0,T=0,L=0,P=0,N=0;h.sort(_b);for(let R=0,b=h.length;R<b;R++){const U=h[R],J=U.color,Z=U.intensity,ee=U.distance,ce=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)f+=J.r*Z,p+=J.g*Z,m+=J.b*Z;else if(U.isLightProbe){for(let K=0;K<9;K++)n.probe[K].addScaledVector(U.sh.coefficients[K],Z);N++}else if(U.isDirectionalLight){const K=e.get(U);if(K.color.copy(U.color).multiplyScalar(U.intensity),U.castShadow){const ye=U.shadow,H=t.get(U);H.shadowIntensity=ye.intensity,H.shadowBias=ye.bias,H.shadowNormalBias=ye.normalBias,H.shadowRadius=ye.radius,H.shadowMapSize=ye.mapSize,n.directionalShadow[g]=H,n.directionalShadowMap[g]=ce,n.directionalShadowMatrix[g]=U.shadow.matrix,E++}n.directional[g]=K,g++}else if(U.isSpotLight){const K=e.get(U);K.position.setFromMatrixPosition(U.matrixWorld),K.color.copy(J).multiplyScalar(Z),K.distance=ee,K.coneCos=Math.cos(U.angle),K.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),K.decay=U.decay,n.spot[M]=K;const ye=U.shadow;if(U.map&&(n.spotLightMap[L]=U.map,L++,ye.updateMatrices(U),U.castShadow&&P++),n.spotLightMatrix[M]=ye.matrix,U.castShadow){const H=t.get(U);H.shadowIntensity=ye.intensity,H.shadowBias=ye.bias,H.shadowNormalBias=ye.normalBias,H.shadowRadius=ye.radius,H.shadowMapSize=ye.mapSize,n.spotShadow[M]=H,n.spotShadowMap[M]=ce,T++}M++}else if(U.isRectAreaLight){const K=e.get(U);K.color.copy(J).multiplyScalar(Z),K.halfWidth.set(U.width*.5,0,0),K.halfHeight.set(0,U.height*.5,0),n.rectArea[x]=K,x++}else if(U.isPointLight){const K=e.get(U);if(K.color.copy(U.color).multiplyScalar(U.intensity),K.distance=U.distance,K.decay=U.decay,U.castShadow){const ye=U.shadow,H=t.get(U);H.shadowIntensity=ye.intensity,H.shadowBias=ye.bias,H.shadowNormalBias=ye.normalBias,H.shadowRadius=ye.radius,H.shadowMapSize=ye.mapSize,H.shadowCameraNear=ye.camera.near,H.shadowCameraFar=ye.camera.far,n.pointShadow[y]=H,n.pointShadowMap[y]=ce,n.pointShadowMatrix[y]=U.shadow.matrix,w++}n.point[y]=K,y++}else if(U.isHemisphereLight){const K=e.get(U);K.skyColor.copy(U.color).multiplyScalar(Z),K.groundColor.copy(U.groundColor).multiplyScalar(Z),n.hemi[v]=K,v++}}x>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=De.LTC_FLOAT_1,n.rectAreaLTC2=De.LTC_FLOAT_2):(n.rectAreaLTC1=De.LTC_HALF_1,n.rectAreaLTC2=De.LTC_HALF_2)),n.ambient[0]=f,n.ambient[1]=p,n.ambient[2]=m;const F=n.hash;(F.directionalLength!==g||F.pointLength!==y||F.spotLength!==M||F.rectAreaLength!==x||F.hemiLength!==v||F.numDirectionalShadows!==E||F.numPointShadows!==w||F.numSpotShadows!==T||F.numSpotMaps!==L||F.numLightProbes!==N)&&(n.directional.length=g,n.spot.length=M,n.rectArea.length=x,n.point.length=y,n.hemi.length=v,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=w,n.pointShadowMap.length=w,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=w,n.spotLightMatrix.length=T+L-P,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=P,n.numLightProbes=N,F.directionalLength=g,F.pointLength=y,F.spotLength=M,F.rectAreaLength=x,F.hemiLength=v,F.numDirectionalShadows=E,F.numPointShadows=w,F.numSpotShadows=T,F.numSpotMaps=L,F.numLightProbes=N,n.version=gb++)}function u(h,f){let p=0,m=0,g=0,y=0,M=0;const x=f.matrixWorldInverse;for(let v=0,E=h.length;v<E;v++){const w=h[v];if(w.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),p++}else if(w.isSpotLight){const T=n.spot[g];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),g++}else if(w.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),l.identity(),s.copy(w.matrixWorld),s.premultiply(x),l.extractRotation(s),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),m++}else if(w.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(x),M++}}}return{setup:c,setupView:u,state:n}}function V0(r){const e=new vb(r),t=[],n=[];function i(f){h.camera=f,t.length=0,n.length=0}function s(f){t.push(f)}function l(f){n.push(f)}function c(){e.setup(t)}function u(f){e.setupView(t,f)}const h={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:h,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function yb(r){let e=new WeakMap;function t(i,s=0){const l=e.get(i);let c;return l===void 0?(c=new V0(r),e.set(i,[c])):s>=l.length?(c=new V0(r),l.push(c)):c=l[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}const xb=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Sb=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Mb(r,e,t){let n=new Ka;const i=new pe,s=new pe,l=new Dt,c=new gp({depthPacking:H_}),u=new _p,h={},f=t.maxTextureSize,p={[ur]:Fn,[Fn]:ur,[Fi]:Fi},m=new bi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pe},radius:{value:4}},vertexShader:xb,fragmentShader:Sb}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const y=new _t;y.setAttribute("position",new kt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new sn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ku;let v=this.type;this.render=function(P,N,F){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),U=r.getActiveMipmapLevel(),J=r.state;J.setBlending(lr),J.buffers.color.setClear(1,1,1,1),J.buffers.depth.setTest(!0),J.setScissorTest(!1);const Z=v!==Ei&&this.type===Ei,ee=v===Ei&&this.type!==Ei;for(let ce=0,K=P.length;ce<K;ce++){const ye=P[ce],H=ye.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",ye,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const se=H.getFrameExtents();if(i.multiply(se),s.copy(H.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/se.x),i.x=s.x*se.x,H.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/se.y),i.y=s.y*se.y,H.mapSize.y=s.y)),H.map===null||Z===!0||ee===!0){const _e=this.type!==Ei?{minFilter:vn,magFilter:vn}:{};H.map!==null&&H.map.dispose(),H.map=new Vi(i.x,i.y,_e),H.map.texture.name=ye.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const re=H.getViewportCount();for(let _e=0;_e<re;_e++){const Ie=H.getViewport(_e);l.set(s.x*Ie.x,s.y*Ie.y,s.x*Ie.z,s.y*Ie.w),J.viewport(l),H.updateMatrices(ye,_e),n=H.getFrustum(),T(N,F,H.camera,ye,this.type)}H.isPointLightShadow!==!0&&this.type===Ei&&E(H,F),H.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,U)};function E(P,N){const F=e.update(M);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,g.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new Vi(i.x,i.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(N,null,F,m,M,null),g.uniforms.shadow_pass.value=P.mapPass.texture,g.uniforms.resolution.value=P.mapSize,g.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(N,null,F,g,M,null)}function w(P,N,F,R){let b=null;const U=F.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(U!==void 0)b=U;else if(b=F.isPointLight===!0?u:c,r.localClippingEnabled&&N.clipShadows===!0&&Array.isArray(N.clippingPlanes)&&N.clippingPlanes.length!==0||N.displacementMap&&N.displacementScale!==0||N.alphaMap&&N.alphaTest>0||N.map&&N.alphaTest>0){const J=b.uuid,Z=N.uuid;let ee=h[J];ee===void 0&&(ee={},h[J]=ee);let ce=ee[Z];ce===void 0&&(ce=b.clone(),ee[Z]=ce,N.addEventListener("dispose",L)),b=ce}if(b.visible=N.visible,b.wireframe=N.wireframe,R===Ei?b.side=N.shadowSide!==null?N.shadowSide:N.side:b.side=N.shadowSide!==null?N.shadowSide:p[N.side],b.alphaMap=N.alphaMap,b.alphaTest=N.alphaTest,b.map=N.map,b.clipShadows=N.clipShadows,b.clippingPlanes=N.clippingPlanes,b.clipIntersection=N.clipIntersection,b.displacementMap=N.displacementMap,b.displacementScale=N.displacementScale,b.displacementBias=N.displacementBias,b.wireframeLinewidth=N.wireframeLinewidth,b.linewidth=N.linewidth,F.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const J=r.properties.get(b);J.light=F}return b}function T(P,N,F,R,b){if(P.visible===!1)return;if(P.layers.test(N.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&b===Ei)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,P.matrixWorld);const Z=e.update(P),ee=P.material;if(Array.isArray(ee)){const ce=Z.groups;for(let K=0,ye=ce.length;K<ye;K++){const H=ce[K],se=ee[H.materialIndex];if(se&&se.visible){const re=w(P,se,R,b);P.onBeforeShadow(r,P,N,F,Z,re,H),r.renderBufferDirect(F,null,Z,re,P,H),P.onAfterShadow(r,P,N,F,Z,re,H)}}}else if(ee.visible){const ce=w(P,ee,R,b);P.onBeforeShadow(r,P,N,F,Z,ce,null),r.renderBufferDirect(F,null,Z,ce,P,null),P.onAfterShadow(r,P,N,F,Z,ce,null)}}const J=P.children;for(let Z=0,ee=J.length;Z<ee;Z++)T(J[Z],N,F,R,b)}function L(P){P.target.removeEventListener("dispose",L);for(const F in h){const R=h[F],b=P.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}const Eb={[nu]:iu,[ru]:au,[su]:lu,[ws]:ou,[iu]:nu,[au]:ru,[lu]:su,[ou]:ws};function wb(r,e){function t(){let k=!1;const Ee=new Dt;let ne=null;const me=new Dt(0,0,0,0);return{setMask:function(Fe){ne!==Fe&&!k&&(r.colorMask(Fe,Fe,Fe,Fe),ne=Fe)},setLocked:function(Fe){k=Fe},setClear:function(Fe,Pe,nt,Pt,Wt){Wt===!0&&(Fe*=Pt,Pe*=Pt,nt*=Pt),Ee.set(Fe,Pe,nt,Pt),me.equals(Ee)===!1&&(r.clearColor(Fe,Pe,nt,Pt),me.copy(Ee))},reset:function(){k=!1,ne=null,me.set(-1,0,0,0)}}}function n(){let k=!1,Ee=!1,ne=null,me=null,Fe=null;return{setReversed:function(Pe){if(Ee!==Pe){const nt=e.get("EXT_clip_control");Pe?nt.clipControlEXT(nt.LOWER_LEFT_EXT,nt.ZERO_TO_ONE_EXT):nt.clipControlEXT(nt.LOWER_LEFT_EXT,nt.NEGATIVE_ONE_TO_ONE_EXT),Ee=Pe;const Pt=Fe;Fe=null,this.setClear(Pt)}},getReversed:function(){return Ee},setTest:function(Pe){Pe?Ae(r.DEPTH_TEST):tt(r.DEPTH_TEST)},setMask:function(Pe){ne!==Pe&&!k&&(r.depthMask(Pe),ne=Pe)},setFunc:function(Pe){if(Ee&&(Pe=Eb[Pe]),me!==Pe){switch(Pe){case nu:r.depthFunc(r.NEVER);break;case iu:r.depthFunc(r.ALWAYS);break;case ru:r.depthFunc(r.LESS);break;case ws:r.depthFunc(r.LEQUAL);break;case su:r.depthFunc(r.EQUAL);break;case ou:r.depthFunc(r.GEQUAL);break;case au:r.depthFunc(r.GREATER);break;case lu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}me=Pe}},setLocked:function(Pe){k=Pe},setClear:function(Pe){Fe!==Pe&&(Ee&&(Pe=1-Pe),r.clearDepth(Pe),Fe=Pe)},reset:function(){k=!1,ne=null,me=null,Fe=null,Ee=!1}}}function i(){let k=!1,Ee=null,ne=null,me=null,Fe=null,Pe=null,nt=null,Pt=null,Wt=null;return{setTest:function(wt){k||(wt?Ae(r.STENCIL_TEST):tt(r.STENCIL_TEST))},setMask:function(wt){Ee!==wt&&!k&&(r.stencilMask(wt),Ee=wt)},setFunc:function(wt,en,yn){(ne!==wt||me!==en||Fe!==yn)&&(r.stencilFunc(wt,en,yn),ne=wt,me=en,Fe=yn)},setOp:function(wt,en,yn){(Pe!==wt||nt!==en||Pt!==yn)&&(r.stencilOp(wt,en,yn),Pe=wt,nt=en,Pt=yn)},setLocked:function(wt){k=wt},setClear:function(wt){Wt!==wt&&(r.clearStencil(wt),Wt=wt)},reset:function(){k=!1,Ee=null,ne=null,me=null,Fe=null,Pe=null,nt=null,Pt=null,Wt=null}}}const s=new t,l=new n,c=new i,u=new WeakMap,h=new WeakMap;let f={},p={},m=new WeakMap,g=[],y=null,M=!1,x=null,v=null,E=null,w=null,T=null,L=null,P=null,N=new He(0,0,0),F=0,R=!1,b=null,U=null,J=null,Z=null,ee=null;const ce=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let K=!1,ye=0;const H=r.getParameter(r.VERSION);H.indexOf("WebGL")!==-1?(ye=parseFloat(/^WebGL (\d)/.exec(H)[1]),K=ye>=1):H.indexOf("OpenGL ES")!==-1&&(ye=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),K=ye>=2);let se=null,re={};const _e=r.getParameter(r.SCISSOR_BOX),Ie=r.getParameter(r.VIEWPORT),qe=new Dt().fromArray(_e),oe=new Dt().fromArray(Ie);function xe(k,Ee,ne,me){const Fe=new Uint8Array(4),Pe=r.createTexture();r.bindTexture(k,Pe),r.texParameteri(k,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(k,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let nt=0;nt<ne;nt++)k===r.TEXTURE_3D||k===r.TEXTURE_2D_ARRAY?r.texImage3D(Ee,0,r.RGBA,1,1,me,0,r.RGBA,r.UNSIGNED_BYTE,Fe):r.texImage2D(Ee+nt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Fe);return Pe}const Ce={};Ce[r.TEXTURE_2D]=xe(r.TEXTURE_2D,r.TEXTURE_2D,1),Ce[r.TEXTURE_CUBE_MAP]=xe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Ce[r.TEXTURE_2D_ARRAY]=xe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ce[r.TEXTURE_3D]=xe(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ae(r.DEPTH_TEST),l.setFunc(ws),ge(!1),ve(Md),Ae(r.CULL_FACE),z(lr);function Ae(k){f[k]!==!0&&(r.enable(k),f[k]=!0)}function tt(k){f[k]!==!1&&(r.disable(k),f[k]=!1)}function St(k,Ee){return p[k]!==Ee?(r.bindFramebuffer(k,Ee),p[k]=Ee,k===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=Ee),k===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=Ee),!0):!1}function $e(k,Ee){let ne=g,me=!1;if(k){ne=m.get(Ee),ne===void 0&&(ne=[],m.set(Ee,ne));const Fe=k.textures;if(ne.length!==Fe.length||ne[0]!==r.COLOR_ATTACHMENT0){for(let Pe=0,nt=Fe.length;Pe<nt;Pe++)ne[Pe]=r.COLOR_ATTACHMENT0+Pe;ne.length=Fe.length,me=!0}}else ne[0]!==r.BACK&&(ne[0]=r.BACK,me=!0);me&&r.drawBuffers(ne)}function ut(k){return y!==k?(r.useProgram(k),y=k,!0):!1}const bt={[Dr]:r.FUNC_ADD,[h_]:r.FUNC_SUBTRACT,[f_]:r.FUNC_REVERSE_SUBTRACT};bt[d_]=r.MIN,bt[p_]=r.MAX;const it={[m_]:r.ZERO,[g_]:r.ONE,[__]:r.SRC_COLOR,[eu]:r.SRC_ALPHA,[E_]:r.SRC_ALPHA_SATURATE,[S_]:r.DST_COLOR,[y_]:r.DST_ALPHA,[v_]:r.ONE_MINUS_SRC_COLOR,[tu]:r.ONE_MINUS_SRC_ALPHA,[M_]:r.ONE_MINUS_DST_COLOR,[x_]:r.ONE_MINUS_DST_ALPHA,[w_]:r.CONSTANT_COLOR,[T_]:r.ONE_MINUS_CONSTANT_COLOR,[A_]:r.CONSTANT_ALPHA,[b_]:r.ONE_MINUS_CONSTANT_ALPHA};function z(k,Ee,ne,me,Fe,Pe,nt,Pt,Wt,wt){if(k===lr){M===!0&&(tt(r.BLEND),M=!1);return}if(M===!1&&(Ae(r.BLEND),M=!0),k!==u_){if(k!==x||wt!==R){if((v!==Dr||T!==Dr)&&(r.blendEquation(r.FUNC_ADD),v=Dr,T=Dr),wt)switch(k){case xs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ed:r.blendFunc(r.ONE,r.ONE);break;case wd:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Td:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case xs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ed:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case wd:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Td:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}E=null,w=null,L=null,P=null,N.set(0,0,0),F=0,x=k,R=wt}return}Fe=Fe||Ee,Pe=Pe||ne,nt=nt||me,(Ee!==v||Fe!==T)&&(r.blendEquationSeparate(bt[Ee],bt[Fe]),v=Ee,T=Fe),(ne!==E||me!==w||Pe!==L||nt!==P)&&(r.blendFuncSeparate(it[ne],it[me],it[Pe],it[nt]),E=ne,w=me,L=Pe,P=nt),(Pt.equals(N)===!1||Wt!==F)&&(r.blendColor(Pt.r,Pt.g,Pt.b,Wt),N.copy(Pt),F=Wt),x=k,R=!1}function Vt(k,Ee){k.side===Fi?tt(r.CULL_FACE):Ae(r.CULL_FACE);let ne=k.side===Fn;Ee&&(ne=!ne),ge(ne),k.blending===xs&&k.transparent===!1?z(lr):z(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.blendColor,k.blendAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),s.setMask(k.colorWrite);const me=k.stencilWrite;c.setTest(me),me&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),be(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Ae(r.SAMPLE_ALPHA_TO_COVERAGE):tt(r.SAMPLE_ALPHA_TO_COVERAGE)}function ge(k){b!==k&&(k?r.frontFace(r.CW):r.frontFace(r.CCW),b=k)}function ve(k){k!==a_?(Ae(r.CULL_FACE),k!==U&&(k===Md?r.cullFace(r.BACK):k===l_?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):tt(r.CULL_FACE),U=k}function he(k){k!==J&&(K&&r.lineWidth(k),J=k)}function be(k,Ee,ne){k?(Ae(r.POLYGON_OFFSET_FILL),(Z!==Ee||ee!==ne)&&(r.polygonOffset(Ee,ne),Z=Ee,ee=ne)):tt(r.POLYGON_OFFSET_FILL)}function ue(k){k?Ae(r.SCISSOR_TEST):tt(r.SCISSOR_TEST)}function D(k){k===void 0&&(k=r.TEXTURE0+ce-1),se!==k&&(r.activeTexture(k),se=k)}function C(k,Ee,ne){ne===void 0&&(se===null?ne=r.TEXTURE0+ce-1:ne=se);let me=re[ne];me===void 0&&(me={type:void 0,texture:void 0},re[ne]=me),(me.type!==k||me.texture!==Ee)&&(se!==ne&&(r.activeTexture(ne),se=ne),r.bindTexture(k,Ee||Ce[k]),me.type=k,me.texture=Ee)}function W(){const k=re[se];k!==void 0&&k.type!==void 0&&(r.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function te(){try{r.compressedTexImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function de(){try{r.compressedTexImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ae(){try{r.texSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ve(){try{r.texSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Te(){try{r.compressedTexSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ze(){try{r.compressedTexSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function vt(){try{r.texStorage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Se(){try{r.texStorage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ke(){try{r.texImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function rt(){try{r.texImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function st(k){qe.equals(k)===!1&&(r.scissor(k.x,k.y,k.z,k.w),qe.copy(k))}function Oe(k){oe.equals(k)===!1&&(r.viewport(k.x,k.y,k.z,k.w),oe.copy(k))}function V(k,Ee){let ne=h.get(Ee);ne===void 0&&(ne=new WeakMap,h.set(Ee,ne));let me=ne.get(k);me===void 0&&(me=r.getUniformBlockIndex(Ee,k.name),ne.set(k,me))}function fe(k,Ee){const me=h.get(Ee).get(k);u.get(Ee)!==me&&(r.uniformBlockBinding(Ee,me,k.__bindingPointIndex),u.set(Ee,me))}function Ne(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),l.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},se=null,re={},p={},m=new WeakMap,g=[],y=null,M=!1,x=null,v=null,E=null,w=null,T=null,L=null,P=null,N=new He(0,0,0),F=0,R=!1,b=null,U=null,J=null,Z=null,ee=null,qe.set(0,0,r.canvas.width,r.canvas.height),oe.set(0,0,r.canvas.width,r.canvas.height),s.reset(),l.reset(),c.reset()}return{buffers:{color:s,depth:l,stencil:c},enable:Ae,disable:tt,bindFramebuffer:St,drawBuffers:$e,useProgram:ut,setBlending:z,setMaterial:Vt,setFlipSided:ge,setCullFace:ve,setLineWidth:he,setPolygonOffset:be,setScissorTest:ue,activeTexture:D,bindTexture:C,unbindTexture:W,compressedTexImage2D:te,compressedTexImage3D:de,texImage2D:ke,texImage3D:rt,updateUBOMapping:V,uniformBlockBinding:fe,texStorage2D:vt,texStorage3D:Se,texSubImage2D:ae,texSubImage3D:Ve,compressedTexSubImage2D:Te,compressedTexSubImage3D:ze,scissor:st,viewport:Oe,reset:Ne}}function Tb(r,e,t,n,i,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new pe,f=new WeakMap;let p;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,C){return g?new OffscreenCanvas(D,C):Oa("canvas")}function M(D,C,W){let te=1;const de=ue(D);if((de.width>W||de.height>W)&&(te=W/Math.max(de.width,de.height)),te<1)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap||typeof VideoFrame<"u"&&D instanceof VideoFrame){const ae=Math.floor(te*de.width),Ve=Math.floor(te*de.height);p===void 0&&(p=y(ae,Ve));const Te=C?y(ae,Ve):p;return Te.width=ae,Te.height=Ve,Te.getContext("2d").drawImage(D,0,0,ae,Ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+de.width+"x"+de.height+") to ("+ae+"x"+Ve+")."),Te}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+de.width+"x"+de.height+")."),D;return D}function x(D){return D.generateMipmaps}function v(D){r.generateMipmap(D)}function E(D){return D.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:D.isWebGL3DRenderTarget?r.TEXTURE_3D:D.isWebGLArrayRenderTarget||D.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function w(D,C,W,te,de=!1){if(D!==null){if(r[D]!==void 0)return r[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let ae=C;if(C===r.RED&&(W===r.FLOAT&&(ae=r.R32F),W===r.HALF_FLOAT&&(ae=r.R16F),W===r.UNSIGNED_BYTE&&(ae=r.R8)),C===r.RED_INTEGER&&(W===r.UNSIGNED_BYTE&&(ae=r.R8UI),W===r.UNSIGNED_SHORT&&(ae=r.R16UI),W===r.UNSIGNED_INT&&(ae=r.R32UI),W===r.BYTE&&(ae=r.R8I),W===r.SHORT&&(ae=r.R16I),W===r.INT&&(ae=r.R32I)),C===r.RG&&(W===r.FLOAT&&(ae=r.RG32F),W===r.HALF_FLOAT&&(ae=r.RG16F),W===r.UNSIGNED_BYTE&&(ae=r.RG8)),C===r.RG_INTEGER&&(W===r.UNSIGNED_BYTE&&(ae=r.RG8UI),W===r.UNSIGNED_SHORT&&(ae=r.RG16UI),W===r.UNSIGNED_INT&&(ae=r.RG32UI),W===r.BYTE&&(ae=r.RG8I),W===r.SHORT&&(ae=r.RG16I),W===r.INT&&(ae=r.RG32I)),C===r.RGB_INTEGER&&(W===r.UNSIGNED_BYTE&&(ae=r.RGB8UI),W===r.UNSIGNED_SHORT&&(ae=r.RGB16UI),W===r.UNSIGNED_INT&&(ae=r.RGB32UI),W===r.BYTE&&(ae=r.RGB8I),W===r.SHORT&&(ae=r.RGB16I),W===r.INT&&(ae=r.RGB32I)),C===r.RGBA_INTEGER&&(W===r.UNSIGNED_BYTE&&(ae=r.RGBA8UI),W===r.UNSIGNED_SHORT&&(ae=r.RGBA16UI),W===r.UNSIGNED_INT&&(ae=r.RGBA32UI),W===r.BYTE&&(ae=r.RGBA8I),W===r.SHORT&&(ae=r.RGBA16I),W===r.INT&&(ae=r.RGBA32I)),C===r.RGB&&W===r.UNSIGNED_INT_5_9_9_9_REV&&(ae=r.RGB9_E5),C===r.RGBA){const Ve=de?Da:It.getTransfer(te);W===r.FLOAT&&(ae=r.RGBA32F),W===r.HALF_FLOAT&&(ae=r.RGBA16F),W===r.UNSIGNED_BYTE&&(ae=Ve===zt?r.SRGB8_ALPHA8:r.RGBA8),W===r.UNSIGNED_SHORT_4_4_4_4&&(ae=r.RGBA4),W===r.UNSIGNED_SHORT_5_5_5_1&&(ae=r.RGB5_A1)}return(ae===r.R16F||ae===r.R32F||ae===r.RG16F||ae===r.RG32F||ae===r.RGBA16F||ae===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ae}function T(D,C){let W;return D?C===null||C===fr||C===Eo?W=r.DEPTH24_STENCIL8:C===jn?W=r.DEPTH32F_STENCIL8:C===Mo&&(W=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===fr||C===Eo?W=r.DEPTH_COMPONENT24:C===jn?W=r.DEPTH_COMPONENT32F:C===Mo&&(W=r.DEPTH_COMPONENT16),W}function L(D,C){return x(D)===!0||D.isFramebufferTexture&&D.minFilter!==vn&&D.minFilter!==ln?Math.log2(Math.max(C.width,C.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?C.mipmaps.length:1}function P(D){const C=D.target;C.removeEventListener("dispose",P),F(C),C.isVideoTexture&&f.delete(C)}function N(D){const C=D.target;C.removeEventListener("dispose",N),b(C)}function F(D){const C=n.get(D);if(C.__webglInit===void 0)return;const W=D.source,te=m.get(W);if(te){const de=te[C.__cacheKey];de.usedTimes--,de.usedTimes===0&&R(D),Object.keys(te).length===0&&m.delete(W)}n.remove(D)}function R(D){const C=n.get(D);r.deleteTexture(C.__webglTexture);const W=D.source,te=m.get(W);delete te[C.__cacheKey],l.memory.textures--}function b(D){const C=n.get(D);if(D.depthTexture&&(D.depthTexture.dispose(),n.remove(D.depthTexture)),D.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(C.__webglFramebuffer[te]))for(let de=0;de<C.__webglFramebuffer[te].length;de++)r.deleteFramebuffer(C.__webglFramebuffer[te][de]);else r.deleteFramebuffer(C.__webglFramebuffer[te]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[te])}else{if(Array.isArray(C.__webglFramebuffer))for(let te=0;te<C.__webglFramebuffer.length;te++)r.deleteFramebuffer(C.__webglFramebuffer[te]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let te=0;te<C.__webglColorRenderbuffer.length;te++)C.__webglColorRenderbuffer[te]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[te]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const W=D.textures;for(let te=0,de=W.length;te<de;te++){const ae=n.get(W[te]);ae.__webglTexture&&(r.deleteTexture(ae.__webglTexture),l.memory.textures--),n.remove(W[te])}n.remove(D)}let U=0;function J(){U=0}function Z(){const D=U;return D>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+i.maxTextures),U+=1,D}function ee(D){const C=[];return C.push(D.wrapS),C.push(D.wrapT),C.push(D.wrapR||0),C.push(D.magFilter),C.push(D.minFilter),C.push(D.anisotropy),C.push(D.internalFormat),C.push(D.format),C.push(D.type),C.push(D.generateMipmaps),C.push(D.premultiplyAlpha),C.push(D.flipY),C.push(D.unpackAlignment),C.push(D.colorSpace),C.join()}function ce(D,C){const W=n.get(D);if(D.isVideoTexture&&he(D),D.isRenderTargetTexture===!1&&D.version>0&&W.__version!==D.version){const te=D.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{oe(W,D,C);return}}t.bindTexture(r.TEXTURE_2D,W.__webglTexture,r.TEXTURE0+C)}function K(D,C){const W=n.get(D);if(D.version>0&&W.__version!==D.version){oe(W,D,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,W.__webglTexture,r.TEXTURE0+C)}function ye(D,C){const W=n.get(D);if(D.version>0&&W.__version!==D.version){oe(W,D,C);return}t.bindTexture(r.TEXTURE_3D,W.__webglTexture,r.TEXTURE0+C)}function H(D,C){const W=n.get(D);if(D.version>0&&W.__version!==D.version){xe(W,D,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,W.__webglTexture,r.TEXTURE0+C)}const se={[Ra]:r.REPEAT,[gi]:r.CLAMP_TO_EDGE,[Pa]:r.MIRRORED_REPEAT},re={[vn]:r.NEAREST,[Gd]:r.NEAREST_MIPMAP_NEAREST,[go]:r.NEAREST_MIPMAP_LINEAR,[ln]:r.LINEAR,[va]:r.LINEAR_MIPMAP_NEAREST,[Bi]:r.LINEAR_MIPMAP_LINEAR},_e={[G_]:r.NEVER,[J_]:r.ALWAYS,[W_]:r.LESS,[ep]:r.LEQUAL,[X_]:r.EQUAL,[Z_]:r.GEQUAL,[Y_]:r.GREATER,[q_]:r.NOTEQUAL};function Ie(D,C){if(C.type===jn&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===ln||C.magFilter===va||C.magFilter===go||C.magFilter===Bi||C.minFilter===ln||C.minFilter===va||C.minFilter===go||C.minFilter===Bi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(D,r.TEXTURE_WRAP_S,se[C.wrapS]),r.texParameteri(D,r.TEXTURE_WRAP_T,se[C.wrapT]),(D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY)&&r.texParameteri(D,r.TEXTURE_WRAP_R,se[C.wrapR]),r.texParameteri(D,r.TEXTURE_MAG_FILTER,re[C.magFilter]),r.texParameteri(D,r.TEXTURE_MIN_FILTER,re[C.minFilter]),C.compareFunction&&(r.texParameteri(D,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(D,r.TEXTURE_COMPARE_FUNC,_e[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===vn||C.minFilter!==go&&C.minFilter!==Bi||C.type===jn&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const W=e.get("EXT_texture_filter_anisotropic");r.texParameterf(D,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function qe(D,C){let W=!1;D.__webglInit===void 0&&(D.__webglInit=!0,C.addEventListener("dispose",P));const te=C.source;let de=m.get(te);de===void 0&&(de={},m.set(te,de));const ae=ee(C);if(ae!==D.__cacheKey){de[ae]===void 0&&(de[ae]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,W=!0),de[ae].usedTimes++;const Ve=de[D.__cacheKey];Ve!==void 0&&(de[D.__cacheKey].usedTimes--,Ve.usedTimes===0&&R(C)),D.__cacheKey=ae,D.__webglTexture=de[ae].texture}return W}function oe(D,C,W){let te=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(te=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(te=r.TEXTURE_3D);const de=qe(D,C),ae=C.source;t.bindTexture(te,D.__webglTexture,r.TEXTURE0+W);const Ve=n.get(ae);if(ae.version!==Ve.__version||de===!0){t.activeTexture(r.TEXTURE0+W);const Te=It.getPrimaries(It.workingColorSpace),ze=C.colorSpace===sr?null:It.getPrimaries(C.colorSpace),vt=C.colorSpace===sr||Te===ze?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,vt);let Se=M(C.image,!1,i.maxTextureSize);Se=be(C,Se);const ke=s.convert(C.format,C.colorSpace),rt=s.convert(C.type);let st=w(C.internalFormat,ke,rt,C.colorSpace,C.isVideoTexture);Ie(te,C);let Oe;const V=C.mipmaps,fe=C.isVideoTexture!==!0,Ne=Ve.__version===void 0||de===!0,k=ae.dataReady,Ee=L(C,Se);if(C.isDepthTexture)st=T(C.format===To,C.type),Ne&&(fe?t.texStorage2D(r.TEXTURE_2D,1,st,Se.width,Se.height):t.texImage2D(r.TEXTURE_2D,0,st,Se.width,Se.height,0,ke,rt,null));else if(C.isDataTexture)if(V.length>0){fe&&Ne&&t.texStorage2D(r.TEXTURE_2D,Ee,st,V[0].width,V[0].height);for(let ne=0,me=V.length;ne<me;ne++)Oe=V[ne],fe?k&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,Oe.width,Oe.height,ke,rt,Oe.data):t.texImage2D(r.TEXTURE_2D,ne,st,Oe.width,Oe.height,0,ke,rt,Oe.data);C.generateMipmaps=!1}else fe?(Ne&&t.texStorage2D(r.TEXTURE_2D,Ee,st,Se.width,Se.height),k&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Se.width,Se.height,ke,rt,Se.data)):t.texImage2D(r.TEXTURE_2D,0,st,Se.width,Se.height,0,ke,rt,Se.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){fe&&Ne&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ee,st,V[0].width,V[0].height,Se.depth);for(let ne=0,me=V.length;ne<me;ne++)if(Oe=V[ne],C.format!==bn)if(ke!==null)if(fe){if(k)if(C.layerUpdates.size>0){const Fe=Od(Oe.width,Oe.height,C.format,C.type);for(const Pe of C.layerUpdates){const nt=Oe.data.subarray(Pe*Fe/Oe.data.BYTES_PER_ELEMENT,(Pe+1)*Fe/Oe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,Pe,Oe.width,Oe.height,1,ke,nt)}C.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,0,Oe.width,Oe.height,Se.depth,ke,Oe.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ne,st,Oe.width,Oe.height,Se.depth,0,Oe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else fe?k&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,0,Oe.width,Oe.height,Se.depth,ke,rt,Oe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ne,st,Oe.width,Oe.height,Se.depth,0,ke,rt,Oe.data)}else{fe&&Ne&&t.texStorage2D(r.TEXTURE_2D,Ee,st,V[0].width,V[0].height);for(let ne=0,me=V.length;ne<me;ne++)Oe=V[ne],C.format!==bn?ke!==null?fe?k&&t.compressedTexSubImage2D(r.TEXTURE_2D,ne,0,0,Oe.width,Oe.height,ke,Oe.data):t.compressedTexImage2D(r.TEXTURE_2D,ne,st,Oe.width,Oe.height,0,Oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):fe?k&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,Oe.width,Oe.height,ke,rt,Oe.data):t.texImage2D(r.TEXTURE_2D,ne,st,Oe.width,Oe.height,0,ke,rt,Oe.data)}else if(C.isDataArrayTexture)if(fe){if(Ne&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ee,st,Se.width,Se.height,Se.depth),k)if(C.layerUpdates.size>0){const ne=Od(Se.width,Se.height,C.format,C.type);for(const me of C.layerUpdates){const Fe=Se.data.subarray(me*ne/Se.data.BYTES_PER_ELEMENT,(me+1)*ne/Se.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,me,Se.width,Se.height,1,ke,rt,Fe)}C.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Se.width,Se.height,Se.depth,ke,rt,Se.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,st,Se.width,Se.height,Se.depth,0,ke,rt,Se.data);else if(C.isData3DTexture)fe?(Ne&&t.texStorage3D(r.TEXTURE_3D,Ee,st,Se.width,Se.height,Se.depth),k&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Se.width,Se.height,Se.depth,ke,rt,Se.data)):t.texImage3D(r.TEXTURE_3D,0,st,Se.width,Se.height,Se.depth,0,ke,rt,Se.data);else if(C.isFramebufferTexture){if(Ne)if(fe)t.texStorage2D(r.TEXTURE_2D,Ee,st,Se.width,Se.height);else{let ne=Se.width,me=Se.height;for(let Fe=0;Fe<Ee;Fe++)t.texImage2D(r.TEXTURE_2D,Fe,st,ne,me,0,ke,rt,null),ne>>=1,me>>=1}}else if(V.length>0){if(fe&&Ne){const ne=ue(V[0]);t.texStorage2D(r.TEXTURE_2D,Ee,st,ne.width,ne.height)}for(let ne=0,me=V.length;ne<me;ne++)Oe=V[ne],fe?k&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,ke,rt,Oe):t.texImage2D(r.TEXTURE_2D,ne,st,ke,rt,Oe);C.generateMipmaps=!1}else if(fe){if(Ne){const ne=ue(Se);t.texStorage2D(r.TEXTURE_2D,Ee,st,ne.width,ne.height)}k&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,ke,rt,Se)}else t.texImage2D(r.TEXTURE_2D,0,st,ke,rt,Se);x(C)&&v(te),Ve.__version=ae.version,C.onUpdate&&C.onUpdate(C)}D.__version=C.version}function xe(D,C,W){if(C.image.length!==6)return;const te=qe(D,C),de=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,D.__webglTexture,r.TEXTURE0+W);const ae=n.get(de);if(de.version!==ae.__version||te===!0){t.activeTexture(r.TEXTURE0+W);const Ve=It.getPrimaries(It.workingColorSpace),Te=C.colorSpace===sr?null:It.getPrimaries(C.colorSpace),ze=C.colorSpace===sr||Ve===Te?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,ze);const vt=C.isCompressedTexture||C.image[0].isCompressedTexture,Se=C.image[0]&&C.image[0].isDataTexture,ke=[];for(let me=0;me<6;me++)!vt&&!Se?ke[me]=M(C.image[me],!0,i.maxCubemapSize):ke[me]=Se?C.image[me].image:C.image[me],ke[me]=be(C,ke[me]);const rt=ke[0],st=s.convert(C.format,C.colorSpace),Oe=s.convert(C.type),V=w(C.internalFormat,st,Oe,C.colorSpace),fe=C.isVideoTexture!==!0,Ne=ae.__version===void 0||te===!0,k=de.dataReady;let Ee=L(C,rt);Ie(r.TEXTURE_CUBE_MAP,C);let ne;if(vt){fe&&Ne&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,V,rt.width,rt.height);for(let me=0;me<6;me++){ne=ke[me].mipmaps;for(let Fe=0;Fe<ne.length;Fe++){const Pe=ne[Fe];C.format!==bn?st!==null?fe?k&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe,0,0,Pe.width,Pe.height,st,Pe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe,V,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):fe?k&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe,0,0,Pe.width,Pe.height,st,Oe,Pe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe,V,Pe.width,Pe.height,0,st,Oe,Pe.data)}}}else{if(ne=C.mipmaps,fe&&Ne){ne.length>0&&Ee++;const me=ue(ke[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,V,me.width,me.height)}for(let me=0;me<6;me++)if(Se){fe?k&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,ke[me].width,ke[me].height,st,Oe,ke[me].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,V,ke[me].width,ke[me].height,0,st,Oe,ke[me].data);for(let Fe=0;Fe<ne.length;Fe++){const nt=ne[Fe].image[me].image;fe?k&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe+1,0,0,nt.width,nt.height,st,Oe,nt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe+1,V,nt.width,nt.height,0,st,Oe,nt.data)}}else{fe?k&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,st,Oe,ke[me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,V,st,Oe,ke[me]);for(let Fe=0;Fe<ne.length;Fe++){const Pe=ne[Fe];fe?k&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe+1,0,0,st,Oe,Pe.image[me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,Fe+1,V,st,Oe,Pe.image[me])}}}x(C)&&v(r.TEXTURE_CUBE_MAP),ae.__version=de.version,C.onUpdate&&C.onUpdate(C)}D.__version=C.version}function Ce(D,C,W,te,de,ae){const Ve=s.convert(W.format,W.colorSpace),Te=s.convert(W.type),ze=w(W.internalFormat,Ve,Te,W.colorSpace),vt=n.get(C),Se=n.get(W);if(Se.__renderTarget=C,!vt.__hasExternalTextures){const ke=Math.max(1,C.width>>ae),rt=Math.max(1,C.height>>ae);de===r.TEXTURE_3D||de===r.TEXTURE_2D_ARRAY?t.texImage3D(de,ae,ze,ke,rt,C.depth,0,Ve,Te,null):t.texImage2D(de,ae,ze,ke,rt,0,Ve,Te,null)}t.bindFramebuffer(r.FRAMEBUFFER,D),ve(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,te,de,Se.__webglTexture,0,ge(C)):(de===r.TEXTURE_2D||de>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,te,de,Se.__webglTexture,ae),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ae(D,C,W){if(r.bindRenderbuffer(r.RENDERBUFFER,D),C.depthBuffer){const te=C.depthTexture,de=te&&te.isDepthTexture?te.type:null,ae=T(C.stencilBuffer,de),Ve=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Te=ge(C);ve(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Te,ae,C.width,C.height):W?r.renderbufferStorageMultisample(r.RENDERBUFFER,Te,ae,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,ae,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Ve,r.RENDERBUFFER,D)}else{const te=C.textures;for(let de=0;de<te.length;de++){const ae=te[de],Ve=s.convert(ae.format,ae.colorSpace),Te=s.convert(ae.type),ze=w(ae.internalFormat,Ve,Te,ae.colorSpace),vt=ge(C);W&&ve(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,vt,ze,C.width,C.height):ve(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,vt,ze,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,ze,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function tt(D,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,D),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const te=n.get(C.depthTexture);te.__renderTarget=C,(!te.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),ce(C.depthTexture,0);const de=te.__webglTexture,ae=ge(C);if(C.depthTexture.format===wo)ve(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,de,0,ae):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,de,0);else if(C.depthTexture.format===To)ve(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,de,0,ae):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,de,0);else throw new Error("Unknown depthTexture format")}function St(D){const C=n.get(D),W=D.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==D.depthTexture){const te=D.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),te){const de=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,te.removeEventListener("dispose",de)};te.addEventListener("dispose",de),C.__depthDisposeCallback=de}C.__boundDepthTexture=te}if(D.depthTexture&&!C.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");tt(C.__webglFramebuffer,D)}else if(W){C.__webglDepthbuffer=[];for(let te=0;te<6;te++)if(t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[te]),C.__webglDepthbuffer[te]===void 0)C.__webglDepthbuffer[te]=r.createRenderbuffer(),Ae(C.__webglDepthbuffer[te],D,!1);else{const de=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ae=C.__webglDepthbuffer[te];r.bindRenderbuffer(r.RENDERBUFFER,ae),r.framebufferRenderbuffer(r.FRAMEBUFFER,de,r.RENDERBUFFER,ae)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=r.createRenderbuffer(),Ae(C.__webglDepthbuffer,D,!1);else{const te=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,de=C.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,de),r.framebufferRenderbuffer(r.FRAMEBUFFER,te,r.RENDERBUFFER,de)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function $e(D,C,W){const te=n.get(D);C!==void 0&&Ce(te.__webglFramebuffer,D,D.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),W!==void 0&&St(D)}function ut(D){const C=D.texture,W=n.get(D),te=n.get(C);D.addEventListener("dispose",N);const de=D.textures,ae=D.isWebGLCubeRenderTarget===!0,Ve=de.length>1;if(Ve||(te.__webglTexture===void 0&&(te.__webglTexture=r.createTexture()),te.__version=C.version,l.memory.textures++),ae){W.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)if(C.mipmaps&&C.mipmaps.length>0){W.__webglFramebuffer[Te]=[];for(let ze=0;ze<C.mipmaps.length;ze++)W.__webglFramebuffer[Te][ze]=r.createFramebuffer()}else W.__webglFramebuffer[Te]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){W.__webglFramebuffer=[];for(let Te=0;Te<C.mipmaps.length;Te++)W.__webglFramebuffer[Te]=r.createFramebuffer()}else W.__webglFramebuffer=r.createFramebuffer();if(Ve)for(let Te=0,ze=de.length;Te<ze;Te++){const vt=n.get(de[Te]);vt.__webglTexture===void 0&&(vt.__webglTexture=r.createTexture(),l.memory.textures++)}if(D.samples>0&&ve(D)===!1){W.__webglMultisampledFramebuffer=r.createFramebuffer(),W.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let Te=0;Te<de.length;Te++){const ze=de[Te];W.__webglColorRenderbuffer[Te]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,W.__webglColorRenderbuffer[Te]);const vt=s.convert(ze.format,ze.colorSpace),Se=s.convert(ze.type),ke=w(ze.internalFormat,vt,Se,ze.colorSpace,D.isXRRenderTarget===!0),rt=ge(D);r.renderbufferStorageMultisample(r.RENDERBUFFER,rt,ke,D.width,D.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,W.__webglColorRenderbuffer[Te])}r.bindRenderbuffer(r.RENDERBUFFER,null),D.depthBuffer&&(W.__webglDepthRenderbuffer=r.createRenderbuffer(),Ae(W.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ae){t.bindTexture(r.TEXTURE_CUBE_MAP,te.__webglTexture),Ie(r.TEXTURE_CUBE_MAP,C);for(let Te=0;Te<6;Te++)if(C.mipmaps&&C.mipmaps.length>0)for(let ze=0;ze<C.mipmaps.length;ze++)Ce(W.__webglFramebuffer[Te][ze],D,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Te,ze);else Ce(W.__webglFramebuffer[Te],D,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Te,0);x(C)&&v(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ve){for(let Te=0,ze=de.length;Te<ze;Te++){const vt=de[Te],Se=n.get(vt);t.bindTexture(r.TEXTURE_2D,Se.__webglTexture),Ie(r.TEXTURE_2D,vt),Ce(W.__webglFramebuffer,D,vt,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,0),x(vt)&&v(r.TEXTURE_2D)}t.unbindTexture()}else{let Te=r.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(Te=D.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(Te,te.__webglTexture),Ie(Te,C),C.mipmaps&&C.mipmaps.length>0)for(let ze=0;ze<C.mipmaps.length;ze++)Ce(W.__webglFramebuffer[ze],D,C,r.COLOR_ATTACHMENT0,Te,ze);else Ce(W.__webglFramebuffer,D,C,r.COLOR_ATTACHMENT0,Te,0);x(C)&&v(Te),t.unbindTexture()}D.depthBuffer&&St(D)}function bt(D){const C=D.textures;for(let W=0,te=C.length;W<te;W++){const de=C[W];if(x(de)){const ae=E(D),Ve=n.get(de).__webglTexture;t.bindTexture(ae,Ve),v(ae),t.unbindTexture()}}}const it=[],z=[];function Vt(D){if(D.samples>0){if(ve(D)===!1){const C=D.textures,W=D.width,te=D.height;let de=r.COLOR_BUFFER_BIT;const ae=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ve=n.get(D),Te=C.length>1;if(Te)for(let ze=0;ze<C.length;ze++)t.bindFramebuffer(r.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ve.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ve.__webglFramebuffer);for(let ze=0;ze<C.length;ze++){if(D.resolveDepthBuffer&&(D.depthBuffer&&(de|=r.DEPTH_BUFFER_BIT),D.stencilBuffer&&D.resolveStencilBuffer&&(de|=r.STENCIL_BUFFER_BIT)),Te){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ve.__webglColorRenderbuffer[ze]);const vt=n.get(C[ze]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,vt,0)}r.blitFramebuffer(0,0,W,te,0,0,W,te,de,r.NEAREST),u===!0&&(it.length=0,z.length=0,it.push(r.COLOR_ATTACHMENT0+ze),D.depthBuffer&&D.resolveDepthBuffer===!1&&(it.push(ae),z.push(ae),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,z)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,it))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Te)for(let ze=0;ze<C.length;ze++){t.bindFramebuffer(r.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.RENDERBUFFER,Ve.__webglColorRenderbuffer[ze]);const vt=n.get(C[ze]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ve.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.TEXTURE_2D,vt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer)}else if(D.depthBuffer&&D.resolveDepthBuffer===!1&&u){const C=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[C])}}}function ge(D){return Math.min(i.maxSamples,D.samples)}function ve(D){const C=n.get(D);return D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function he(D){const C=l.render.frame;f.get(D)!==C&&(f.set(D,C),D.update())}function be(D,C){const W=D.colorSpace,te=D.format,de=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||W!==Ts&&W!==sr&&(It.getTransfer(W)===zt?(te!==bn||de!==Ai)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),C}function ue(D){return typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement?(h.width=D.naturalWidth||D.width,h.height=D.naturalHeight||D.height):typeof VideoFrame<"u"&&D instanceof VideoFrame?(h.width=D.displayWidth,h.height=D.displayHeight):(h.width=D.width,h.height=D.height),h}this.allocateTextureUnit=Z,this.resetTextureUnits=J,this.setTexture2D=ce,this.setTexture2DArray=K,this.setTexture3D=ye,this.setTextureCube=H,this.rebindTextures=$e,this.setupRenderTarget=ut,this.updateRenderTargetMipmap=bt,this.updateMultisampleRenderTarget=Vt,this.setupDepthRenderbuffer=St,this.setupFrameBufferTexture=Ce,this.useMultisampledRTT=ve}function sy(r,e){function t(n,i=sr){let s;const l=It.getTransfer(i);if(n===Ai)return r.UNSIGNED_BYTE;if(n===Gu)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Wu)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Yd)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Wd)return r.BYTE;if(n===Xd)return r.SHORT;if(n===Mo)return r.UNSIGNED_SHORT;if(n===Vu)return r.INT;if(n===fr)return r.UNSIGNED_INT;if(n===jn)return r.FLOAT;if(n===Lo)return r.HALF_FLOAT;if(n===qd)return r.ALPHA;if(n===Zd)return r.RGB;if(n===bn)return r.RGBA;if(n===Jd)return r.LUMINANCE;if(n===jd)return r.LUMINANCE_ALPHA;if(n===wo)return r.DEPTH_COMPONENT;if(n===To)return r.DEPTH_STENCIL;if(n===Xu)return r.RED;if(n===qa)return r.RED_INTEGER;if(n===Kd)return r.RG;if(n===Yu)return r.RG_INTEGER;if(n===qu)return r.RGBA_INTEGER;if(n===ya||n===xa||n===Sa||n===Ma)if(l===zt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===ya)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===xa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Sa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ma)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===ya)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===xa)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Sa)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ma)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===cu||n===uu||n===hu||n===fu)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===cu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===uu)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===hu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===fu)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===du||n===pu||n===mu)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===du||n===pu)return l===zt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===mu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===gu||n===_u||n===vu||n===yu||n===xu||n===Su||n===Mu||n===Eu||n===wu||n===Tu||n===Au||n===bu||n===Cu||n===Ru)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===gu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===_u)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===vu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===yu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===xu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Su)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Mu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Eu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===wu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Tu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Au)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===bu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Cu)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ru)return l===zt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ea||n===Pu||n===Iu)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Ea)return l===zt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Pu)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Iu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Qd||n===Lu||n===Du||n===Nu)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Ea)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Lu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Du)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Nu)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Eo?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}const Ab=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,bb=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Cb{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new jt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new bi({vertexShader:Ab,fragmentShader:bb,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new sn(new No(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Rb extends Gi{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,y=null;const M=new Cb,x=t.getContextAttributes();let v=null,E=null;const w=[],T=[],L=new pe;let P=null;const N=new $t;N.viewport=new Dt;const F=new $t;F.viewport=new Dt;const R=[N,F],b=new Jv;let U=null,J=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(oe){let xe=w[oe];return xe===void 0&&(xe=new Kc,w[oe]=xe),xe.getTargetRaySpace()},this.getControllerGrip=function(oe){let xe=w[oe];return xe===void 0&&(xe=new Kc,w[oe]=xe),xe.getGripSpace()},this.getHand=function(oe){let xe=w[oe];return xe===void 0&&(xe=new Kc,w[oe]=xe),xe.getHandSpace()};function Z(oe){const xe=T.indexOf(oe.inputSource);if(xe===-1)return;const Ce=w[xe];Ce!==void 0&&(Ce.update(oe.inputSource,oe.frame,h||l),Ce.dispatchEvent({type:oe.type,data:oe.inputSource}))}function ee(){i.removeEventListener("select",Z),i.removeEventListener("selectstart",Z),i.removeEventListener("selectend",Z),i.removeEventListener("squeeze",Z),i.removeEventListener("squeezestart",Z),i.removeEventListener("squeezeend",Z),i.removeEventListener("end",ee),i.removeEventListener("inputsourceschange",ce);for(let oe=0;oe<w.length;oe++){const xe=T[oe];xe!==null&&(T[oe]=null,w[oe].disconnect(xe))}U=null,J=null,M.reset(),e.setRenderTarget(v),g=null,m=null,p=null,i=null,E=null,qe.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(oe){s=oe,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(oe){c=oe,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(oe){h=oe},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(oe){if(i=oe,i!==null){if(v=e.getRenderTarget(),i.addEventListener("select",Z),i.addEventListener("selectstart",Z),i.addEventListener("selectend",Z),i.addEventListener("squeeze",Z),i.addEventListener("squeezestart",Z),i.addEventListener("squeezeend",Z),i.addEventListener("end",ee),i.addEventListener("inputsourceschange",ce),x.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Ce=null,Ae=null,tt=null;x.depth&&(tt=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Ce=x.stencil?To:wo,Ae=x.stencil?Eo:fr);const St={colorFormat:t.RGBA8,depthFormat:tt,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(St),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new Vi(m.textureWidth,m.textureHeight,{format:bn,type:Ai,depthTexture:new lp(m.textureWidth,m.textureHeight,Ae,void 0,void 0,void 0,void 0,void 0,void 0,Ce),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1,resolveStencilBuffer:m.ignoreDepthValues===!1})}else{const Ce={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,Ce),i.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),E=new Vi(g.framebufferWidth,g.framebufferHeight,{format:bn,type:Ai,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),qe.setContext(i),qe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function ce(oe){for(let xe=0;xe<oe.removed.length;xe++){const Ce=oe.removed[xe],Ae=T.indexOf(Ce);Ae>=0&&(T[Ae]=null,w[Ae].disconnect(Ce))}for(let xe=0;xe<oe.added.length;xe++){const Ce=oe.added[xe];let Ae=T.indexOf(Ce);if(Ae===-1){for(let St=0;St<w.length;St++)if(St>=T.length){T.push(Ce),Ae=St;break}else if(T[St]===null){T[St]=Ce,Ae=St;break}if(Ae===-1)break}const tt=w[Ae];tt&&tt.connect(Ce)}}const K=new O,ye=new O;function H(oe,xe,Ce){K.setFromMatrixPosition(xe.matrixWorld),ye.setFromMatrixPosition(Ce.matrixWorld);const Ae=K.distanceTo(ye),tt=xe.projectionMatrix.elements,St=Ce.projectionMatrix.elements,$e=tt[14]/(tt[10]-1),ut=tt[14]/(tt[10]+1),bt=(tt[9]+1)/tt[5],it=(tt[9]-1)/tt[5],z=(tt[8]-1)/tt[0],Vt=(St[8]+1)/St[0],ge=$e*z,ve=$e*Vt,he=Ae/(-z+Vt),be=he*-z;if(xe.matrixWorld.decompose(oe.position,oe.quaternion,oe.scale),oe.translateX(be),oe.translateZ(he),oe.matrixWorld.compose(oe.position,oe.quaternion,oe.scale),oe.matrixWorldInverse.copy(oe.matrixWorld).invert(),tt[10]===-1)oe.projectionMatrix.copy(xe.projectionMatrix),oe.projectionMatrixInverse.copy(xe.projectionMatrixInverse);else{const ue=$e+he,D=ut+he,C=ge-be,W=ve+(Ae-be),te=bt*ut/D*ue,de=it*ut/D*ue;oe.projectionMatrix.makePerspective(C,W,te,de,ue,D),oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert()}}function se(oe,xe){xe===null?oe.matrixWorld.copy(oe.matrix):oe.matrixWorld.multiplyMatrices(xe.matrixWorld,oe.matrix),oe.matrixWorldInverse.copy(oe.matrixWorld).invert()}this.updateCamera=function(oe){if(i===null)return;let xe=oe.near,Ce=oe.far;M.texture!==null&&(M.depthNear>0&&(xe=M.depthNear),M.depthFar>0&&(Ce=M.depthFar)),b.near=F.near=N.near=xe,b.far=F.far=N.far=Ce,(U!==b.near||J!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),U=b.near,J=b.far),N.layers.mask=oe.layers.mask|2,F.layers.mask=oe.layers.mask|4,b.layers.mask=N.layers.mask|F.layers.mask;const Ae=oe.parent,tt=b.cameras;se(b,Ae);for(let St=0;St<tt.length;St++)se(tt[St],Ae);tt.length===2?H(b,N,F):b.projectionMatrix.copy(N.projectionMatrix),re(oe,b,Ae)};function re(oe,xe,Ce){Ce===null?oe.matrix.copy(xe.matrixWorld):(oe.matrix.copy(Ce.matrixWorld),oe.matrix.invert(),oe.matrix.multiply(xe.matrixWorld)),oe.matrix.decompose(oe.position,oe.quaternion,oe.scale),oe.updateMatrixWorld(!0),oe.projectionMatrix.copy(xe.projectionMatrix),oe.projectionMatrixInverse.copy(xe.projectionMatrixInverse),oe.isPerspectiveCamera&&(oe.fov=Ao*2*Math.atan(1/oe.projectionMatrix.elements[5]),oe.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(oe){u=oe,m!==null&&(m.fixedFoveation=oe),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=oe)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(b)};let _e=null;function Ie(oe,xe){if(f=xe.getViewerPose(h||l),y=xe,f!==null){const Ce=f.views;g!==null&&(e.setRenderTargetFramebuffer(E,g.framebuffer),e.setRenderTarget(E));let Ae=!1;Ce.length!==b.cameras.length&&(b.cameras.length=0,Ae=!0);for(let $e=0;$e<Ce.length;$e++){const ut=Ce[$e];let bt=null;if(g!==null)bt=g.getViewport(ut);else{const z=p.getViewSubImage(m,ut);bt=z.viewport,$e===0&&(e.setRenderTargetTextures(E,z.colorTexture,z.depthStencilTexture),e.setRenderTarget(E))}let it=R[$e];it===void 0&&(it=new $t,it.layers.enable($e),it.viewport=new Dt,R[$e]=it),it.matrix.fromArray(ut.transform.matrix),it.matrix.decompose(it.position,it.quaternion,it.scale),it.projectionMatrix.fromArray(ut.projectionMatrix),it.projectionMatrixInverse.copy(it.projectionMatrix).invert(),it.viewport.set(bt.x,bt.y,bt.width,bt.height),$e===0&&(b.matrix.copy(it.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),Ae===!0&&b.cameras.push(it)}const tt=i.enabledFeatures;if(tt&&tt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&p){const $e=p.getDepthInformation(Ce[0]);$e&&$e.isValid&&$e.texture&&M.init(e,$e,i.renderState)}}for(let Ce=0;Ce<w.length;Ce++){const Ae=T[Ce],tt=w[Ce];Ae!==null&&tt!==void 0&&tt.update(Ae,xe,h||l)}_e&&_e(oe,xe),xe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:xe}),y=null}const qe=new ey;qe.setAnimationLoop(Ie),this.setAnimationLoop=function(oe){_e=oe},this.dispose=function(){}}}const us=new oi,Pb=new ct;function Ib(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,ev(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,E,w,T){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),f(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&g(x,v,T)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),M(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,E,w):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Fn&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Fn&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const E=e.get(v),w=E.envMap,T=E.envMapRotation;w&&(x.envMap.value=w,us.copy(T),us.x*=-1,us.y*=-1,us.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(us.y*=-1,us.z*=-1),x.envMapRotation.value.setFromMatrix4(Pb.makeRotationFromEuler(us)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap&&(x.lightMap.value=v.lightMap,x.lightMapIntensity.value=v.lightMapIntensity,t(v.lightMap,x.lightMapTransform)),v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,E,w){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*E,x.scale.value=w*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function f(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),v.envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function g(x,v,E){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Fn&&x.clearcoatNormalScale.value.negate())),v.dispersion>0&&(x.dispersion.value=v.dispersion),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function M(x,v){const E=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Lb(r,e,t,n){let i={},s={},l=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const T=w.program;n.uniformBlockBinding(E,T)}function h(E,w){let T=i[E.id];T===void 0&&(y(E),T=f(E),i[E.id]=T,E.addEventListener("dispose",x));const L=w.program;n.updateUBOMapping(E,L);const P=e.render.frame;s[E.id]!==P&&(m(E),s[E.id]=P)}function f(E){const w=p();E.__bindingPointIndex=w;const T=r.createBuffer(),L=E.__size,P=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,L,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,T),T}function p(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],T=E.uniforms,L=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let P=0,N=T.length;P<N;P++){const F=Array.isArray(T[P])?T[P]:[T[P]];for(let R=0,b=F.length;R<b;R++){const U=F[R];if(g(U,P,R,L)===!0){const J=U.__offset,Z=Array.isArray(U.value)?U.value:[U.value];let ee=0;for(let ce=0;ce<Z.length;ce++){const K=Z[ce],ye=M(K);typeof K=="number"||typeof K=="boolean"?(U.__data[0]=K,r.bufferSubData(r.UNIFORM_BUFFER,J+ee,U.__data)):K.isMatrix3?(U.__data[0]=K.elements[0],U.__data[1]=K.elements[1],U.__data[2]=K.elements[2],U.__data[3]=0,U.__data[4]=K.elements[3],U.__data[5]=K.elements[4],U.__data[6]=K.elements[5],U.__data[7]=0,U.__data[8]=K.elements[6],U.__data[9]=K.elements[7],U.__data[10]=K.elements[8],U.__data[11]=0):(K.toArray(U.__data,ee),ee+=ye.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,J,U.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(E,w,T,L){const P=E.value,N=w+"_"+T;if(L[N]===void 0)return typeof P=="number"||typeof P=="boolean"?L[N]=P:L[N]=P.clone(),!0;{const F=L[N];if(typeof P=="number"||typeof P=="boolean"){if(F!==P)return L[N]=P,!0}else if(F.equals(P)===!1)return F.copy(P),!0}return!1}function y(E){const w=E.uniforms;let T=0;const L=16;for(let N=0,F=w.length;N<F;N++){const R=Array.isArray(w[N])?w[N]:[w[N]];for(let b=0,U=R.length;b<U;b++){const J=R[b],Z=Array.isArray(J.value)?J.value:[J.value];for(let ee=0,ce=Z.length;ee<ce;ee++){const K=Z[ee],ye=M(K),H=T%L,se=H%ye.boundary,re=H+se;T+=se,re!==0&&L-re<ye.storage&&(T+=L-re),J.__data=new Float32Array(ye.storage/Float32Array.BYTES_PER_ELEMENT),J.__offset=T,T+=ye.storage}}}const P=T%L;return P>0&&(T+=L-P),E.__size=T,E.__cache={},this}function M(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const T=l.indexOf(w.__bindingPointIndex);l.splice(T,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function v(){for(const E in i)r.deleteBuffer(i[E]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class oy{constructor(e={}){const{canvas:t=K_(),context:n=null,depth:i=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let g;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");g=n.getContextAttributes().alpha}else g=l;const y=new Uint32Array(4),M=new Int32Array(4);let x=null,v=null;const E=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=zi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let L=!1;this._outputColorSpace=Zn;let P=0,N=0,F=null,R=-1,b=null;const U=new Dt,J=new Dt;let Z=null;const ee=new He(0);let ce=0,K=t.width,ye=t.height,H=1,se=null,re=null;const _e=new Dt(0,0,K,ye),Ie=new Dt(0,0,K,ye);let qe=!1;const oe=new Ka;let xe=!1,Ce=!1;const Ae=new ct,tt=new ct,St=new O,$e=new Dt,ut={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let bt=!1;function it(){return F===null?H:1}let z=n;function Vt(I,q){return t.getContext(I,q)}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${zu}`),t.addEventListener("webglcontextlost",me,!1),t.addEventListener("webglcontextrestored",Fe,!1),t.addEventListener("webglcontextcreationerror",Pe,!1),z===null){const q="webgl2";if(z=Vt(q,I),z===null)throw Vt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ge,ve,he,be,ue,D,C,W,te,de,ae,Ve,Te,ze,vt,Se,ke,rt,st,Oe,V,fe,Ne,k;function Ee(){ge=new WT(z),ge.init(),fe=new sy(z,ge),ve=new FT(z,ge,e,fe),he=new wb(z,ge),ve.reverseDepthBuffer&&m&&he.buffers.depth.setReversed(!0),be=new qT(z),ue=new hb,D=new Tb(z,ge,he,ue,ve,fe,be),C=new zT(T),W=new GT(T),te=new $E(z),Ne=new UT(z,te),de=new XT(z,te,be,Ne),ae=new JT(z,de,te,be),st=new ZT(z,ve,D),Se=new BT(ue),Ve=new ub(T,C,W,ge,ve,Ne,Se),Te=new Ib(T,ue),ze=new db,vt=new yb(ge),rt=new NT(T,C,W,he,ae,g,u),ke=new Mb(T,ae,ve),k=new Lb(z,be,ve,he),Oe=new OT(z,ge,be),V=new YT(z,ge,be),be.programs=Ve.programs,T.capabilities=ve,T.extensions=ge,T.properties=ue,T.renderLists=ze,T.shadowMap=ke,T.state=he,T.info=be}Ee();const ne=new Rb(T,z);this.xr=ne,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const I=ge.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ge.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(I){I!==void 0&&(H=I,this.setSize(K,ye,!1))},this.getSize=function(I){return I.set(K,ye)},this.setSize=function(I,q,Q=!0){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}K=I,ye=q,t.width=Math.floor(I*H),t.height=Math.floor(q*H),Q===!0&&(t.style.width=I+"px",t.style.height=q+"px"),this.setViewport(0,0,I,q)},this.getDrawingBufferSize=function(I){return I.set(K*H,ye*H).floor()},this.setDrawingBufferSize=function(I,q,Q){K=I,ye=q,H=Q,t.width=Math.floor(I*Q),t.height=Math.floor(q*Q),this.setViewport(0,0,I,q)},this.getCurrentViewport=function(I){return I.copy(U)},this.getViewport=function(I){return I.copy(_e)},this.setViewport=function(I,q,Q,$){I.isVector4?_e.set(I.x,I.y,I.z,I.w):_e.set(I,q,Q,$),he.viewport(U.copy(_e).multiplyScalar(H).round())},this.getScissor=function(I){return I.copy(Ie)},this.setScissor=function(I,q,Q,$){I.isVector4?Ie.set(I.x,I.y,I.z,I.w):Ie.set(I,q,Q,$),he.scissor(J.copy(Ie).multiplyScalar(H).round())},this.getScissorTest=function(){return qe},this.setScissorTest=function(I){he.setScissorTest(qe=I)},this.setOpaqueSort=function(I){se=I},this.setTransparentSort=function(I){re=I},this.getClearColor=function(I){return I.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor(...arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha(...arguments)},this.clear=function(I=!0,q=!0,Q=!0){let $=0;if(I){let Y=!1;if(F!==null){const Me=F.texture.format;Y=Me===qu||Me===Yu||Me===qa}if(Y){const Me=F.texture.type,Le=Me===Ai||Me===fr||Me===Mo||Me===Eo||Me===Gu||Me===Wu,Ge=rt.getClearColor(),We=rt.getClearAlpha(),ot=Ge.r,et=Ge.g,Re=Ge.b;Le?(y[0]=ot,y[1]=et,y[2]=Re,y[3]=We,z.clearBufferuiv(z.COLOR,0,y)):(M[0]=ot,M[1]=et,M[2]=Re,M[3]=We,z.clearBufferiv(z.COLOR,0,M))}else $|=z.COLOR_BUFFER_BIT}q&&($|=z.DEPTH_BUFFER_BIT),Q&&($|=z.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),z.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",me,!1),t.removeEventListener("webglcontextrestored",Fe,!1),t.removeEventListener("webglcontextcreationerror",Pe,!1),rt.dispose(),ze.dispose(),vt.dispose(),ue.dispose(),C.dispose(),W.dispose(),ae.dispose(),Ne.dispose(),k.dispose(),Ve.dispose(),ne.dispose(),ne.removeEventListener("sessionstart",rl),ne.removeEventListener("sessionend",sl),Ri.stop()};function me(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function Fe(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const I=be.autoReset,q=ke.enabled,Q=ke.autoUpdate,$=ke.needsUpdate,Y=ke.type;Ee(),be.autoReset=I,ke.enabled=q,ke.autoUpdate=Q,ke.needsUpdate=$,ke.type=Y}function Pe(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function nt(I){const q=I.target;q.removeEventListener("dispose",nt),Pt(q)}function Pt(I){Wt(I),ue.remove(I)}function Wt(I){const q=ue.get(I).programs;q!==void 0&&(q.forEach(function(Q){Ve.releaseProgram(Q)}),I.isShaderMaterial&&Ve.releaseShaderCache(I))}this.renderBufferDirect=function(I,q,Q,$,Y,Me){q===null&&(q=ut);const Le=Y.isMesh&&Y.matrixWorld.determinant()<0,Ge=_h(I,q,Q,$,Y);he.setMaterial($,Le);let We=Q.index,ot=1;if($.wireframe===!0){if(We=de.getWireframeAttribute(Q),We===void 0)return;ot=2}const et=Q.drawRange,Re=Q.attributes.position;let Je=et.start*ot,Mt=(et.start+et.count)*ot;Me!==null&&(Je=Math.max(Je,Me.start*ot),Mt=Math.min(Mt,(Me.start+Me.count)*ot)),We!==null?(Je=Math.max(Je,0),Mt=Math.min(Mt,We.count)):Re!=null&&(Je=Math.max(Je,0),Mt=Math.min(Mt,Re.count));const Tt=Mt-Je;if(Tt<0||Tt===1/0)return;Ne.setup(Y,$,Ge,Q,We);let At,yt=Oe;if(We!==null&&(At=te.get(We),yt=V,yt.setIndex(At)),Y.isMesh)$.wireframe===!0?(he.setLineWidth($.wireframeLinewidth*it()),yt.setMode(z.LINES)):yt.setMode(z.TRIANGLES);else if(Y.isLine){let je=$.linewidth;je===void 0&&(je=1),he.setLineWidth(je*it()),Y.isLineSegments?yt.setMode(z.LINES):Y.isLineLoop?yt.setMode(z.LINE_LOOP):yt.setMode(z.LINE_STRIP)}else Y.isPoints?yt.setMode(z.POINTS):Y.isSprite&&yt.setMode(z.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)jc("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),yt.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(ge.get("WEBGL_multi_draw"))yt.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const je=Y._multiDrawStarts,Ut=Y._multiDrawCounts,Rt=Y._multiDrawCount,kn=We?te.get(We).bytesPerElement:1,Xi=ue.get($).currentProgram.getUniforms();for(let hn=0;hn<Rt;hn++)Xi.setValue(z,"_gl_DrawID",hn),yt.render(je[hn]/kn,Ut[hn])}else if(Y.isInstancedMesh)yt.renderInstances(Je,Tt,Y.count);else if(Q.isInstancedBufferGeometry){const je=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,Ut=Math.min(Q.instanceCount,je);yt.renderInstances(Je,Tt,Ut)}else yt.render(Je,Tt)};function wt(I,q,Q){I.transparent===!0&&I.side===Fi&&I.forceSinglePass===!1?(I.side=Fn,I.needsUpdate=!0,Ns(I,q,Q),I.side=ur,I.needsUpdate=!0,Ns(I,q,Q),I.side=Fi):Ns(I,q,Q)}this.compile=function(I,q,Q=null){Q===null&&(Q=I),v=vt.get(Q),v.init(q),w.push(v),Q.traverseVisible(function(Y){Y.isLight&&Y.layers.test(q.layers)&&(v.pushLight(Y),Y.castShadow&&v.pushShadow(Y))}),I!==Q&&I.traverseVisible(function(Y){Y.isLight&&Y.layers.test(q.layers)&&(v.pushLight(Y),Y.castShadow&&v.pushShadow(Y))}),v.setupLights();const $=new Set;return I.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const Me=Y.material;if(Me)if(Array.isArray(Me))for(let Le=0;Le<Me.length;Le++){const Ge=Me[Le];wt(Ge,Q,Y),$.add(Ge)}else wt(Me,Q,Y),$.add(Me)}),v=w.pop(),$},this.compileAsync=function(I,q,Q=null){const $=this.compile(I,q,Q);return new Promise(Y=>{function Me(){if($.forEach(function(Le){ue.get(Le).currentProgram.isReady()&&$.delete(Le)}),$.size===0){Y(I);return}setTimeout(Me,10)}ge.get("KHR_parallel_shader_compile")!==null?Me():setTimeout(Me,10)})};let en=null;function yn(I){en&&en(I)}function rl(){Ri.stop()}function sl(){Ri.start()}const Ri=new ey;Ri.setAnimationLoop(yn),typeof self<"u"&&Ri.setContext(self),this.setAnimationLoop=function(I){en=I,ne.setAnimationLoop(I),I===null?Ri.stop():Ri.start()},ne.addEventListener("sessionstart",rl),ne.addEventListener("sessionend",sl),this.render=function(I,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(ne.cameraAutoUpdate===!0&&ne.updateCamera(q),q=ne.getCamera()),I.isScene===!0&&I.onBeforeRender(T,I,q,F),v=vt.get(I,w.length),v.init(q),w.push(v),tt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),oe.setFromProjectionMatrix(tt),Ce=this.localClippingEnabled,xe=Se.init(this.clippingPlanes,Ce),x=ze.get(I,E.length),x.init(),E.push(x),ne.enabled===!0&&ne.isPresenting===!0){const Me=T.xr.getDepthSensingMesh();Me!==null&&Vr(Me,q,-1/0,T.sortObjects)}Vr(I,q,0,T.sortObjects),x.finish(),T.sortObjects===!0&&x.sort(se,re),bt=ne.enabled===!1||ne.isPresenting===!1||ne.hasDepthSensing()===!1,bt&&rt.addToRenderList(x,I),this.info.render.frame++,xe===!0&&Se.beginShadows();const Q=v.state.shadowsArray;ke.render(Q,I,q),xe===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset();const $=x.opaque,Y=x.transmissive;if(v.setupLights(),q.isArrayCamera){const Me=q.cameras;if(Y.length>0)for(let Le=0,Ge=Me.length;Le<Ge;Le++){const We=Me[Le];pr($,Y,I,We)}bt&&rt.render(I);for(let Le=0,Ge=Me.length;Le<Ge;Le++){const We=Me[Le];ol(x,I,We,We.viewport)}}else Y.length>0&&pr($,Y,I,q),bt&&rt.render(I),ol(x,I,q);F!==null&&N===0&&(D.updateMultisampleRenderTarget(F),D.updateRenderTargetMipmap(F)),I.isScene===!0&&I.onAfterRender(T,I,q),Ne.resetDefaultState(),R=-1,b=null,w.pop(),w.length>0?(v=w[w.length-1],xe===!0&&Se.setGlobalState(T.clippingPlanes,v.state.camera)):v=null,E.pop(),E.length>0?x=E[E.length-1]:x=null};function Vr(I,q,Q,$){if(I.visible===!1)return;if(I.layers.test(q.layers)){if(I.isGroup)Q=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(q);else if(I.isLight)v.pushLight(I),I.castShadow&&v.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||oe.intersectsSprite(I)){$&&$e.setFromMatrixPosition(I.matrixWorld).applyMatrix4(tt);const Le=ae.update(I),Ge=I.material;Ge.visible&&x.push(I,Le,Ge,Q,$e.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||oe.intersectsObject(I))){const Le=ae.update(I),Ge=I.material;if($&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),$e.copy(I.boundingSphere.center)):(Le.boundingSphere===null&&Le.computeBoundingSphere(),$e.copy(Le.boundingSphere.center)),$e.applyMatrix4(I.matrixWorld).applyMatrix4(tt)),Array.isArray(Ge)){const We=Le.groups;for(let ot=0,et=We.length;ot<et;ot++){const Re=We[ot],Je=Ge[Re.materialIndex];Je&&Je.visible&&x.push(I,Le,Je,Q,$e.z,Re)}}else Ge.visible&&x.push(I,Le,Ge,Q,$e.z,null)}}const Me=I.children;for(let Le=0,Ge=Me.length;Le<Ge;Le++)Vr(Me[Le],q,Q,$)}function ol(I,q,Q,$){const Y=I.opaque,Me=I.transmissive,Le=I.transparent;v.setupLightsView(Q),xe===!0&&Se.setGlobalState(T.clippingPlanes,Q),$&&he.viewport(U.copy($)),Y.length>0&&Ds(Y,q,Q),Me.length>0&&Ds(Me,q,Q),Le.length>0&&Ds(Le,q,Q),he.buffers.depth.setTest(!0),he.buffers.depth.setMask(!0),he.buffers.color.setMask(!0),he.setPolygonOffset(!1)}function pr(I,q,Q,$){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;v.state.transmissionRenderTarget[$.id]===void 0&&(v.state.transmissionRenderTarget[$.id]=new Vi(1,1,{generateMipmaps:!0,type:ge.has("EXT_color_buffer_half_float")||ge.has("EXT_color_buffer_float")?Lo:Ai,minFilter:Bi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:It.workingColorSpace}));const Me=v.state.transmissionRenderTarget[$.id],Le=$.viewport||U;Me.setSize(Le.z*T.transmissionResolutionScale,Le.w*T.transmissionResolutionScale);const Ge=T.getRenderTarget();T.setRenderTarget(Me),T.getClearColor(ee),ce=T.getClearAlpha(),ce<1&&T.setClearColor(16777215,.5),T.clear(),bt&&rt.render(Q);const We=T.toneMapping;T.toneMapping=zi;const ot=$.viewport;if($.viewport!==void 0&&($.viewport=void 0),v.setupLightsView($),xe===!0&&Se.setGlobalState(T.clippingPlanes,$),Ds(I,Q,$),D.updateMultisampleRenderTarget(Me),D.updateRenderTargetMipmap(Me),ge.has("WEBGL_multisampled_render_to_texture")===!1){let et=!1;for(let Re=0,Je=q.length;Re<Je;Re++){const Mt=q[Re],Tt=Mt.object,At=Mt.geometry,yt=Mt.material,je=Mt.group;if(yt.side===Fi&&Tt.layers.test($.layers)){const Ut=yt.side;yt.side=Fn,yt.needsUpdate=!0,al(Tt,Q,$,At,yt,je),yt.side=Ut,yt.needsUpdate=!0,et=!0}}et===!0&&(D.updateMultisampleRenderTarget(Me),D.updateRenderTargetMipmap(Me))}T.setRenderTarget(Ge),T.setClearColor(ee,ce),ot!==void 0&&($.viewport=ot),T.toneMapping=We}function Ds(I,q,Q){const $=q.isScene===!0?q.overrideMaterial:null;for(let Y=0,Me=I.length;Y<Me;Y++){const Le=I[Y],Ge=Le.object,We=Le.geometry,ot=Le.group;let et=Le.material;et.allowOverride===!0&&$!==null&&(et=$),Ge.layers.test(Q.layers)&&al(Ge,q,Q,We,et,ot)}}function al(I,q,Q,$,Y,Me){I.onBeforeRender(T,q,Q,$,Y,Me),I.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),Y.onBeforeRender(T,q,Q,$,I,Me),Y.transparent===!0&&Y.side===Fi&&Y.forceSinglePass===!1?(Y.side=Fn,Y.needsUpdate=!0,T.renderBufferDirect(Q,q,$,Y,I,Me),Y.side=ur,Y.needsUpdate=!0,T.renderBufferDirect(Q,q,$,Y,I,Me),Y.side=Fi):T.renderBufferDirect(Q,q,$,Y,I,Me),I.onAfterRender(T,q,Q,$,Y,Me)}function Ns(I,q,Q){q.isScene!==!0&&(q=ut);const $=ue.get(I),Y=v.state.lights,Me=v.state.shadowsArray,Le=Y.state.version,Ge=Ve.getParameters(I,Y.state,Me,q,Q),We=Ve.getProgramCacheKey(Ge);let ot=$.programs;$.environment=I.isMeshStandardMaterial?q.environment:null,$.fog=q.fog,$.envMap=(I.isMeshStandardMaterial?W:C).get(I.envMap||$.environment),$.envMapRotation=$.environment!==null&&I.envMap===null?q.environmentRotation:I.envMapRotation,ot===void 0&&(I.addEventListener("dispose",nt),ot=new Map,$.programs=ot);let et=ot.get(We);if(et!==void 0){if($.currentProgram===et&&$.lightsStateVersion===Le)return cl(I,Ge),et}else Ge.uniforms=Ve.getUniforms(I),I.onBeforeCompile(Ge,T),et=Ve.acquireProgram(Ge,We),ot.set(We,et),$.uniforms=Ge.uniforms;const Re=$.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(Re.clippingPlanes=Se.uniform),cl(I,Ge),$.needsLights=ul(I),$.lightsStateVersion=Le,$.needsLights&&(Re.ambientLightColor.value=Y.state.ambient,Re.lightProbe.value=Y.state.probe,Re.directionalLights.value=Y.state.directional,Re.directionalLightShadows.value=Y.state.directionalShadow,Re.spotLights.value=Y.state.spot,Re.spotLightShadows.value=Y.state.spotShadow,Re.rectAreaLights.value=Y.state.rectArea,Re.ltc_1.value=Y.state.rectAreaLTC1,Re.ltc_2.value=Y.state.rectAreaLTC2,Re.pointLights.value=Y.state.point,Re.pointLightShadows.value=Y.state.pointShadow,Re.hemisphereLights.value=Y.state.hemi,Re.directionalShadowMap.value=Y.state.directionalShadowMap,Re.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,Re.spotShadowMap.value=Y.state.spotShadowMap,Re.spotLightMatrix.value=Y.state.spotLightMatrix,Re.spotLightMap.value=Y.state.spotLightMap,Re.pointShadowMap.value=Y.state.pointShadowMap,Re.pointShadowMatrix.value=Y.state.pointShadowMatrix),$.currentProgram=et,$.uniformsList=null,et}function ll(I){if(I.uniformsList===null){const q=I.currentProgram.getUniforms();I.uniformsList=Qc.seqWithValue(q.seq,I.uniforms)}return I.uniformsList}function cl(I,q){const Q=ue.get(I);Q.outputColorSpace=q.outputColorSpace,Q.batching=q.batching,Q.batchingColor=q.batchingColor,Q.instancing=q.instancing,Q.instancingColor=q.instancingColor,Q.instancingMorph=q.instancingMorph,Q.skinning=q.skinning,Q.morphTargets=q.morphTargets,Q.morphNormals=q.morphNormals,Q.morphColors=q.morphColors,Q.morphTargetsCount=q.morphTargetsCount,Q.numClippingPlanes=q.numClippingPlanes,Q.numIntersection=q.numClipIntersection,Q.vertexAlphas=q.vertexAlphas,Q.vertexTangents=q.vertexTangents,Q.toneMapping=q.toneMapping}function _h(I,q,Q,$,Y){q.isScene!==!0&&(q=ut),D.resetTextureUnits();const Me=q.fog,Le=$.isMeshStandardMaterial?q.environment:null,Ge=F===null?T.outputColorSpace:F.isXRRenderTarget===!0?F.texture.colorSpace:Ts,We=($.isMeshStandardMaterial?W:C).get($.envMap||Le),ot=$.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,et=!!Q.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),Re=!!Q.morphAttributes.position,Je=!!Q.morphAttributes.normal,Mt=!!Q.morphAttributes.color;let Tt=zi;$.toneMapped&&(F===null||F.isXRRenderTarget===!0)&&(Tt=T.toneMapping);const At=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,yt=At!==void 0?At.length:0,je=ue.get($),Ut=v.state.lights;if(xe===!0&&(Ce===!0||I!==b)){const gn=I===b&&$.id===R;Se.setState($,I,gn)}let Rt=!1;$.version===je.__version?(je.needsLights&&je.lightsStateVersion!==Ut.state.version||je.outputColorSpace!==Ge||Y.isBatchedMesh&&je.batching===!1||!Y.isBatchedMesh&&je.batching===!0||Y.isBatchedMesh&&je.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&je.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&je.instancing===!1||!Y.isInstancedMesh&&je.instancing===!0||Y.isSkinnedMesh&&je.skinning===!1||!Y.isSkinnedMesh&&je.skinning===!0||Y.isInstancedMesh&&je.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&je.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&je.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&je.instancingMorph===!1&&Y.morphTexture!==null||je.envMap!==We||$.fog===!0&&je.fog!==Me||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==Se.numPlanes||je.numIntersection!==Se.numIntersection)||je.vertexAlphas!==ot||je.vertexTangents!==et||je.morphTargets!==Re||je.morphNormals!==Je||je.morphColors!==Mt||je.toneMapping!==Tt||je.morphTargetsCount!==yt)&&(Rt=!0):(Rt=!0,je.__version=$.version);let kn=je.currentProgram;Rt===!0&&(kn=Ns($,q,Y));let Xi=!1,hn=!1,mr=!1;const Ct=kn.getUniforms(),Hn=je.uniforms;if(he.useProgram(kn.program)&&(Xi=!0,hn=!0,mr=!0),$.id!==R&&(R=$.id,hn=!0),Xi||b!==I){he.buffers.depth.getReversed()?(Ae.copy(I.projectionMatrix),SS(Ae),MS(Ae),Ct.setValue(z,"projectionMatrix",Ae)):Ct.setValue(z,"projectionMatrix",I.projectionMatrix),Ct.setValue(z,"viewMatrix",I.matrixWorldInverse);const on=Ct.map.cameraPosition;on!==void 0&&on.setValue(z,St.setFromMatrixPosition(I.matrixWorld)),ve.logarithmicDepthBuffer&&Ct.setValue(z,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Ct.setValue(z,"isOrthographic",I.isOrthographicCamera===!0),b!==I&&(b=I,hn=!0,mr=!0)}if(Y.isSkinnedMesh){Ct.setOptional(z,Y,"bindMatrix"),Ct.setOptional(z,Y,"bindMatrixInverse");const gn=Y.skeleton;gn&&(gn.boneTexture===null&&gn.computeBoneTexture(),Ct.setValue(z,"boneTexture",gn.boneTexture,D))}Y.isBatchedMesh&&(Ct.setOptional(z,Y,"batchingTexture"),Ct.setValue(z,"batchingTexture",Y._matricesTexture,D),Ct.setOptional(z,Y,"batchingIdTexture"),Ct.setValue(z,"batchingIdTexture",Y._indirectTexture,D),Ct.setOptional(z,Y,"batchingColorTexture"),Y._colorsTexture!==null&&Ct.setValue(z,"batchingColorTexture",Y._colorsTexture,D));const Vn=Q.morphAttributes;if((Vn.position!==void 0||Vn.normal!==void 0||Vn.color!==void 0)&&st.update(Y,Q,kn),(hn||je.receiveShadow!==Y.receiveShadow)&&(je.receiveShadow=Y.receiveShadow,Ct.setValue(z,"receiveShadow",Y.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(Hn.envMap.value=We,Hn.flipEnvMap.value=We.isCubeTexture&&We.isRenderTargetTexture===!1?-1:1),$.isMeshStandardMaterial&&$.envMap===null&&q.environment!==null&&(Hn.envMapIntensity.value=q.environmentIntensity),hn&&(Ct.setValue(z,"toneMappingExposure",T.toneMappingExposure),je.needsLights&&vh(Hn,mr),Me&&$.fog===!0&&Te.refreshFogUniforms(Hn,Me),Te.refreshMaterialUniforms(Hn,$,H,ye,v.state.transmissionRenderTarget[I.id]),Qc.upload(z,ll(je),Hn,D)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(Qc.upload(z,ll(je),Hn,D),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Ct.setValue(z,"center",Y.center),Ct.setValue(z,"modelViewMatrix",Y.modelViewMatrix),Ct.setValue(z,"normalMatrix",Y.normalMatrix),Ct.setValue(z,"modelMatrix",Y.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const gn=$.uniformsGroups;for(let on=0,gr=gn.length;on<gr;on++){const Qn=gn[on];k.update(Qn,kn),k.bind(Qn,kn)}}return kn}function vh(I,q){I.ambientLightColor.needsUpdate=q,I.lightProbe.needsUpdate=q,I.directionalLights.needsUpdate=q,I.directionalLightShadows.needsUpdate=q,I.pointLights.needsUpdate=q,I.pointLightShadows.needsUpdate=q,I.spotLights.needsUpdate=q,I.spotLightShadows.needsUpdate=q,I.rectAreaLights.needsUpdate=q,I.hemisphereLights.needsUpdate=q}function ul(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return P},this.getActiveMipmapLevel=function(){return N},this.getRenderTarget=function(){return F},this.setRenderTargetTextures=function(I,q,Q){const $=ue.get(I);$.__autoAllocateDepthBuffer=I.resolveDepthBuffer===!1,$.__autoAllocateDepthBuffer===!1&&($.__useRenderToTexture=!1),ue.get(I.texture).__webglTexture=q,ue.get(I.depthTexture).__webglTexture=$.__autoAllocateDepthBuffer?void 0:Q,$.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(I,q){const Q=ue.get(I);Q.__webglFramebuffer=q,Q.__useDefaultFramebuffer=q===void 0};const yh=z.createFramebuffer();this.setRenderTarget=function(I,q=0,Q=0){F=I,P=q,N=Q;let $=!0,Y=null,Me=!1,Le=!1;if(I){const We=ue.get(I);if(We.__useDefaultFramebuffer!==void 0)he.bindFramebuffer(z.FRAMEBUFFER,null),$=!1;else if(We.__webglFramebuffer===void 0)D.setupRenderTarget(I);else if(We.__hasExternalTextures)D.rebindTextures(I,ue.get(I.texture).__webglTexture,ue.get(I.depthTexture).__webglTexture);else if(I.depthBuffer){const Re=I.depthTexture;if(We.__boundDepthTexture!==Re){if(Re!==null&&ue.has(Re)&&(I.width!==Re.image.width||I.height!==Re.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");D.setupDepthRenderbuffer(I)}}const ot=I.texture;(ot.isData3DTexture||ot.isDataArrayTexture||ot.isCompressedArrayTexture)&&(Le=!0);const et=ue.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(et[q])?Y=et[q][Q]:Y=et[q],Me=!0):I.samples>0&&D.useMultisampledRTT(I)===!1?Y=ue.get(I).__webglMultisampledFramebuffer:Array.isArray(et)?Y=et[Q]:Y=et,U.copy(I.viewport),J.copy(I.scissor),Z=I.scissorTest}else U.copy(_e).multiplyScalar(H).floor(),J.copy(Ie).multiplyScalar(H).floor(),Z=qe;if(Q!==0&&(Y=yh),he.bindFramebuffer(z.FRAMEBUFFER,Y)&&$&&he.drawBuffers(I,Y),he.viewport(U),he.scissor(J),he.setScissorTest(Z),Me){const We=ue.get(I.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+q,We.__webglTexture,Q)}else if(Le){const We=ue.get(I.texture),ot=q;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,We.__webglTexture,Q,ot)}else if(I!==null&&Q!==0){const We=ue.get(I.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,We.__webglTexture,Q)}R=-1},this.readRenderTargetPixels=function(I,q,Q,$,Y,Me,Le){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ge=ue.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Le!==void 0&&(Ge=Ge[Le]),Ge){he.bindFramebuffer(z.FRAMEBUFFER,Ge);try{const We=I.texture,ot=We.format,et=We.type;if(!ve.textureFormatReadable(ot)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ve.textureTypeReadable(et)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=I.width-$&&Q>=0&&Q<=I.height-Y&&z.readPixels(q,Q,$,Y,fe.convert(ot),fe.convert(et),Me)}finally{const We=F!==null?ue.get(F).__webglFramebuffer:null;he.bindFramebuffer(z.FRAMEBUFFER,We)}}},this.readRenderTargetPixelsAsync=async function(I,q,Q,$,Y,Me,Le){if(!(I&&I.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ge=ue.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Le!==void 0&&(Ge=Ge[Le]),Ge)if(q>=0&&q<=I.width-$&&Q>=0&&Q<=I.height-Y){he.bindFramebuffer(z.FRAMEBUFFER,Ge);const We=I.texture,ot=We.format,et=We.type;if(!ve.textureFormatReadable(ot))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ve.textureTypeReadable(et))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Re=z.createBuffer();z.bindBuffer(z.PIXEL_PACK_BUFFER,Re),z.bufferData(z.PIXEL_PACK_BUFFER,Me.byteLength,z.STREAM_READ),z.readPixels(q,Q,$,Y,fe.convert(ot),fe.convert(et),0);const Je=F!==null?ue.get(F).__webglFramebuffer:null;he.bindFramebuffer(z.FRAMEBUFFER,Je);const Mt=z.fenceSync(z.SYNC_GPU_COMMANDS_COMPLETE,0);return z.flush(),await xS(z,Mt,4),z.bindBuffer(z.PIXEL_PACK_BUFFER,Re),z.getBufferSubData(z.PIXEL_PACK_BUFFER,0,Me),z.deleteBuffer(Re),z.deleteSync(Mt),Me}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(I,q=null,Q=0){const $=Math.pow(2,-Q),Y=Math.floor(I.image.width*$),Me=Math.floor(I.image.height*$),Le=q!==null?q.x:0,Ge=q!==null?q.y:0;D.setTexture2D(I,0),z.copyTexSubImage2D(z.TEXTURE_2D,Q,0,0,Le,Ge,Y,Me),he.unbindTexture()};const xh=z.createFramebuffer(),Sh=z.createFramebuffer();this.copyTextureToTexture=function(I,q,Q=null,$=null,Y=0,Me=null){Me===null&&(Y!==0?(jc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Me=Y,Y=0):Me=0);let Le,Ge,We,ot,et,Re,Je,Mt,Tt;const At=I.isCompressedTexture?I.mipmaps[Me]:I.image;if(Q!==null)Le=Q.max.x-Q.min.x,Ge=Q.max.y-Q.min.y,We=Q.isBox3?Q.max.z-Q.min.z:1,ot=Q.min.x,et=Q.min.y,Re=Q.isBox3?Q.min.z:0;else{const Vn=Math.pow(2,-Y);Le=Math.floor(At.width*Vn),Ge=Math.floor(At.height*Vn),I.isDataArrayTexture?We=At.depth:I.isData3DTexture?We=Math.floor(At.depth*Vn):We=1,ot=0,et=0,Re=0}$!==null?(Je=$.x,Mt=$.y,Tt=$.z):(Je=0,Mt=0,Tt=0);const yt=fe.convert(q.format),je=fe.convert(q.type);let Ut;q.isData3DTexture?(D.setTexture3D(q,0),Ut=z.TEXTURE_3D):q.isDataArrayTexture||q.isCompressedArrayTexture?(D.setTexture2DArray(q,0),Ut=z.TEXTURE_2D_ARRAY):(D.setTexture2D(q,0),Ut=z.TEXTURE_2D),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,q.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,q.unpackAlignment);const Rt=z.getParameter(z.UNPACK_ROW_LENGTH),kn=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Xi=z.getParameter(z.UNPACK_SKIP_PIXELS),hn=z.getParameter(z.UNPACK_SKIP_ROWS),mr=z.getParameter(z.UNPACK_SKIP_IMAGES);z.pixelStorei(z.UNPACK_ROW_LENGTH,At.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,At.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,ot),z.pixelStorei(z.UNPACK_SKIP_ROWS,et),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Re);const Ct=I.isDataArrayTexture||I.isData3DTexture,Hn=q.isDataArrayTexture||q.isData3DTexture;if(I.isDepthTexture){const Vn=ue.get(I),gn=ue.get(q),on=ue.get(Vn.__renderTarget),gr=ue.get(gn.__renderTarget);he.bindFramebuffer(z.READ_FRAMEBUFFER,on.__webglFramebuffer),he.bindFramebuffer(z.DRAW_FRAMEBUFFER,gr.__webglFramebuffer);for(let Qn=0;Qn<We;Qn++)Ct&&(z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,ue.get(I).__webglTexture,Y,Re+Qn),z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,ue.get(q).__webglTexture,Me,Tt+Qn)),z.blitFramebuffer(ot,et,Le,Ge,Je,Mt,Le,Ge,z.DEPTH_BUFFER_BIT,z.NEAREST);he.bindFramebuffer(z.READ_FRAMEBUFFER,null),he.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else if(Y!==0||I.isRenderTargetTexture||ue.has(I)){const Vn=ue.get(I),gn=ue.get(q);he.bindFramebuffer(z.READ_FRAMEBUFFER,xh),he.bindFramebuffer(z.DRAW_FRAMEBUFFER,Sh);for(let on=0;on<We;on++)Ct?z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,Vn.__webglTexture,Y,Re+on):z.framebufferTexture2D(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,Vn.__webglTexture,Y),Hn?z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,gn.__webglTexture,Me,Tt+on):z.framebufferTexture2D(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,gn.__webglTexture,Me),Y!==0?z.blitFramebuffer(ot,et,Le,Ge,Je,Mt,Le,Ge,z.COLOR_BUFFER_BIT,z.NEAREST):Hn?z.copyTexSubImage3D(Ut,Me,Je,Mt,Tt+on,ot,et,Le,Ge):z.copyTexSubImage2D(Ut,Me,Je,Mt,ot,et,Le,Ge);he.bindFramebuffer(z.READ_FRAMEBUFFER,null),he.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else Hn?I.isDataTexture||I.isData3DTexture?z.texSubImage3D(Ut,Me,Je,Mt,Tt,Le,Ge,We,yt,je,At.data):q.isCompressedArrayTexture?z.compressedTexSubImage3D(Ut,Me,Je,Mt,Tt,Le,Ge,We,yt,At.data):z.texSubImage3D(Ut,Me,Je,Mt,Tt,Le,Ge,We,yt,je,At):I.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,Me,Je,Mt,Le,Ge,yt,je,At.data):I.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,Me,Je,Mt,At.width,At.height,yt,At.data):z.texSubImage2D(z.TEXTURE_2D,Me,Je,Mt,Le,Ge,yt,je,At);z.pixelStorei(z.UNPACK_ROW_LENGTH,Rt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,kn),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Xi),z.pixelStorei(z.UNPACK_SKIP_ROWS,hn),z.pixelStorei(z.UNPACK_SKIP_IMAGES,mr),Me===0&&q.generateMipmaps&&z.generateMipmap(Ut),he.unbindTexture()},this.copyTextureToTexture3D=function(I,q,Q=null,$=null,Y=0){return jc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(I,q,Q,$,Y)},this.initRenderTarget=function(I){ue.get(I).__webglFramebuffer===void 0&&D.setupRenderTarget(I)},this.initTexture=function(I){I.isCubeTexture?D.setTextureCube(I,0):I.isData3DTexture?D.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?D.setTexture2DArray(I,0):D.setTexture2D(I,0),he.unbindTexture()},this.resetState=function(){P=0,N=0,F=null,he.reset(),Ne.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ti}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=It._getDrawingBufferColorSpace(e),t.unpackColorSpace=It._getUnpackColorSpace()}}const Db=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Vd,AddEquation:Dr,AddOperation:R_,AdditiveAnimationBlendMode:$d,AdditiveBlending:Ed,AgXToneMapping:N_,AlphaFormat:qd,AlwaysCompare:J_,AlwaysDepth:iu,AlwaysStencilFunc:bd,AmbientLight:Gv,AnimationAction:Qv,AnimationClip:Ga,AnimationLoader:qM,AnimationMixer:ME,AnimationObjectGroup:xE,AnimationUtils:GM,ArcCurve:dv,ArrayCamera:Jv,ArrowHelper:WE,AttachedBindMode:Ad,Audio:jv,AudioAnalyser:uE,AudioContext:Ep,AudioListener:aE,AudioLoader:rE,AxesHelper:XE,BackSide:Fn,BasicDepthPacking:k_,BasicShadowMap:c_,BatchedMesh:cv,Bone:op,BooleanKeyframeTrack:Ps,Box2:PE,Box3:Bn,Box3Helper:VE,BoxGeometry:Rs,BoxHelper:HE,BufferAttribute:kt,BufferGeometry:_t,BufferGeometryLoader:Zv,ByteType:Wd,Cache:ar,Camera:Ja,CameraHelper:kE,CanvasTexture:fM,CapsuleGeometry:ih,CatmullRomCurve3:pv,CineonToneMapping:L_,CircleGeometry:rh,ClampToEdgeWrapping:gi,Clock:wp,Color:He,ColorKeyframeTrack:xp,ColorManagement:It,CompressedArrayTexture:uM,CompressedCubeTexture:hM,CompressedTexture:th,CompressedTextureLoader:ZM,ConeGeometry:sh,ConstantAlphaFactor:A_,ConstantColorFactor:w_,Controls:qE,CubeCamera:nv,CubeReflectionMapping:hr,CubeRefractionMapping:Or,CubeTexture:ja,CubeTextureLoader:JM,CubeUVReflectionMapping:Io,CubicBezierCurve:up,CubicBezierCurve3:mv,CubicInterpolant:Uv,CullFaceBack:Md,CullFaceFront:l_,CullFaceFrontBack:Sx,CullFaceNone:a_,Curve:Ci,CurvePath:_v,CustomBlending:u_,CustomToneMapping:D_,CylinderGeometry:Do,Cylindrical:RE,Data3DTexture:ju,DataArrayTexture:Za,DataTexture:ki,DataTextureLoader:jM,DataUtils:FS,DecrementStencilOp:Ux,DecrementWrapStencilOp:Fx,DefaultLoadingManager:Bv,DepthFormat:wo,DepthStencilFormat:To,DepthTexture:lp,DetachedBindMode:O_,DirectionalLight:Vv,DirectionalLightHelper:zE,DiscreteInterpolant:Ov,DodecahedronGeometry:oh,DoubleSide:Fi,DstAlphaFactor:y_,DstColorFactor:S_,DynamicCopyUsage:Qx,DynamicDrawUsage:Yx,DynamicReadUsage:Jx,EdgesGeometry:vv,EllipseCurve:nh,EqualCompare:X_,EqualDepth:su,EqualStencilFunc:Hx,EquirectangularReflectionMapping:ba,EquirectangularRefractionMapping:Ca,Euler:oi,EventDispatcher:Gi,ExtrudeGeometry:ah,FileLoader:dr,Float16BufferAttribute:WS,Float32BufferAttribute:Ze,FloatType:jn,Fog:Qu,FogExp2:Ku,FramebufferTexture:cM,FrontSide:ur,Frustum:Ka,GLBufferAttribute:CE,GLSL1:eS,GLSL3:Cd,GreaterCompare:Y_,GreaterDepth:au,GreaterEqualCompare:Z_,GreaterEqualDepth:ou,GreaterEqualStencilFunc:Xx,GreaterStencilFunc:Gx,GridHelper:FE,Group:vo,HalfFloatType:Lo,HemisphereLight:zv,HemisphereLightHelper:OE,IcosahedronGeometry:lh,ImageBitmapLoader:iE,ImageLoader:Wa,ImageUtils:Q_,IncrementStencilOp:Nx,IncrementWrapStencilOp:Ox,InstancedBufferAttribute:Co,InstancedBufferGeometry:qv,InstancedInterleavedBuffer:bE,InstancedMesh:lv,Int16BufferAttribute:VS,Int32BufferAttribute:GS,Int8BufferAttribute:zS,IntType:Vu,InterleavedBuffer:$u,InterleavedBufferAttribute:As,Interpolant:tl,InterpolateDiscrete:Ia,InterpolateLinear:Uu,InterpolateSmooth:Jc,InvertStencilOp:Bx,KeepStencilOp:ds,KeyframeTrack:_i,LOD:ov,LatheGeometry:Qa,Layers:Ms,LessCompare:W_,LessDepth:ru,LessEqualCompare:ep,LessEqualDepth:ws,LessEqualStencilFunc:Vx,LessStencilFunc:kx,Light:Hr,LightProbe:Yv,Line:Fr,Line3:IE,LineBasicMaterial:zn,LineCurve:hp,LineCurve3:gv,LineDashedMaterial:Lv,LineLoop:uv,LineSegments:Wi,LinearFilter:ln,LinearInterpolant:yp,LinearMipMapLinearFilter:Tx,LinearMipMapNearestFilter:wx,LinearMipmapLinearFilter:Bi,LinearMipmapNearestFilter:va,LinearSRGBColorSpace:Ts,LinearToneMapping:P_,LinearTransfer:Da,Loader:Kn,LoaderUtils:Dd,LoadingManager:Sp,LoopOnce:F_,LoopPingPong:z_,LoopRepeat:B_,LuminanceAlphaFormat:jd,LuminanceFormat:Jd,MOUSE:hs,Material:Pn,MaterialLoader:mh,MathUtils:vS,Matrix2:Rp,Matrix3:pt,Matrix4:ct,MaxEquation:p_,Mesh:sn,MeshBasicMaterial:zr,MeshDepthMaterial:gp,MeshDistanceMaterial:_p,MeshLambertMaterial:Pv,MeshMatcapMaterial:Iv,MeshNormalMaterial:Rv,MeshPhongMaterial:bv,MeshPhysicalMaterial:Av,MeshStandardMaterial:mp,MeshToonMaterial:Cv,MinEquation:d_,MirroredRepeatWrapping:Pa,MixOperation:C_,MultiplyBlending:Td,MultiplyOperation:Ya,NearestFilter:vn,NearestMipMapLinearFilter:Ex,NearestMipMapNearestFilter:Mx,NearestMipmapLinearFilter:go,NearestMipmapNearestFilter:Gd,NeutralToneMapping:U_,NeverCompare:G_,NeverDepth:nu,NeverStencilFunc:zx,NoBlending:lr,NoColorSpace:sr,NoToneMapping:zi,NormalAnimationBlendMode:Zu,NormalBlending:xs,NotEqualCompare:q_,NotEqualDepth:lu,NotEqualStencilFunc:Wx,NumberKeyframeTrack:Ha,Object3D:Nt,ObjectLoader:tE,ObjectSpaceNormalMap:V_,OctahedronGeometry:$a,OneFactor:g_,OneMinusConstantAlphaFactor:b_,OneMinusConstantColorFactor:T_,OneMinusDstAlphaFactor:x_,OneMinusDstColorFactor:M_,OneMinusSrcAlphaFactor:tu,OneMinusSrcColorFactor:v_,OrthographicCamera:Ur,PCFShadowMap:ku,PCFSoftShadowMap:_a,PMREMGenerator:Fd,Path:Fa,PerspectiveCamera:$t,Plane:rr,PlaneGeometry:No,PlaneHelper:GE,PointLight:Hv,PointLightHelper:NE,Points:hv,PointsMaterial:ap,PolarGridHelper:BE,PolyhedronGeometry:kr,PositionalAudio:cE,PropertyBinding:Lt,PropertyMixer:Kv,QuadraticBezierCurve:fp,QuadraticBezierCurve3:dp,Quaternion:Cn,QuaternionKeyframeTrack:nl,QuaternionLinearInterpolant:Fv,RED_GREEN_RGTC2_Format:Du,RED_RGTC1_Format:Qd,REVISION:zu,RGBADepthPacking:H_,RGBAFormat:bn,RGBAIntegerFormat:qu,RGBA_ASTC_10x10_Format:bu,RGBA_ASTC_10x5_Format:wu,RGBA_ASTC_10x6_Format:Tu,RGBA_ASTC_10x8_Format:Au,RGBA_ASTC_12x10_Format:Cu,RGBA_ASTC_12x12_Format:Ru,RGBA_ASTC_4x4_Format:gu,RGBA_ASTC_5x4_Format:_u,RGBA_ASTC_5x5_Format:vu,RGBA_ASTC_6x5_Format:yu,RGBA_ASTC_6x6_Format:xu,RGBA_ASTC_8x5_Format:Su,RGBA_ASTC_8x6_Format:Mu,RGBA_ASTC_8x8_Format:Eu,RGBA_BPTC_Format:Ea,RGBA_ETC2_EAC_Format:mu,RGBA_PVRTC_2BPPV1_Format:fu,RGBA_PVRTC_4BPPV1_Format:hu,RGBA_S3TC_DXT1_Format:xa,RGBA_S3TC_DXT3_Format:Sa,RGBA_S3TC_DXT5_Format:Ma,RGBDepthPacking:Px,RGBFormat:Zd,RGBIntegerFormat:Ax,RGB_BPTC_SIGNED_Format:Pu,RGB_BPTC_UNSIGNED_Format:Iu,RGB_ETC1_Format:du,RGB_ETC2_Format:pu,RGB_PVRTC_2BPPV1_Format:uu,RGB_PVRTC_4BPPV1_Format:cu,RGB_S3TC_DXT1_Format:ya,RGDepthPacking:Ix,RGFormat:Kd,RGIntegerFormat:Yu,RawShaderMaterial:Tv,Ray:Cs,Raycaster:Cp,RectAreaLight:Wv,RedFormat:Xu,RedIntegerFormat:qa,ReinhardToneMapping:I_,RenderTarget:Ju,RenderTarget3D:EE,RenderTargetArray:wE,RepeatWrapping:Ra,ReplaceStencilOp:Dx,ReverseSubtractEquation:f_,RingGeometry:ch,SIGNED_RED_GREEN_RGTC2_Format:Nu,SIGNED_RED_RGTC1_Format:Lu,SRGBColorSpace:Zn,SRGBTransfer:zt,Scene:rp,ShaderChunk:gt,ShaderLib:wi,ShaderMaterial:bi,ShadowMaterial:wv,Shape:Es,ShapeGeometry:uh,ShapePath:YE,ShapeUtils:Hi,ShortType:Xd,Skeleton:eh,SkeletonHelper:DE,SkinnedMesh:av,Source:Nr,Sphere:Rn,SphereGeometry:el,Spherical:Ud,SphericalHarmonics3:Xv,SplineCurve:pp,SpotLight:kv,SpotLightHelper:LE,Sprite:sv,SpriteMaterial:sp,SrcAlphaFactor:eu,SrcAlphaSaturateFactor:E_,SrcColorFactor:__,StaticCopyUsage:Kx,StaticDrawUsage:Na,StaticReadUsage:Zx,StereoCamera:sE,StreamCopyUsage:$x,StreamDrawUsage:qx,StreamReadUsage:jx,StringKeyframeTrack:Is,SubtractEquation:h_,SubtractiveBlending:wd,TOUCH:fs,TangentSpaceNormalMap:Br,TetrahedronGeometry:hh,Texture:jt,TextureLoader:KM,TextureUtils:QE,TimestampQuery:tS,TorusGeometry:fh,TorusKnotGeometry:dh,Triangle:Jn,TriangleFanDrawMode:Rx,TriangleStripDrawMode:Cx,TrianglesDrawMode:bx,TubeGeometry:ph,UVMapping:Hu,Uint16BufferAttribute:np,Uint32BufferAttribute:ip,Uint8BufferAttribute:kS,Uint8ClampedBufferAttribute:HS,Uniform:bp,UniformsGroup:AE,UniformsLib:De,UniformsUtils:tv,UnsignedByteType:Ai,UnsignedInt248Type:Eo,UnsignedInt5999Type:Yd,UnsignedIntType:fr,UnsignedShort4444Type:Gu,UnsignedShort5551Type:Wu,UnsignedShortType:Mo,VSMShadowMap:Ei,Vector2:pe,Vector3:O,Vector4:Dt,VectorKeyframeTrack:Va,VideoFrameTexture:lM,VideoTexture:fv,WebGL3DRenderTarget:bS,WebGLArrayRenderTarget:AS,WebGLCoordinateSystem:Ti,WebGLCubeRenderTarget:iv,WebGLRenderTarget:Vi,WebGLRenderer:oy,WebGLUtils:sy,WebGPUCoordinateSystem:Ua,WebXRController:Kc,WireframeGeometry:Ev,WrapAroundEnding:La,ZeroCurvatureEnding:gs,ZeroFactor:m_,ZeroSlopeEnding:_s,ZeroStencilOp:Lx,createCanvasElement:K_},Symbol.toStringTag,{value:"Module"}));var ay={exports:{}},Ls={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Ls.ConcurrentRoot=1;Ls.ContinuousEventPriority=4;Ls.DefaultEventPriority=16;Ls.DiscreteEventPriority=1;Ls.IdleEventPriority=536870912;Ls.LegacyRoot=0;ay.exports=Ls;var xo=ay.exports;function Nb(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const y=f(e);if(!p(m,y)){const M=m;h(m=y,M)}}return t.add(g),()=>t.delete(g)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const Ub=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),G0=Ub?Xe.useEffect:Xe.useLayoutEffect;function ly(r){const e=typeof r=="function"?Nb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Xe.useReducer(x=>x+1,0),l=e.getState(),c=Xe.useRef(l),u=Xe.useRef(n),h=Xe.useRef(i),f=Xe.useRef(!1),p=Xe.useRef();p.current===void 0&&(p.current=n(l));let m,g=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(m=n(l),g=!i(p.current,m)),G0(()=>{g&&(p.current=m),c.current=l,u.current=n,h.current=i,f.current=!1});const y=Xe.useRef(l);G0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{f.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const M=g?m:p.current;return Xe.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}const Ob=r=>typeof r=="object"&&typeof r.then=="function",ys=[];function cy(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function uy(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of ys)if(cy(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=ys.indexOf(i);s!==-1&&ys.splice(s,1)},promise:(Ob(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(ys.push(i),!t)throw i.promise}const Fb=(r,e,t)=>uy(r,e,!1,t),Bb=(r,e,t)=>void uy(r,e,!0,t),zb=r=>{if(r===void 0||r.length===0)ys.splice(0,ys.length);else{const e=ys.find(t=>cy(r,t.keys,t.equal));e&&e.remove()}};var hy={exports:{}},fy={exports:{}},dy={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(H,se){var re=H.length;H.push(se);e:for(;0<re;){var _e=re-1>>>1,Ie=H[_e];if(0<i(Ie,se))H[_e]=se,H[re]=Ie,re=_e;else break e}}function t(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var se=H[0],re=H.pop();if(re!==se){H[0]=re;e:for(var _e=0,Ie=H.length,qe=Ie>>>1;_e<qe;){var oe=2*(_e+1)-1,xe=H[oe],Ce=oe+1,Ae=H[Ce];if(0>i(xe,re))Ce<Ie&&0>i(Ae,xe)?(H[_e]=Ae,H[Ce]=re,_e=Ce):(H[_e]=xe,H[oe]=re,_e=oe);else if(Ce<Ie&&0>i(Ae,re))H[_e]=Ae,H[Ce]=re,_e=Ce;else break e}}return se}function i(H,se){var re=H.sortIndex-se.sortIndex;return re!==0?re:H.id-se.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(H){for(var se=t(h);se!==null;){if(se.callback===null)n(h);else if(se.startTime<=H)n(h),se.sortIndex=se.expirationTime,e(u,se);else break;se=t(h)}}function T(H){if(M=!1,w(H),!y)if(t(u)!==null)y=!0,K(L);else{var se=t(h);se!==null&&ye(T,se.startTime-H)}}function L(H,se){y=!1,M&&(M=!1,v(F),F=-1),g=!0;var re=m;try{for(w(se),p=t(u);p!==null&&(!(p.expirationTime>se)||H&&!U());){var _e=p.callback;if(typeof _e=="function"){p.callback=null,m=p.priorityLevel;var Ie=_e(p.expirationTime<=se);se=r.unstable_now(),typeof Ie=="function"?p.callback=Ie:p===t(u)&&n(u),w(se)}else n(u);p=t(u)}if(p!==null)var qe=!0;else{var oe=t(h);oe!==null&&ye(T,oe.startTime-se),qe=!1}return qe}finally{p=null,m=re,g=!1}}var P=!1,N=null,F=-1,R=5,b=-1;function U(){return!(r.unstable_now()-b<R)}function J(){if(N!==null){var H=r.unstable_now();b=H;var se=!0;try{se=N(!0,H)}finally{se?Z():(P=!1,N=null)}}else P=!1}var Z;if(typeof E=="function")Z=function(){E(J)};else if(typeof MessageChannel<"u"){var ee=new MessageChannel,ce=ee.port2;ee.port1.onmessage=J,Z=function(){ce.postMessage(null)}}else Z=function(){x(J,0)};function K(H){N=H,P||(P=!0,Z())}function ye(H,se){F=x(function(){H(r.unstable_now())},se)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(H){H.callback=null},r.unstable_continueExecution=function(){y||g||(y=!0,K(L))},r.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<H?Math.floor(1e3/H):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(H){switch(m){case 1:case 2:case 3:var se=3;break;default:se=m}var re=m;m=se;try{return H()}finally{m=re}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(H,se){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var re=m;m=H;try{return se()}finally{m=re}},r.unstable_scheduleCallback=function(H,se,re){var _e=r.unstable_now();switch(typeof re=="object"&&re!==null?(re=re.delay,re=typeof re=="number"&&0<re?_e+re:_e):re=_e,H){case 1:var Ie=-1;break;case 2:Ie=250;break;case 5:Ie=1073741823;break;case 4:Ie=1e4;break;default:Ie=5e3}return Ie=re+Ie,H={id:f++,callback:se,priorityLevel:H,startTime:re,expirationTime:Ie,sortIndex:-1},re>_e?(H.sortIndex=re,e(h,H),t(u)===null&&H===t(h)&&(M?(v(F),F=-1):M=!0,ye(T,re-_e))):(H.sortIndex=Ie,e(u,H),y||g||(y=!0,K(L))),H},r.unstable_shouldYield=U,r.unstable_wrapCallback=function(H){var se=m;return function(){var re=m;m=se;try{return H.apply(this,arguments)}finally{m=re}}}})(dy);fy.exports=dy;var zd=fy.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var kb=function(e){var t={},n=Xe,i=zd,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),L=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=L&&o[L]||o["@@iterator"],typeof o=="function"?o:null)}function N(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case M:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return a=o.displayName||null,a!==null?a:N(o.type)||"Memo";case w:a=o._payload,o=o._init;try{return N(o(a))}catch{}}return null}function F(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function R(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function b(o){if(R(o)!==o)throw Error(l(188))}function U(o){var a=o.alternate;if(!a){if(a=R(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,_=a;;){var S=d.return;if(S===null)break;var A=S.alternate;if(A===null){if(_=S.return,_!==null){d=_;continue}break}if(S.child===A.child){for(A=S.child;A;){if(A===d)return b(S),o;if(A===_)return b(S),a;A=A.sibling}throw Error(l(188))}if(d.return!==_.return)d=S,_=A;else{for(var B=!1,G=S.child;G;){if(G===d){B=!0,d=S,_=A;break}if(G===_){B=!0,_=S,d=A;break}G=G.sibling}if(!B){for(G=A.child;G;){if(G===d){B=!0,d=A,_=S;break}if(G===_){B=!0,_=A,d=S;break}G=G.sibling}if(!B)throw Error(l(189))}}if(d.alternate!==_)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function J(o){return o=U(o),o!==null?Z(o):null}function Z(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=Z(o);if(a!==null)return a;o=o.sibling}return null}function ee(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=ee(o);if(a!==null)return a}o=o.sibling}return null}var ce=Array.isArray,K=e.getPublicInstance,ye=e.getRootHostContext,H=e.getChildHostContext,se=e.prepareForCommit,re=e.resetAfterCommit,_e=e.createInstance,Ie=e.appendInitialChild,qe=e.finalizeInitialChildren,oe=e.prepareUpdate,xe=e.shouldSetTextContent,Ce=e.createTextInstance,Ae=e.scheduleTimeout,tt=e.cancelTimeout,St=e.noTimeout,$e=e.isPrimaryRenderer,ut=e.supportsMutation,bt=e.supportsPersistence,it=e.supportsHydration,z=e.getInstanceFromNode,Vt=e.preparePortalMount,ge=e.getCurrentEventPriority,ve=e.detachDeletedInstance,he=e.supportsMicrotasks,be=e.scheduleMicrotask,ue=e.supportsTestSelectors,D=e.findFiberRoot,C=e.getBoundingRect,W=e.getTextContent,te=e.isHiddenSubtree,de=e.matchAccessibilityRole,ae=e.setFocusIfFocusable,Ve=e.setupIntersectionObserver,Te=e.appendChild,ze=e.appendChildToContainer,vt=e.commitTextUpdate,Se=e.commitMount,ke=e.commitUpdate,rt=e.insertBefore,st=e.insertInContainerBefore,Oe=e.removeChild,V=e.removeChildFromContainer,fe=e.resetTextContent,Ne=e.hideInstance,k=e.hideTextInstance,Ee=e.unhideInstance,ne=e.unhideTextInstance,me=e.clearContainer,Fe=e.cloneInstance,Pe=e.createContainerChildSet,nt=e.appendChildToContainerChildSet,Pt=e.finalizeContainerChildren,Wt=e.replaceContainerChildren,wt=e.cloneHiddenInstance,en=e.cloneHiddenTextInstance,yn=e.canHydrateInstance,rl=e.canHydrateTextInstance,sl=e.canHydrateSuspenseInstance,Ri=e.isSuspenseInstancePending,Vr=e.isSuspenseInstanceFallback,ol=e.registerSuspenseInstanceRetry,pr=e.getNextHydratableSibling,Ds=e.getFirstHydratableChild,al=e.getFirstHydratableChildWithinContainer,Ns=e.getFirstHydratableChildWithinSuspenseInstance,ll=e.hydrateInstance,cl=e.hydrateTextInstance,_h=e.hydrateSuspenseInstance,vh=e.getNextHydratableInstanceAfterSuspenseInstance,ul=e.commitHydratedContainer,yh=e.commitHydratedSuspenseInstance,xh=e.clearSuspenseBoundary,Sh=e.clearSuspenseBoundaryFromContainer,I=e.shouldDeleteUnhydratedTailInstances,q=e.didNotMatchHydratedContainerTextInstance,Q=e.didNotMatchHydratedTextInstance,$;function Y(o){if($===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);$=a&&a[1]||""}return`
`+$+o}var Me=!1;function Le(o,a){if(!o||Me)return"";Me=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(we){var _=we}Reflect.construct(o,[],a)}else{try{a.call()}catch(we){_=we}o.call(a.prototype)}else{try{throw Error()}catch(we){_=we}o()}}catch(we){if(we&&_&&typeof we.stack=="string"){for(var S=we.stack.split(`
`),A=_.stack.split(`
`),B=S.length-1,G=A.length-1;1<=B&&0<=G&&S[B]!==A[G];)G--;for(;1<=B&&0<=G;B--,G--)if(S[B]!==A[G]){if(B!==1||G!==1)do if(B--,G--,0>G||S[B]!==A[G]){var le=`
`+S[B].replace(" at new "," at ");return o.displayName&&le.includes("<anonymous>")&&(le=le.replace("<anonymous>",o.displayName)),le}while(1<=B&&0<=G);break}}}finally{Me=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?Y(o):""}var Ge=Object.prototype.hasOwnProperty,We=[],ot=-1;function et(o){return{current:o}}function Re(o){0>ot||(o.current=We[ot],We[ot]=null,ot--)}function Je(o,a){ot++,We[ot]=o.current,o.current=a}var Mt={},Tt=et(Mt),At=et(!1),yt=Mt;function je(o,a){var d=o.type.contextTypes;if(!d)return Mt;var _=o.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===a)return _.__reactInternalMemoizedMaskedChildContext;var S={},A;for(A in d)S[A]=a[A];return _&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function Ut(o){return o=o.childContextTypes,o!=null}function Rt(){Re(At),Re(Tt)}function kn(o,a,d){if(Tt.current!==Mt)throw Error(l(168));Je(Tt,a),Je(At,d)}function Xi(o,a,d){var _=o.stateNode;if(a=a.childContextTypes,typeof _.getChildContext!="function")return d;_=_.getChildContext();for(var S in _)if(!(S in a))throw Error(l(108,F(o)||"Unknown",S));return s({},d,_)}function hn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||Mt,yt=Tt.current,Je(Tt,o),Je(At,At.current),!0}function mr(o,a,d){var _=o.stateNode;if(!_)throw Error(l(169));d?(o=Xi(o,a,yt),_.__reactInternalMemoizedMergedChildContext=o,Re(At),Re(Tt),Je(Tt,o)):Re(At),Je(At,d)}var Ct=Math.clz32?Math.clz32:gn,Hn=Math.log,Vn=Math.LN2;function gn(o){return o>>>=0,o===0?32:31-(Hn(o)/Vn|0)|0}var on=64,gr=4194304;function Qn(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function hl(o,a){var d=o.pendingLanes;if(d===0)return 0;var _=0,S=o.suspendedLanes,A=o.pingedLanes,B=d&268435455;if(B!==0){var G=B&~S;G!==0?_=Qn(G):(A&=B,A!==0&&(_=Qn(A)))}else B=d&~S,B!==0?_=Qn(B):A!==0&&(_=Qn(A));if(_===0)return 0;if(a!==0&&a!==_&&!(a&S)&&(S=_&-_,A=a&-a,S>=A||S===16&&(A&4194240)!==0))return a;if(_&4&&(_|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=_;0<a;)d=31-Ct(a),S=1<<d,_|=o[d],a&=~S;return _}function Iy(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ly(o,a){for(var d=o.suspendedLanes,_=o.pingedLanes,S=o.expirationTimes,A=o.pendingLanes;0<A;){var B=31-Ct(A),G=1<<B,le=S[B];le===-1?(!(G&d)||G&_)&&(S[B]=Iy(G,a)):le<=a&&(o.expiredLanes|=G),A&=~G}}function Mh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Eh(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function Oo(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-Ct(a),o[a]=d}function Dy(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var _=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-Ct(d),A=1<<S;a[S]=0,_[S]=-1,o[S]=-1,d&=~A}}function wh(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var _=31-Ct(d),S=1<<_;S&a|o[_]&a&&(o[_]|=a),d&=~S}}var Ot=0;function Up(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Th=i.unstable_scheduleCallback,Op=i.unstable_cancelCallback,Ny=i.unstable_shouldYield,Uy=i.unstable_requestPaint,fn=i.unstable_now,Ah=i.unstable_ImmediatePriority,Oy=i.unstable_UserBlockingPriority,bh=i.unstable_NormalPriority,Fy=i.unstable_IdlePriority,fl=null,Pi=null;function By(o){if(Pi&&typeof Pi.onCommitFiberRoot=="function")try{Pi.onCommitFiberRoot(fl,o,void 0,(o.current.flags&128)===128)}catch{}}function zy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ii=typeof Object.is=="function"?Object.is:zy,Yi=null,dl=!1,Ch=!1;function Fp(o){Yi===null?Yi=[o]:Yi.push(o)}function ky(o){dl=!0,Fp(o)}function Li(){if(!Ch&&Yi!==null){Ch=!0;var o=0,a=Ot;try{var d=Yi;for(Ot=1;o<d.length;o++){var _=d[o];do _=_(!0);while(_!==null)}Yi=null,dl=!1}catch(S){throw Yi!==null&&(Yi=Yi.slice(o+1)),Th(Ah,Li),S}finally{Ot=a,Ch=!1}}return null}var Hy=c.ReactCurrentBatchConfig;function pl(o,a){if(Ii(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),_=Object.keys(a);if(d.length!==_.length)return!1;for(_=0;_<d.length;_++){var S=d[_];if(!Ge.call(a,S)||!Ii(o[S],a[S]))return!1}return!0}function Vy(o){switch(o.tag){case 5:return Y(o.type);case 16:return Y("Lazy");case 13:return Y("Suspense");case 19:return Y("SuspenseList");case 0:case 2:case 15:return o=Le(o.type,!1),o;case 11:return o=Le(o.type.render,!1),o;case 1:return o=Le(o.type,!0),o;default:return""}}function vi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var ml=et(null),gl=null,Us=null,Rh=null;function Ph(){Rh=Us=gl=null}function Bp(o,a,d){$e?(Je(ml,a._currentValue),a._currentValue=d):(Je(ml,a._currentValue2),a._currentValue2=d)}function Ih(o){var a=ml.current;Re(ml),$e?o._currentValue=a:o._currentValue2=a}function Lh(o,a,d){for(;o!==null;){var _=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,_!==null&&(_.childLanes|=a)):_!==null&&(_.childLanes&a)!==a&&(_.childLanes|=a),o===d)break;o=o.return}}function Os(o,a){gl=o,Rh=Us=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(ti=!0),o.firstContext=null)}function ai(o){var a=$e?o._currentValue:o._currentValue2;if(Rh!==o)if(o={context:o,memoizedValue:a,next:null},Us===null){if(gl===null)throw Error(l(308));Us=o,gl.dependencies={lanes:0,firstContext:o}}else Us=Us.next=o;return a}var Di=null,_r=!1;function Dh(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function qi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function vr(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,tn!==null&&o.mode&1&&!(Et&2)?(o=d.interleaved,o===null?(a.next=a,Di===null?Di=[d]:Di.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function _l(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,wh(o,d)}}function kp(o,a){var d=o.updateQueue,_=o.alternate;if(_!==null&&(_=_.updateQueue,d===_)){var S=null,A=null;if(d=d.firstBaseUpdate,d!==null){do{var B={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};A===null?S=A=B:A=A.next=B,d=d.next}while(d!==null);A===null?S=A=a:A=A.next=a}else S=A=a;d={baseState:_.baseState,firstBaseUpdate:S,lastBaseUpdate:A,shared:_.shared,effects:_.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function vl(o,a,d,_){var S=o.updateQueue;_r=!1;var A=S.firstBaseUpdate,B=S.lastBaseUpdate,G=S.shared.pending;if(G!==null){S.shared.pending=null;var le=G,we=le.next;le.next=null,B===null?A=we:B.next=we,B=le;var Ye=o.alternate;Ye!==null&&(Ye=Ye.updateQueue,G=Ye.lastBaseUpdate,G!==B&&(G===null?Ye.firstBaseUpdate=we:G.next=we,Ye.lastBaseUpdate=le))}if(A!==null){var ft=S.baseState;B=0,Ye=we=le=null,G=A;do{var at=G.lane,Ht=G.eventTime;if((_&at)===at){Ye!==null&&(Ye=Ye.next={eventTime:Ht,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var Qe=o,En=G;switch(at=a,Ht=d,En.tag){case 1:if(Qe=En.payload,typeof Qe=="function"){ft=Qe.call(Ht,ft,at);break e}ft=Qe;break e;case 3:Qe.flags=Qe.flags&-65537|128;case 0:if(Qe=En.payload,at=typeof Qe=="function"?Qe.call(Ht,ft,at):Qe,at==null)break e;ft=s({},ft,at);break e;case 2:_r=!0}}G.callback!==null&&G.lane!==0&&(o.flags|=64,at=S.effects,at===null?S.effects=[G]:at.push(G))}else Ht={eventTime:Ht,lane:at,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ye===null?(we=Ye=Ht,le=ft):Ye=Ye.next=Ht,B|=at;if(G=G.next,G===null){if(G=S.shared.pending,G===null)break;at=G,G=at.next,at.next=null,S.lastBaseUpdate=at,S.shared.pending=null}}while(1);if(Ye===null&&(le=ft),S.baseState=le,S.firstBaseUpdate=we,S.lastBaseUpdate=Ye,a=S.shared.interleaved,a!==null){S=a;do B|=S.lane,S=S.next;while(S!==a)}else A===null&&(S.shared.lanes=0);Xs|=B,o.lanes=B,o.memoizedState=ft}}function Hp(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var _=o[a],S=_.callback;if(S!==null){if(_.callback=null,_=d,typeof S!="function")throw Error(l(191,S));S.call(_)}}}var Vp=new n.Component().refs;function Nh(o,a,d,_){a=o.memoizedState,d=d(_,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var yl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var _=Ln(),S=Sr(o),A=qi(_,S);A.payload=a,d!=null&&(A.callback=d),vr(o,A),a=fi(o,S,_),a!==null&&_l(a,o,S)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var _=Ln(),S=Sr(o),A=qi(_,S);A.tag=1,A.payload=a,d!=null&&(A.callback=d),vr(o,A),a=fi(o,S,_),a!==null&&_l(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=Ln(),_=Sr(o),S=qi(d,_);S.tag=2,a!=null&&(S.callback=a),vr(o,S),a=fi(o,_,d),a!==null&&_l(a,o,_)}};function Gp(o,a,d,_,S,A,B){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(_,A,B):a.prototype&&a.prototype.isPureReactComponent?!pl(d,_)||!pl(S,A):!0}function Wp(o,a,d){var _=!1,S=Mt,A=a.contextType;return typeof A=="object"&&A!==null?A=ai(A):(S=Ut(a)?yt:Tt.current,_=a.contextTypes,A=(_=_!=null)?je(o,S):Mt),a=new a(d,A),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=yl,o.stateNode=a,a._reactInternals=o,_&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=A),a}function Xp(o,a,d,_){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,_),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,_),a.state!==o&&yl.enqueueReplaceState(a,a.state,null)}function Uh(o,a,d,_){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=Vp,Dh(o);var A=a.contextType;typeof A=="object"&&A!==null?S.context=ai(A):(A=Ut(a)?yt:Tt.current,S.context=je(o,A)),S.state=o.memoizedState,A=a.getDerivedStateFromProps,typeof A=="function"&&(Nh(o,a,A,d),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&yl.enqueueReplaceState(S,S.state,null),vl(o,d,S,_),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Fs=[],Bs=0,xl=null,Sl=0,li=[],ci=0,Gr=null,Zi=1,Ji="";function Wr(o,a){Fs[Bs++]=Sl,Fs[Bs++]=xl,xl=o,Sl=a}function Yp(o,a,d){li[ci++]=Zi,li[ci++]=Ji,li[ci++]=Gr,Gr=o;var _=Zi;o=Ji;var S=32-Ct(_)-1;_&=~(1<<S),d+=1;var A=32-Ct(a)+S;if(30<A){var B=S-S%5;A=(_&(1<<B)-1).toString(32),_>>=B,S-=B,Zi=1<<32-Ct(a)+S|d<<S|_,Ji=A+o}else Zi=1<<A|d<<S|_,Ji=o}function Oh(o){o.return!==null&&(Wr(o,1),Yp(o,1,0))}function Fh(o){for(;o===xl;)xl=Fs[--Bs],Fs[Bs]=null,Sl=Fs[--Bs],Fs[Bs]=null;for(;o===Gr;)Gr=li[--ci],li[ci]=null,Ji=li[--ci],li[ci]=null,Zi=li[--ci],li[ci]=null}var $n=null,ei=null,Xt=!1,Fo=!1,yi=null;function qp(o,a){var d=di(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function Zp(o,a){switch(o.tag){case 5:return a=yn(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,$n=o,ei=Ds(a),!0):!1;case 6:return a=rl(a,o.pendingProps),a!==null?(o.stateNode=a,$n=o,ei=null,!0):!1;case 13:if(a=sl(a),a!==null){var d=Gr!==null?{id:Zi,overflow:Ji}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=di(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,$n=o,ei=null,!0}return!1;default:return!1}}function Bh(o){return(o.mode&1)!==0&&(o.flags&128)===0}function zh(o){if(Xt){var a=ei;if(a){var d=a;if(!Zp(o,a)){if(Bh(o))throw Error(l(418));a=pr(d);var _=$n;a&&Zp(o,a)?qp(_,d):(o.flags=o.flags&-4097|2,Xt=!1,$n=o)}}else{if(Bh(o))throw Error(l(418));o.flags=o.flags&-4097|2,Xt=!1,$n=o}}}function Jp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;$n=o}function Bo(o){if(!it||o!==$n)return!1;if(!Xt)return Jp(o),Xt=!0,!1;if(o.tag!==3&&(o.tag!==5||I(o.type)&&!xe(o.type,o.memoizedProps))){var a=ei;if(a){if(Bh(o)){for(o=ei;o;)o=pr(o);throw Error(l(418))}for(;a;)qp(o,a),a=pr(a)}}if(Jp(o),o.tag===13){if(!it)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));ei=vh(o)}else ei=$n?pr(o.stateNode):null;return!0}function zs(){it&&(ei=$n=null,Fo=Xt=!1)}function kh(o){yi===null?yi=[o]:yi.push(o)}function zo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var _=d.stateNode}if(!_)throw Error(l(147,o));var S=_,A=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===A?a.ref:(a=function(B){var G=S.refs;G===Vp&&(G=S.refs={}),B===null?delete G[A]:G[A]=B},a._stringRef=A,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function Ml(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function jp(o){var a=o._init;return a(o._payload)}function Kp(o){function a(j,X){if(o){var ie=j.deletions;ie===null?(j.deletions=[X],j.flags|=16):ie.push(X)}}function d(j,X){if(!o)return null;for(;X!==null;)a(j,X),X=X.sibling;return null}function _(j,X){for(j=new Map;X!==null;)X.key!==null?j.set(X.key,X):j.set(X.index,X),X=X.sibling;return j}function S(j,X){return j=Er(j,X),j.index=0,j.sibling=null,j}function A(j,X,ie){return j.index=ie,o?(ie=j.alternate,ie!==null?(ie=ie.index,ie<X?(j.flags|=2,X):ie):(j.flags|=2,X)):(j.flags|=1048576,X)}function B(j){return o&&j.alternate===null&&(j.flags|=2),j}function G(j,X,ie,Be){return X===null||X.tag!==6?(X=wf(ie,j.mode,Be),X.return=j,X):(X=S(X,ie),X.return=j,X)}function le(j,X,ie,Be){var Ke=ie.type;return Ke===f?Ye(j,X,ie.props.children,Be,ie.key):X!==null&&(X.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===w&&jp(Ke)===X.type)?(Be=S(X,ie.props),Be.ref=zo(j,X,ie),Be.return=j,Be):(Be=$l(ie.type,ie.key,ie.props,null,j.mode,Be),Be.ref=zo(j,X,ie),Be.return=j,Be)}function we(j,X,ie,Be){return X===null||X.tag!==4||X.stateNode.containerInfo!==ie.containerInfo||X.stateNode.implementation!==ie.implementation?(X=Tf(ie,j.mode,Be),X.return=j,X):(X=S(X,ie.children||[]),X.return=j,X)}function Ye(j,X,ie,Be,Ke){return X===null||X.tag!==7?(X=Kr(ie,j.mode,Be,Ke),X.return=j,X):(X=S(X,ie),X.return=j,X)}function ft(j,X,ie){if(typeof X=="string"&&X!==""||typeof X=="number")return X=wf(""+X,j.mode,ie),X.return=j,X;if(typeof X=="object"&&X!==null){switch(X.$$typeof){case u:return ie=$l(X.type,X.key,X.props,null,j.mode,ie),ie.ref=zo(j,null,X),ie.return=j,ie;case h:return X=Tf(X,j.mode,ie),X.return=j,X;case w:var Be=X._init;return ft(j,Be(X._payload),ie)}if(ce(X)||P(X))return X=Kr(X,j.mode,ie,null),X.return=j,X;Ml(j,X)}return null}function at(j,X,ie,Be){var Ke=X!==null?X.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return Ke!==null?null:G(j,X,""+ie,Be);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return ie.key===Ke?le(j,X,ie,Be):null;case h:return ie.key===Ke?we(j,X,ie,Be):null;case w:return Ke=ie._init,at(j,X,Ke(ie._payload),Be)}if(ce(ie)||P(ie))return Ke!==null?null:Ye(j,X,ie,Be,null);Ml(j,ie)}return null}function Ht(j,X,ie,Be,Ke){if(typeof Be=="string"&&Be!==""||typeof Be=="number")return j=j.get(ie)||null,G(X,j,""+Be,Ke);if(typeof Be=="object"&&Be!==null){switch(Be.$$typeof){case u:return j=j.get(Be.key===null?ie:Be.key)||null,le(X,j,Be,Ke);case h:return j=j.get(Be.key===null?ie:Be.key)||null,we(X,j,Be,Ke);case w:var xt=Be._init;return Ht(j,X,ie,xt(Be._payload),Ke)}if(ce(Be)||P(Be))return j=j.get(ie)||null,Ye(X,j,Be,Ke,null);Ml(X,Be)}return null}function Qe(j,X,ie,Be){for(var Ke=null,xt=null,dt=X,Ft=X=0,pn=null;dt!==null&&Ft<ie.length;Ft++){dt.index>Ft?(pn=dt,dt=null):pn=dt.sibling;var Bt=at(j,dt,ie[Ft],Be);if(Bt===null){dt===null&&(dt=pn);break}o&&dt&&Bt.alternate===null&&a(j,dt),X=A(Bt,X,Ft),xt===null?Ke=Bt:xt.sibling=Bt,xt=Bt,dt=pn}if(Ft===ie.length)return d(j,dt),Xt&&Wr(j,Ft),Ke;if(dt===null){for(;Ft<ie.length;Ft++)dt=ft(j,ie[Ft],Be),dt!==null&&(X=A(dt,X,Ft),xt===null?Ke=dt:xt.sibling=dt,xt=dt);return Xt&&Wr(j,Ft),Ke}for(dt=_(j,dt);Ft<ie.length;Ft++)pn=Ht(dt,j,Ft,ie[Ft],Be),pn!==null&&(o&&pn.alternate!==null&&dt.delete(pn.key===null?Ft:pn.key),X=A(pn,X,Ft),xt===null?Ke=pn:xt.sibling=pn,xt=pn);return o&&dt.forEach(function(wr){return a(j,wr)}),Xt&&Wr(j,Ft),Ke}function En(j,X,ie,Be){var Ke=P(ie);if(typeof Ke!="function")throw Error(l(150));if(ie=Ke.call(ie),ie==null)throw Error(l(151));for(var xt=Ke=null,dt=X,Ft=X=0,pn=null,Bt=ie.next();dt!==null&&!Bt.done;Ft++,Bt=ie.next()){dt.index>Ft?(pn=dt,dt=null):pn=dt.sibling;var wr=at(j,dt,Bt.value,Be);if(wr===null){dt===null&&(dt=pn);break}o&&dt&&wr.alternate===null&&a(j,dt),X=A(wr,X,Ft),xt===null?Ke=wr:xt.sibling=wr,xt=wr,dt=pn}if(Bt.done)return d(j,dt),Xt&&Wr(j,Ft),Ke;if(dt===null){for(;!Bt.done;Ft++,Bt=ie.next())Bt=ft(j,Bt.value,Be),Bt!==null&&(X=A(Bt,X,Ft),xt===null?Ke=Bt:xt.sibling=Bt,xt=Bt);return Xt&&Wr(j,Ft),Ke}for(dt=_(j,dt);!Bt.done;Ft++,Bt=ie.next())Bt=Ht(dt,j,Ft,Bt.value,Be),Bt!==null&&(o&&Bt.alternate!==null&&dt.delete(Bt.key===null?Ft:Bt.key),X=A(Bt,X,Ft),xt===null?Ke=Bt:xt.sibling=Bt,xt=Bt);return o&&dt.forEach(function(vx){return a(j,vx)}),Xt&&Wr(j,Ft),Ke}function pi(j,X,ie,Be){if(typeof ie=="object"&&ie!==null&&ie.type===f&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:e:{for(var Ke=ie.key,xt=X;xt!==null;){if(xt.key===Ke){if(Ke=ie.type,Ke===f){if(xt.tag===7){d(j,xt.sibling),X=S(xt,ie.props.children),X.return=j,j=X;break e}}else if(xt.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===w&&jp(Ke)===xt.type){d(j,xt.sibling),X=S(xt,ie.props),X.ref=zo(j,xt,ie),X.return=j,j=X;break e}d(j,xt);break}else a(j,xt);xt=xt.sibling}ie.type===f?(X=Kr(ie.props.children,j.mode,Be,ie.key),X.return=j,j=X):(Be=$l(ie.type,ie.key,ie.props,null,j.mode,Be),Be.ref=zo(j,X,ie),Be.return=j,j=Be)}return B(j);case h:e:{for(xt=ie.key;X!==null;){if(X.key===xt)if(X.tag===4&&X.stateNode.containerInfo===ie.containerInfo&&X.stateNode.implementation===ie.implementation){d(j,X.sibling),X=S(X,ie.children||[]),X.return=j,j=X;break e}else{d(j,X);break}else a(j,X);X=X.sibling}X=Tf(ie,j.mode,Be),X.return=j,j=X}return B(j);case w:return xt=ie._init,pi(j,X,xt(ie._payload),Be)}if(ce(ie))return Qe(j,X,ie,Be);if(P(ie))return En(j,X,ie,Be);Ml(j,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,X!==null&&X.tag===6?(d(j,X.sibling),X=S(X,ie),X.return=j,j=X):(d(j,X),X=wf(ie,j.mode,Be),X.return=j,j=X),B(j)):d(j,X)}return pi}var ks=Kp(!0),Qp=Kp(!1),ko={},ui=et(ko),Ho=et(ko),Hs=et(ko);function Ni(o){if(o===ko)throw Error(l(174));return o}function Hh(o,a){Je(Hs,a),Je(Ho,o),Je(ui,ko),o=ye(a),Re(ui),Je(ui,o)}function Vs(){Re(ui),Re(Ho),Re(Hs)}function $p(o){var a=Ni(Hs.current),d=Ni(ui.current);a=H(d,o.type,a),d!==a&&(Je(Ho,o),Je(ui,a))}function Vh(o){Ho.current===o&&(Re(ui),Re(Ho))}var Yt=et(0);function El(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||Ri(d)||Vr(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Gh=[];function Wh(){for(var o=0;o<Gh.length;o++){var a=Gh[o];$e?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Gh.length=0}var wl=c.ReactCurrentDispatcher,hi=c.ReactCurrentBatchConfig,Gs=0,Zt=null,xn=null,dn=null,Tl=!1,Vo=!1,Go=0,Gy=0;function Sn(){throw Error(l(321))}function Xh(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Ii(o[d],a[d]))return!1;return!0}function Yh(o,a,d,_,S,A){if(Gs=A,Zt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,wl.current=o===null||o.memoizedState===null?qy:Zy,o=d(_,S),Vo){A=0;do{if(Vo=!1,Go=0,25<=A)throw Error(l(301));A+=1,dn=xn=null,a.updateQueue=null,wl.current=Jy,o=d(_,S)}while(Vo)}if(wl.current=Pl,a=xn!==null&&xn.next!==null,Gs=0,dn=xn=Zt=null,Tl=!1,a)throw Error(l(300));return o}function qh(){var o=Go!==0;return Go=0,o}function ji(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return dn===null?Zt.memoizedState=dn=o:dn=dn.next=o,dn}function Ui(){if(xn===null){var o=Zt.alternate;o=o!==null?o.memoizedState:null}else o=xn.next;var a=dn===null?Zt.memoizedState:dn.next;if(a!==null)dn=a,xn=o;else{if(o===null)throw Error(l(310));xn=o,o={memoizedState:xn.memoizedState,baseState:xn.baseState,baseQueue:xn.baseQueue,queue:xn.queue,next:null},dn===null?Zt.memoizedState=dn=o:dn=dn.next=o}return dn}function Xr(o,a){return typeof a=="function"?a(o):a}function Al(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=xn,S=_.baseQueue,A=d.pending;if(A!==null){if(S!==null){var B=S.next;S.next=A.next,A.next=B}_.baseQueue=S=A,d.pending=null}if(S!==null){A=S.next,_=_.baseState;var G=B=null,le=null,we=A;do{var Ye=we.lane;if((Gs&Ye)===Ye)le!==null&&(le=le.next={lane:0,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null}),_=we.hasEagerState?we.eagerState:o(_,we.action);else{var ft={lane:Ye,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null};le===null?(G=le=ft,B=_):le=le.next=ft,Zt.lanes|=Ye,Xs|=Ye}we=we.next}while(we!==null&&we!==A);le===null?B=_:le.next=G,Ii(_,a.memoizedState)||(ti=!0),a.memoizedState=_,a.baseState=B,a.baseQueue=le,d.lastRenderedState=_}if(o=d.interleaved,o!==null){S=o;do A=S.lane,Zt.lanes|=A,Xs|=A,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function bl(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=d.dispatch,S=d.pending,A=a.memoizedState;if(S!==null){d.pending=null;var B=S=S.next;do A=o(A,B.action),B=B.next;while(B!==S);Ii(A,a.memoizedState)||(ti=!0),a.memoizedState=A,a.baseQueue===null&&(a.baseState=A),d.lastRenderedState=A}return[A,_]}function em(){}function tm(o,a){var d=Zt,_=Ui(),S=a(),A=!Ii(_.memoizedState,S);if(A&&(_.memoizedState=S,ti=!0),_=_.queue,Xo(rm.bind(null,d,_,o),[o]),_.getSnapshot!==a||A||dn!==null&&dn.memoizedState.tag&1){if(d.flags|=2048,Wo(9,im.bind(null,d,_,S,a),void 0,null),tn===null)throw Error(l(349));Gs&30||nm(d,a,S)}return S}function nm(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Zt.updateQueue,a===null?(a={lastEffect:null,stores:null},Zt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function im(o,a,d,_){a.value=d,a.getSnapshot=_,sm(a)&&fi(o,1,-1)}function rm(o,a,d){return d(function(){sm(a)&&fi(o,1,-1)})}function sm(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Ii(o,d)}catch{return!0}}function Zh(o){var a=ji();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Xr,lastRenderedState:o},a.queue=o,o=o.dispatch=Yy.bind(null,Zt,o),[a.memoizedState,o]}function Wo(o,a,d,_){return o={tag:o,create:a,destroy:d,deps:_,next:null},a=Zt.updateQueue,a===null?(a={lastEffect:null,stores:null},Zt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(_=d.next,d.next=o,o.next=_,a.lastEffect=o)),o}function om(){return Ui().memoizedState}function Cl(o,a,d,_){var S=ji();Zt.flags|=o,S.memoizedState=Wo(1|a,d,void 0,_===void 0?null:_)}function Rl(o,a,d,_){var S=Ui();_=_===void 0?null:_;var A=void 0;if(xn!==null){var B=xn.memoizedState;if(A=B.destroy,_!==null&&Xh(_,B.deps)){S.memoizedState=Wo(a,d,A,_);return}}Zt.flags|=o,S.memoizedState=Wo(1|a,d,A,_)}function Jh(o,a){return Cl(8390656,8,o,a)}function Xo(o,a){return Rl(2048,8,o,a)}function am(o,a){return Rl(4,2,o,a)}function lm(o,a){return Rl(4,4,o,a)}function cm(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function um(o,a,d){return d=d!=null?d.concat([o]):null,Rl(4,4,cm.bind(null,a,o),d)}function jh(){}function hm(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&Xh(a,_[1])?_[0]:(d.memoizedState=[o,a],o)}function fm(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&Xh(a,_[1])?_[0]:(o=o(),d.memoizedState=[o,a],o)}function Wy(o,a){var d=Ot;Ot=d!==0&&4>d?d:4,o(!0);var _=hi.transition;hi.transition={};try{o(!1),a()}finally{Ot=d,hi.transition=_}}function dm(){return Ui().memoizedState}function Xy(o,a,d){var _=Sr(o);d={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null},pm(o)?mm(a,d):(gm(o,a,d),d=Ln(),o=fi(o,_,d),o!==null&&_m(o,a,_))}function Yy(o,a,d){var _=Sr(o),S={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null};if(pm(o))mm(a,S);else{gm(o,a,S);var A=o.alternate;if(o.lanes===0&&(A===null||A.lanes===0)&&(A=a.lastRenderedReducer,A!==null))try{var B=a.lastRenderedState,G=A(B,d);if(S.hasEagerState=!0,S.eagerState=G,Ii(G,B))return}catch{}finally{}d=Ln(),o=fi(o,_,d),o!==null&&_m(o,a,_)}}function pm(o){var a=o.alternate;return o===Zt||a!==null&&a===Zt}function mm(o,a){Vo=Tl=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function gm(o,a,d){tn!==null&&o.mode&1&&!(Et&2)?(o=a.interleaved,o===null?(d.next=d,Di===null?Di=[a]:Di.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function _m(o,a,d){if(d&4194240){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,wh(o,d)}}var Pl={readContext:ai,useCallback:Sn,useContext:Sn,useEffect:Sn,useImperativeHandle:Sn,useInsertionEffect:Sn,useLayoutEffect:Sn,useMemo:Sn,useReducer:Sn,useRef:Sn,useState:Sn,useDebugValue:Sn,useDeferredValue:Sn,useTransition:Sn,useMutableSource:Sn,useSyncExternalStore:Sn,useId:Sn,unstable_isNewReconciler:!1},qy={readContext:ai,useCallback:function(o,a){return ji().memoizedState=[o,a===void 0?null:a],o},useContext:ai,useEffect:Jh,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,Cl(4194308,4,cm.bind(null,a,o),d)},useLayoutEffect:function(o,a){return Cl(4194308,4,o,a)},useInsertionEffect:function(o,a){return Cl(4,2,o,a)},useMemo:function(o,a){var d=ji();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var _=ji();return a=d!==void 0?d(a):a,_.memoizedState=_.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},_.queue=o,o=o.dispatch=Xy.bind(null,Zt,o),[_.memoizedState,o]},useRef:function(o){var a=ji();return o={current:o},a.memoizedState=o},useState:Zh,useDebugValue:jh,useDeferredValue:function(o){var a=Zh(o),d=a[0],_=a[1];return Jh(function(){var S=hi.transition;hi.transition={};try{_(o)}finally{hi.transition=S}},[o]),d},useTransition:function(){var o=Zh(!1),a=o[0];return o=Wy.bind(null,o[1]),ji().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var _=Zt,S=ji();if(Xt){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),tn===null)throw Error(l(349));Gs&30||nm(_,a,d)}S.memoizedState=d;var A={value:d,getSnapshot:a};return S.queue=A,Jh(rm.bind(null,_,A,o),[o]),_.flags|=2048,Wo(9,im.bind(null,_,A,d,a),void 0,null),d},useId:function(){var o=ji(),a=tn.identifierPrefix;if(Xt){var d=Ji,_=Zi;d=(_&~(1<<32-Ct(_)-1)).toString(32)+d,a=":"+a+"R"+d,d=Go++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=Gy++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Zy={readContext:ai,useCallback:hm,useContext:ai,useEffect:Xo,useImperativeHandle:um,useInsertionEffect:am,useLayoutEffect:lm,useMemo:fm,useReducer:Al,useRef:om,useState:function(){return Al(Xr)},useDebugValue:jh,useDeferredValue:function(o){var a=Al(Xr),d=a[0],_=a[1];return Xo(function(){var S=hi.transition;hi.transition={};try{_(o)}finally{hi.transition=S}},[o]),d},useTransition:function(){var o=Al(Xr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:em,useSyncExternalStore:tm,useId:dm,unstable_isNewReconciler:!1},Jy={readContext:ai,useCallback:hm,useContext:ai,useEffect:Xo,useImperativeHandle:um,useInsertionEffect:am,useLayoutEffect:lm,useMemo:fm,useReducer:bl,useRef:om,useState:function(){return bl(Xr)},useDebugValue:jh,useDeferredValue:function(o){var a=bl(Xr),d=a[0],_=a[1];return Xo(function(){var S=hi.transition;hi.transition={};try{_(o)}finally{hi.transition=S}},[o]),d},useTransition:function(){var o=bl(Xr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:em,useSyncExternalStore:tm,useId:dm,unstable_isNewReconciler:!1};function Kh(o,a){try{var d="",_=a;do d+=Vy(_),_=_.return;while(_);var S=d}catch(A){S=`
Error generating stack: `+A.message+`
`+A.stack}return{value:o,source:a,stack:S}}function Qh(o,a){try{console.error(a.value)}catch(d){setTimeout(function(){throw d})}}var jy=typeof WeakMap=="function"?WeakMap:Map;function vm(o,a,d){d=qi(-1,d),d.tag=3,d.payload={element:null};var _=a.value;return d.callback=function(){Yl||(Yl=!0,_f=_),Qh(o,a)},d}function ym(o,a,d){d=qi(-1,d),d.tag=3;var _=o.type.getDerivedStateFromError;if(typeof _=="function"){var S=a.value;d.payload=function(){return _(S)},d.callback=function(){Qh(o,a)}}var A=o.stateNode;return A!==null&&typeof A.componentDidCatch=="function"&&(d.callback=function(){Qh(o,a),typeof _!="function"&&(yr===null?yr=new Set([this]):yr.add(this));var B=a.stack;this.componentDidCatch(a.value,{componentStack:B!==null?B:""})}),d}function xm(o,a,d){var _=o.pingCache;if(_===null){_=o.pingCache=new jy;var S=new Set;_.set(a,S)}else S=_.get(a),S===void 0&&(S=new Set,_.set(a,S));S.has(d)||(S.add(d),o=ux.bind(null,o,a,d),a.then(o,o))}function Sm(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function Mm(o,a,d,_,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=qi(-1,1),a.tag=2,vr(d,a))),d.lanes|=1),o)}function Oi(o){o.flags|=4}function Em(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Yo,qo,Il,Ll;if(ut)Yo=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)Ie(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},qo=function(){},Il=function(o,a,d,_,S){if(o=o.memoizedProps,o!==_){var A=a.stateNode,B=Ni(ui.current);d=oe(A,d,o,_,S,B),(a.updateQueue=d)&&Oi(a)}},Ll=function(o,a,d,_){d!==_&&Oi(a)};else if(bt){Yo=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var A=S.stateNode;d&&_&&(A=wt(A,S.type,S.memoizedProps,S)),Ie(o,A)}else if(S.tag===6)A=S.stateNode,d&&_&&(A=en(A,S.memoizedProps,S)),Ie(o,A);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)A=S.child,A!==null&&(A.return=S),Yo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var wm=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var A=S.stateNode;d&&_&&(A=wt(A,S.type,S.memoizedProps,S)),nt(o,A)}else if(S.tag===6)A=S.stateNode,d&&_&&(A=en(A,S.memoizedProps,S)),nt(o,A);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)A=S.child,A!==null&&(A.return=S),wm(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};qo=function(o,a){var d=a.stateNode;if(!Em(o,a)){o=d.containerInfo;var _=Pe(o);wm(_,a,!1,!1),d.pendingChildren=_,Oi(a),Pt(o,_)}},Il=function(o,a,d,_,S){var A=o.stateNode,B=o.memoizedProps;if((o=Em(o,a))&&B===_)a.stateNode=A;else{var G=a.stateNode,le=Ni(ui.current),we=null;B!==_&&(we=oe(G,d,B,_,S,le)),o&&we===null?a.stateNode=A:(A=Fe(A,we,d,B,_,a,o,G),qe(A,d,_,S,le)&&Oi(a),a.stateNode=A,o?Oi(a):Yo(A,a,!1,!1))}},Ll=function(o,a,d,_){d!==_?(o=Ni(Hs.current),d=Ni(ui.current),a.stateNode=Ce(_,o,d,a),Oi(a)):a.stateNode=o.stateNode}}else qo=function(){},Il=function(){},Ll=function(){};function Zo(o,a){if(!Xt)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var _=null;d!==null;)d.alternate!==null&&(_=d),d=d.sibling;_===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:_.sibling=null}}function Mn(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,_=0;if(a)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags&14680064,_|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags,_|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=_,o.childLanes=d,a}function Ky(o,a,d){var _=a.pendingProps;switch(Fh(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Mn(a),null;case 1:return Ut(a.type)&&Rt(),Mn(a),null;case 3:return _=a.stateNode,Vs(),Re(At),Re(Tt),Wh(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(o===null||o.child===null)&&(Bo(a)?Oi(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,yi!==null&&(xf(yi),yi=null))),qo(o,a),Mn(a),null;case 5:Vh(a),d=Ni(Hs.current);var S=a.type;if(o!==null&&a.stateNode!=null)Il(o,a,S,_,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!_){if(a.stateNode===null)throw Error(l(166));return Mn(a),null}if(o=Ni(ui.current),Bo(a)){if(!it)throw Error(l(175));o=ll(a.stateNode,a.type,a.memoizedProps,d,o,a,!Fo),a.updateQueue=o,o!==null&&Oi(a)}else{var A=_e(S,_,d,o,a);Yo(A,a,!1,!1),a.stateNode=A,qe(A,S,_,d,o)&&Oi(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return Mn(a),null;case 6:if(o&&a.stateNode!=null)Ll(o,a,o.memoizedProps,_);else{if(typeof _!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ni(Hs.current),d=Ni(ui.current),Bo(a)){if(!it)throw Error(l(176));if(o=a.stateNode,_=a.memoizedProps,(d=cl(o,_,a,!Fo))&&(S=$n,S!==null))switch(A=(S.mode&1)!==0,S.tag){case 3:q(S.stateNode.containerInfo,o,_,A);break;case 5:Q(S.type,S.memoizedProps,S.stateNode,o,_,A)}d&&Oi(a)}else a.stateNode=Ce(_,o,d,a)}return Mn(a),null;case 13:if(Re(Yt),_=a.memoizedState,Xt&&ei!==null&&a.mode&1&&!(a.flags&128)){for(o=ei;o;)o=pr(o);return zs(),a.flags|=98560,a}if(_!==null&&_.dehydrated!==null){if(_=Bo(a),o===null){if(!_)throw Error(l(318));if(!it)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));_h(o,a)}else zs(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return Mn(a),null}return yi!==null&&(xf(yi),yi=null),a.flags&128?(a.lanes=d,a):(_=_!==null,d=!1,o===null?Bo(a):d=o.memoizedState!==null,_&&!d&&(a.child.flags|=8192,a.mode&1&&(o===null||Yt.current&1?an===0&&(an=3):Mf())),a.updateQueue!==null&&(a.flags|=4),Mn(a),null);case 4:return Vs(),qo(o,a),o===null&&Vt(a.stateNode.containerInfo),Mn(a),null;case 10:return Ih(a.type._context),Mn(a),null;case 17:return Ut(a.type)&&Rt(),Mn(a),null;case 19:if(Re(Yt),S=a.memoizedState,S===null)return Mn(a),null;if(_=(a.flags&128)!==0,A=S.rendering,A===null)if(_)Zo(S,!1);else{if(an!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(A=El(o),A!==null){for(a.flags|=128,Zo(S,!1),o=A.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,_=a.child;_!==null;)d=_,S=o,d.flags&=14680066,A=d.alternate,A===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=A.childLanes,d.lanes=A.lanes,d.child=A.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=A.memoizedProps,d.memoizedState=A.memoizedState,d.updateQueue=A.updateQueue,d.type=A.type,S=A.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),_=_.sibling;return Je(Yt,Yt.current&1|2),a.child}o=o.sibling}S.tail!==null&&fn()>gf&&(a.flags|=128,_=!0,Zo(S,!1),a.lanes=4194304)}else{if(!_)if(o=El(A),o!==null){if(a.flags|=128,_=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Zo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!A.alternate&&!Xt)return Mn(a),null}else 2*fn()-S.renderingStartTime>gf&&d!==1073741824&&(a.flags|=128,_=!0,Zo(S,!1),a.lanes=4194304);S.isBackwards?(A.sibling=a.child,a.child=A):(o=S.last,o!==null?o.sibling=A:a.child=A,S.last=A)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=fn(),a.sibling=null,o=Yt.current,Je(Yt,_?o&1|2:o&1),a):(Mn(a),null);case 22:case 23:return Sf(),_=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==_&&(a.flags|=8192),_&&a.mode&1?ni&1073741824&&(Mn(a),ut&&a.subtreeFlags&6&&(a.flags|=8192)):Mn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Qy=c.ReactCurrentOwner,ti=!1;function In(o,a,d,_){a.child=o===null?Qp(a,null,d,_):ks(a,o.child,d,_)}function Tm(o,a,d,_,S){d=d.render;var A=a.ref;return Os(a,S),_=Yh(o,a,d,_,A,S),d=qh(),o!==null&&!ti?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Ki(o,a,S)):(Xt&&d&&Oh(a),a.flags|=1,In(o,a,_,S),a.child)}function Am(o,a,d,_,S){if(o===null){var A=d.type;return typeof A=="function"&&!Ef(A)&&A.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=A,bm(o,a,A,_,S)):(o=$l(d.type,null,_,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(A=o.child,!(o.lanes&S)){var B=A.memoizedProps;if(d=d.compare,d=d!==null?d:pl,d(B,_)&&o.ref===a.ref)return Ki(o,a,S)}return a.flags|=1,o=Er(A,_),o.ref=a.ref,o.return=a,a.child=o}function bm(o,a,d,_,S){if(o!==null&&pl(o.memoizedProps,_)&&o.ref===a.ref)if(ti=!1,(o.lanes&S)!==0)o.flags&131072&&(ti=!0);else return a.lanes=o.lanes,Ki(o,a,S);return $h(o,a,d,_,S)}function Cm(o,a,d){var _=a.pendingProps,S=_.children,A=o!==null?o.memoizedState:null;if(_.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},Je(Ws,ni),ni|=d;else if(d&1073741824)a.memoizedState={baseLanes:0,cachePool:null},_=A!==null?A.baseLanes:d,Je(Ws,ni),ni|=_;else return o=A!==null?A.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Je(Ws,ni),ni|=o,null;else A!==null?(_=A.baseLanes|d,a.memoizedState=null):_=d,Je(Ws,ni),ni|=_;return In(o,a,S,d),a.child}function Rm(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function $h(o,a,d,_,S){var A=Ut(d)?yt:Tt.current;return A=je(a,A),Os(a,S),d=Yh(o,a,d,_,A,S),_=qh(),o!==null&&!ti?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Ki(o,a,S)):(Xt&&_&&Oh(a),a.flags|=1,In(o,a,d,S),a.child)}function Pm(o,a,d,_,S){if(Ut(d)){var A=!0;hn(a)}else A=!1;if(Os(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Wp(a,d,_),Uh(a,d,_,S),_=!0;else if(o===null){var B=a.stateNode,G=a.memoizedProps;B.props=G;var le=B.context,we=d.contextType;typeof we=="object"&&we!==null?we=ai(we):(we=Ut(d)?yt:Tt.current,we=je(a,we));var Ye=d.getDerivedStateFromProps,ft=typeof Ye=="function"||typeof B.getSnapshotBeforeUpdate=="function";ft||typeof B.UNSAFE_componentWillReceiveProps!="function"&&typeof B.componentWillReceiveProps!="function"||(G!==_||le!==we)&&Xp(a,B,_,we),_r=!1;var at=a.memoizedState;B.state=at,vl(a,_,B,S),le=a.memoizedState,G!==_||at!==le||At.current||_r?(typeof Ye=="function"&&(Nh(a,d,Ye,_),le=a.memoizedState),(G=_r||Gp(a,d,G,_,at,le,we))?(ft||typeof B.UNSAFE_componentWillMount!="function"&&typeof B.componentWillMount!="function"||(typeof B.componentWillMount=="function"&&B.componentWillMount(),typeof B.UNSAFE_componentWillMount=="function"&&B.UNSAFE_componentWillMount()),typeof B.componentDidMount=="function"&&(a.flags|=4194308)):(typeof B.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=_,a.memoizedState=le),B.props=_,B.state=le,B.context=we,_=G):(typeof B.componentDidMount=="function"&&(a.flags|=4194308),_=!1)}else{B=a.stateNode,zp(o,a),G=a.memoizedProps,we=a.type===a.elementType?G:vi(a.type,G),B.props=we,ft=a.pendingProps,at=B.context,le=d.contextType,typeof le=="object"&&le!==null?le=ai(le):(le=Ut(d)?yt:Tt.current,le=je(a,le));var Ht=d.getDerivedStateFromProps;(Ye=typeof Ht=="function"||typeof B.getSnapshotBeforeUpdate=="function")||typeof B.UNSAFE_componentWillReceiveProps!="function"&&typeof B.componentWillReceiveProps!="function"||(G!==ft||at!==le)&&Xp(a,B,_,le),_r=!1,at=a.memoizedState,B.state=at,vl(a,_,B,S);var Qe=a.memoizedState;G!==ft||at!==Qe||At.current||_r?(typeof Ht=="function"&&(Nh(a,d,Ht,_),Qe=a.memoizedState),(we=_r||Gp(a,d,we,_,at,Qe,le)||!1)?(Ye||typeof B.UNSAFE_componentWillUpdate!="function"&&typeof B.componentWillUpdate!="function"||(typeof B.componentWillUpdate=="function"&&B.componentWillUpdate(_,Qe,le),typeof B.UNSAFE_componentWillUpdate=="function"&&B.UNSAFE_componentWillUpdate(_,Qe,le)),typeof B.componentDidUpdate=="function"&&(a.flags|=4),typeof B.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof B.componentDidUpdate!="function"||G===o.memoizedProps&&at===o.memoizedState||(a.flags|=4),typeof B.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&at===o.memoizedState||(a.flags|=1024),a.memoizedProps=_,a.memoizedState=Qe),B.props=_,B.state=Qe,B.context=le,_=we):(typeof B.componentDidUpdate!="function"||G===o.memoizedProps&&at===o.memoizedState||(a.flags|=4),typeof B.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&at===o.memoizedState||(a.flags|=1024),_=!1)}return ef(o,a,d,_,A,S)}function ef(o,a,d,_,S,A){Rm(o,a);var B=(a.flags&128)!==0;if(!_&&!B)return S&&mr(a,d,!1),Ki(o,a,A);_=a.stateNode,Qy.current=a;var G=B&&typeof d.getDerivedStateFromError!="function"?null:_.render();return a.flags|=1,o!==null&&B?(a.child=ks(a,o.child,null,A),a.child=ks(a,null,G,A)):In(o,a,G,A),a.memoizedState=_.state,S&&mr(a,d,!0),a.child}function Im(o){var a=o.stateNode;a.pendingContext?kn(o,a.pendingContext,a.pendingContext!==a.context):a.context&&kn(o,a.context,!1),Hh(o,a.containerInfo)}function Lm(o,a,d,_,S){return zs(),kh(S),a.flags|=256,In(o,a,d,_),a.child}var Dl={dehydrated:null,treeContext:null,retryLane:0};function Nl(o){return{baseLanes:o,cachePool:null}}function Dm(o,a,d){var _=a.pendingProps,S=Yt.current,A=!1,B=(a.flags&128)!==0,G;if((G=B)||(G=o!==null&&o.memoizedState===null?!1:(S&2)!==0),G?(A=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Je(Yt,S&1),o===null)return zh(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?Vr(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=_.children,o=_.fallback,A?(_=a.mode,A=a.child,S={mode:"hidden",children:S},!(_&1)&&A!==null?(A.childLanes=0,A.pendingProps=S):A=ec(S,_,0,null),o=Kr(o,_,d,null),A.return=a,o.return=a,A.sibling=o,a.child=A,a.child.memoizedState=Nl(d),a.memoizedState=Dl,o):tf(a,S));if(S=o.memoizedState,S!==null){if(G=S.dehydrated,G!==null){if(B)return a.flags&256?(a.flags&=-257,Ul(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(A=_.fallback,S=a.mode,_=ec({mode:"visible",children:_.children},S,0,null),A=Kr(A,S,d,null),A.flags|=2,_.return=a,A.return=a,_.sibling=A,a.child=_,a.mode&1&&ks(a,o.child,null,d),a.child.memoizedState=Nl(d),a.memoizedState=Dl,A);if(!(a.mode&1))a=Ul(o,a,d,null);else if(Vr(G))a=Ul(o,a,d,Error(l(419)));else if(_=(d&o.childLanes)!==0,ti||_){if(_=tn,_!==null){switch(d&-d){case 4:A=2;break;case 16:A=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:A=32;break;case 536870912:A=268435456;break;default:A=0}_=A&(_.suspendedLanes|d)?0:A,_!==0&&_!==S.retryLane&&(S.retryLane=_,fi(o,_,-1))}Mf(),a=Ul(o,a,d,Error(l(421)))}else Ri(G)?(a.flags|=128,a.child=o.child,a=hx.bind(null,o),ol(G,a),a=null):(d=S.treeContext,it&&(ei=Ns(G),$n=a,Xt=!0,yi=null,Fo=!1,d!==null&&(li[ci++]=Zi,li[ci++]=Ji,li[ci++]=Gr,Zi=d.id,Ji=d.overflow,Gr=a)),a=tf(a,a.pendingProps.children),a.flags|=4096);return a}return A?(_=Um(o,a,_.children,_.fallback,d),A=a.child,S=o.child.memoizedState,A.memoizedState=S===null?Nl(d):{baseLanes:S.baseLanes|d,cachePool:null},A.childLanes=o.childLanes&~d,a.memoizedState=Dl,_):(d=Nm(o,a,_.children,d),a.memoizedState=null,d)}return A?(_=Um(o,a,_.children,_.fallback,d),A=a.child,S=o.child.memoizedState,A.memoizedState=S===null?Nl(d):{baseLanes:S.baseLanes|d,cachePool:null},A.childLanes=o.childLanes&~d,a.memoizedState=Dl,_):(d=Nm(o,a,_.children,d),a.memoizedState=null,d)}function tf(o,a){return a=ec({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function Nm(o,a,d,_){var S=o.child;return o=S.sibling,d=Er(S,{mode:"visible",children:d}),!(a.mode&1)&&(d.lanes=_),d.return=a,d.sibling=null,o!==null&&(_=a.deletions,_===null?(a.deletions=[o],a.flags|=16):_.push(o)),a.child=d}function Um(o,a,d,_,S){var A=a.mode;o=o.child;var B=o.sibling,G={mode:"hidden",children:d};return!(A&1)&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=G,a.deletions=null):(d=Er(o,G),d.subtreeFlags=o.subtreeFlags&14680064),B!==null?_=Er(B,_):(_=Kr(_,A,S,null),_.flags|=2),_.return=a,d.return=a,d.sibling=_,a.child=d,_}function Ul(o,a,d,_){return _!==null&&kh(_),ks(a,o.child,null,d),o=tf(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function Om(o,a,d){o.lanes|=a;var _=o.alternate;_!==null&&(_.lanes|=a),Lh(o.return,a,d)}function nf(o,a,d,_,S){var A=o.memoizedState;A===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:_,tail:d,tailMode:S}:(A.isBackwards=a,A.rendering=null,A.renderingStartTime=0,A.last=_,A.tail=d,A.tailMode=S)}function Fm(o,a,d){var _=a.pendingProps,S=_.revealOrder,A=_.tail;if(In(o,a,_.children,d),_=Yt.current,_&2)_=_&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&Om(o,d,a);else if(o.tag===19)Om(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}_&=1}if(Je(Yt,_),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(d=a.child,S=null;d!==null;)o=d.alternate,o!==null&&El(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=a.child,a.child=null):(S=d.sibling,d.sibling=null),nf(a,!1,S,d,A);break;case"backwards":for(d=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&El(o)===null){a.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}nf(a,!0,d,null,A);break;case"together":nf(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Ki(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),Xs|=a.lanes,!(d&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=Er(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=Er(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function $y(o,a,d){switch(a.tag){case 3:Im(a),zs();break;case 5:$p(a);break;case 1:Ut(a.type)&&hn(a);break;case 4:Hh(a,a.stateNode.containerInfo);break;case 10:Bp(a,a.type._context,a.memoizedProps.value);break;case 13:var _=a.memoizedState;if(_!==null)return _.dehydrated!==null?(Je(Yt,Yt.current&1),a.flags|=128,null):d&a.child.childLanes?Dm(o,a,d):(Je(Yt,Yt.current&1),o=Ki(o,a,d),o!==null?o.sibling:null);Je(Yt,Yt.current&1);break;case 19:if(_=(d&a.childLanes)!==0,o.flags&128){if(_)return Fm(o,a,d);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Je(Yt,Yt.current),_)break;return null;case 22:case 23:return a.lanes=0,Cm(o,a,d)}return Ki(o,a,d)}function ex(o,a){switch(Fh(a),a.tag){case 1:return Ut(a.type)&&Rt(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Vs(),Re(At),Re(Tt),Wh(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Vh(a),null;case 13:if(Re(Yt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));zs()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Re(Yt),null;case 4:return Vs(),null;case 10:return Ih(a.type._context),null;case 22:case 23:return Sf(),null;case 24:return null;default:return null}}var Ol=!1,Yr=!1,tx=typeof WeakSet=="function"?WeakSet:Set,Ue=null;function Fl(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(_){Xn(o,a,_)}else d.current=null}function rf(o,a,d){try{d()}catch(_){Xn(o,a,_)}}var Bm=!1;function nx(o,a){for(se(o.containerInfo),Ue=a;Ue!==null;)if(o=Ue,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Ue=a;else for(;Ue!==null;){o=Ue;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var _=d.memoizedProps,S=d.memoizedState,A=o.stateNode,B=A.getSnapshotBeforeUpdate(o.elementType===o.type?_:vi(o.type,_),S);A.__reactInternalSnapshotBeforeUpdate=B}break;case 3:ut&&me(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){Xn(o,o.return,G)}if(a=o.sibling,a!==null){a.return=o.return,Ue=a;break}Ue=o.return}return d=Bm,Bm=!1,d}function qr(o,a,d){var _=a.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var S=_=_.next;do{if((S.tag&o)===o){var A=S.destroy;S.destroy=void 0,A!==void 0&&rf(a,d,A)}S=S.next}while(S!==_)}}function Jo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var _=d.create;d.destroy=_()}d=d.next}while(d!==a)}}function sf(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=K(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function zm(o,a,d){if(Pi&&typeof Pi.onCommitFiberUnmount=="function")try{Pi.onCommitFiberUnmount(fl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var _=o=o.next;do{var S=_,A=S.destroy;S=S.tag,A!==void 0&&(S&2||S&4)&&rf(a,d,A),_=_.next}while(_!==o)}break;case 1:if(Fl(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(B){Xn(a,d,B)}break;case 5:Fl(a,d);break;case 4:ut?Xm(o,a,d):bt&&bt&&(a=a.stateNode.containerInfo,d=Pe(a),Wt(a,d))}}function km(o,a,d){for(var _=a;;)if(zm(o,_,d),_.child===null||ut&&_.tag===4){if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return}_.sibling.return=_.return,_=_.sibling}else _.child.return=_,_=_.child}function Hm(o){var a=o.alternate;a!==null&&(o.alternate=null,Hm(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&ve(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Vm(o){return o.tag===5||o.tag===3||o.tag===4}function Gm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Vm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Wm(o){if(ut){e:{for(var a=o.return;a!==null;){if(Vm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(fe(a),d.flags&=-33),d=Gm(o),af(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=Gm(o),of(o,d,a);break;default:throw Error(l(161))}}}function of(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?st(d,o,a):ze(d,o);else if(_!==4&&(o=o.child,o!==null))for(of(o,a,d),o=o.sibling;o!==null;)of(o,a,d),o=o.sibling}function af(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?rt(d,o,a):Te(d,o);else if(_!==4&&(o=o.child,o!==null))for(af(o,a,d),o=o.sibling;o!==null;)af(o,a,d),o=o.sibling}function Xm(o,a,d){for(var _=a,S=!1,A,B;;){if(!S){S=_.return;e:for(;;){if(S===null)throw Error(l(160));switch(A=S.stateNode,S.tag){case 5:B=!1;break e;case 3:A=A.containerInfo,B=!0;break e;case 4:A=A.containerInfo,B=!0;break e}S=S.return}S=!0}if(_.tag===5||_.tag===6)km(o,_,d),B?V(A,_.stateNode):Oe(A,_.stateNode);else if(_.tag===18)B?Sh(A,_.stateNode):xh(A,_.stateNode);else if(_.tag===4){if(_.child!==null){A=_.stateNode.containerInfo,B=!0,_.child.return=_,_=_.child;continue}}else if(zm(o,_,d),_.child!==null){_.child.return=_,_=_.child;continue}if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return,_.tag===4&&(S=!1)}_.sibling.return=_.return,_=_.sibling}}function lf(o,a){if(ut){switch(a.tag){case 0:case 11:case 14:case 15:qr(3,a,a.return),Jo(3,a),qr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var _=a.memoizedProps;o=o!==null?o.memoizedProps:_;var S=a.type,A=a.updateQueue;a.updateQueue=null,A!==null&&ke(d,A,S,o,_,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,vt(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:it&&o!==null&&o.memoizedState.isDehydrated&&ul(a.stateNode.containerInfo);return;case 12:return;case 13:Bl(a);return;case 19:Bl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:qr(3,a,a.return),Jo(3,a),qr(5,a,a.return);return;case 12:return;case 13:Bl(a);return;case 19:Bl(a);return;case 3:it&&o!==null&&o.memoizedState.isDehydrated&&ul(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(bt){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,Wt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Bl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new tx),a.forEach(function(_){var S=fx.bind(null,o,_);d.has(_)||(d.add(_),_.then(S,S))})}}function ix(o,a){for(Ue=a;Ue!==null;){a=Ue;var d=a.deletions;if(d!==null)for(var _=0;_<d.length;_++){var S=d[_];try{var A=o;ut?Xm(A,S,a):km(A,S,a);var B=S.alternate;B!==null&&(B.return=null),S.return=null}catch(Ke){Xn(S,a,Ke)}}if(d=a.child,a.subtreeFlags&12854&&d!==null)d.return=a,Ue=d;else for(;Ue!==null;){a=Ue;try{var G=a.flags;if(G&32&&ut&&fe(a.stateNode),G&512){var le=a.alternate;if(le!==null){var we=le.ref;we!==null&&(typeof we=="function"?we(null):we.current=null)}}if(G&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ye=a.alternate;(Ye===null||Ye.memoizedState===null)&&(mf=fn())}break;case 22:var ft=a.memoizedState!==null,at=a.alternate,Ht=at!==null&&at.memoizedState!==null;if(d=a,ut){e:if(_=d,S=ft,A=null,ut)for(var Qe=_;;){if(Qe.tag===5){if(A===null){A=Qe;var En=Qe.stateNode;S?Ne(En):Ee(Qe.stateNode,Qe.memoizedProps)}}else if(Qe.tag===6){if(A===null){var pi=Qe.stateNode;S?k(pi):ne(pi,Qe.memoizedProps)}}else if((Qe.tag!==22&&Qe.tag!==23||Qe.memoizedState===null||Qe===_)&&Qe.child!==null){Qe.child.return=Qe,Qe=Qe.child;continue}if(Qe===_)break;for(;Qe.sibling===null;){if(Qe.return===null||Qe.return===_)break e;A===Qe&&(A=null),Qe=Qe.return}A===Qe&&(A=null),Qe.sibling.return=Qe.return,Qe=Qe.sibling}}if(ft&&!Ht&&d.mode&1){Ue=d;for(var j=d.child;j!==null;){for(d=Ue=j;Ue!==null;){_=Ue;var X=_.child;switch(_.tag){case 0:case 11:case 14:case 15:qr(4,_,_.return);break;case 1:Fl(_,_.return);var ie=_.stateNode;if(typeof ie.componentWillUnmount=="function"){var Be=_.return;try{ie.props=_.memoizedProps,ie.state=_.memoizedState,ie.componentWillUnmount()}catch(Ke){Xn(_,Be,Ke)}}break;case 5:Fl(_,_.return);break;case 22:if(_.memoizedState!==null){Zm(d);continue}}X!==null?(X.return=_,Ue=X):Zm(d)}j=j.sibling}}}switch(G&4102){case 2:Wm(a),a.flags&=-3;break;case 6:Wm(a),a.flags&=-3,lf(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,lf(a.alternate,a);break;case 4:lf(a.alternate,a)}}catch(Ke){Xn(a,a.return,Ke)}if(d=a.sibling,d!==null){d.return=a.return,Ue=d;break}Ue=a.return}}}function rx(o,a,d){Ue=o,Ym(o)}function Ym(o,a,d){for(var _=(o.mode&1)!==0;Ue!==null;){var S=Ue,A=S.child;if(S.tag===22&&_){var B=S.memoizedState!==null||Ol;if(!B){var G=S.alternate,le=G!==null&&G.memoizedState!==null||Yr;G=Ol;var we=Yr;if(Ol=B,(Yr=le)&&!we)for(Ue=S;Ue!==null;)B=Ue,le=B.child,B.tag===22&&B.memoizedState!==null?Jm(S):le!==null?(le.return=B,Ue=le):Jm(S);for(;A!==null;)Ue=A,Ym(A),A=A.sibling;Ue=S,Ol=G,Yr=we}qm(o)}else S.subtreeFlags&8772&&A!==null?(A.return=S,Ue=A):qm(o)}}function qm(o){for(;Ue!==null;){var a=Ue;if(a.flags&8772){var d=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Yr||Jo(5,a);break;case 1:var _=a.stateNode;if(a.flags&4&&!Yr)if(d===null)_.componentDidMount();else{var S=a.elementType===a.type?d.memoizedProps:vi(a.type,d.memoizedProps);_.componentDidUpdate(S,d.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var A=a.updateQueue;A!==null&&Hp(a,A,_);break;case 3:var B=a.updateQueue;if(B!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=K(a.child.stateNode);break;case 1:d=a.child.stateNode}Hp(a,B,d)}break;case 5:var G=a.stateNode;d===null&&a.flags&4&&Se(G,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(it&&a.memoizedState===null){var le=a.alternate;if(le!==null){var we=le.memoizedState;if(we!==null){var Ye=we.dehydrated;Ye!==null&&yh(Ye)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Yr||a.flags&512&&sf(a)}catch(ft){Xn(a,a.return,ft)}}if(a===o){Ue=null;break}if(d=a.sibling,d!==null){d.return=a.return,Ue=d;break}Ue=a.return}}function Zm(o){for(;Ue!==null;){var a=Ue;if(a===o){Ue=null;break}var d=a.sibling;if(d!==null){d.return=a.return,Ue=d;break}Ue=a.return}}function Jm(o){for(;Ue!==null;){var a=Ue;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{Jo(4,a)}catch(le){Xn(a,d,le)}break;case 1:var _=a.stateNode;if(typeof _.componentDidMount=="function"){var S=a.return;try{_.componentDidMount()}catch(le){Xn(a,S,le)}}var A=a.return;try{sf(a)}catch(le){Xn(a,A,le)}break;case 5:var B=a.return;try{sf(a)}catch(le){Xn(a,B,le)}}}catch(le){Xn(a,a.return,le)}if(a===o){Ue=null;break}var G=a.sibling;if(G!==null){G.return=a.return,Ue=G;break}Ue=a.return}}var zl=0,kl=1,Hl=2,Vl=3,Gl=4;if(typeof Symbol=="function"&&Symbol.for){var jo=Symbol.for;zl=jo("selector.component"),kl=jo("selector.has_pseudo_class"),Hl=jo("selector.role"),Vl=jo("selector.test_id"),Gl=jo("selector.text")}function cf(o){var a=z(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=D(o),o===null)throw Error(l(362));return o.stateNode.current}function uf(o,a){switch(a.$$typeof){case zl:if(o.type===a.value)return!0;break;case kl:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var _=o[d++],S=o[d++],A=a[S];if(_.tag!==5||!te(_)){for(;A!=null&&uf(_,A);)S++,A=a[S];if(S===a.length){a=!0;break e}else for(_=_.child;_!==null;)o.push(_,S),_=_.sibling}}a=!1}return a;case Hl:if(o.tag===5&&de(o.stateNode,a.value))return!0;break;case Gl:if((o.tag===5||o.tag===6)&&(o=W(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Vl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function hf(o){switch(o.$$typeof){case zl:return"<"+(N(o.value)||"Unknown")+">";case kl:return":has("+(hf(o)||"")+")";case Hl:return'[role="'+o.value+'"]';case Gl:return'"'+o.value+'"';case Vl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function jm(o,a){var d=[];o=[o,0];for(var _=0;_<o.length;){var S=o[_++],A=o[_++],B=a[A];if(S.tag!==5||!te(S)){for(;B!=null&&uf(S,B);)A++,B=a[A];if(A===a.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,A),S=S.sibling}}return d}function ff(o,a){if(!ue)throw Error(l(363));o=cf(o),o=jm(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var _=o[d++];if(_.tag===5)te(_)||a.push(_.stateNode);else for(_=_.child;_!==null;)o.push(_),_=_.sibling}return a}var sx=Math.ceil,Wl=c.ReactCurrentDispatcher,df=c.ReactCurrentOwner,Kt=c.ReactCurrentBatchConfig,Et=0,tn=null,nn=null,_n=0,ni=0,Ws=et(0),an=0,Ko=null,Xs=0,Xl=0,pf=0,Qo=null,Gn=null,mf=0,gf=1/0;function Ys(){gf=fn()+500}var Yl=!1,_f=null,yr=null,ql=!1,xr=null,Zl=0,$o=0,vf=null,Jl=-1,jl=0;function Ln(){return Et&6?fn():Jl!==-1?Jl:Jl=fn()}function Sr(o){return o.mode&1?Et&2&&_n!==0?_n&-_n:Hy.transition!==null?(jl===0&&(o=on,on<<=1,!(on&4194240)&&(on=64),jl=o),jl):(o=Ot,o!==0?o:ge()):1}function fi(o,a,d){if(50<$o)throw $o=0,vf=null,Error(l(185));var _=Kl(o,a);return _===null?null:(Oo(_,a,d),(!(Et&2)||_!==tn)&&(_===tn&&(!(Et&2)&&(Xl|=a),an===4&&Mr(_,_n)),Wn(_,d),a===1&&Et===0&&!(o.mode&1)&&(Ys(),dl&&Li())),_)}function Kl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Wn(o,a){var d=o.callbackNode;Ly(o,a);var _=hl(o,o===tn?_n:0);if(_===0)d!==null&&Op(d),o.callbackNode=null,o.callbackPriority=0;else if(a=_&-_,o.callbackPriority!==a){if(d!=null&&Op(d),a===1)o.tag===0?ky(Qm.bind(null,o)):Fp(Qm.bind(null,o)),he?be(function(){Et===0&&Li()}):Th(Ah,Li),d=null;else{switch(Up(_)){case 1:d=Ah;break;case 4:d=Oy;break;case 16:d=bh;break;case 536870912:d=Fy;break;default:d=bh}d=ag(d,Km.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Km(o,a){if(Jl=-1,jl=0,Et&6)throw Error(l(327));var d=o.callbackNode;if(jr()&&o.callbackNode!==d)return null;var _=hl(o,o===tn?_n:0);if(_===0)return null;if(_&30||_&o.expiredLanes||a)a=Ql(o,_);else{a=_;var S=Et;Et|=2;var A=tg();(tn!==o||_n!==a)&&(Ys(),Zr(o,a));do try{lx();break}catch(G){eg(o,G)}while(1);Ph(),Wl.current=A,Et=S,nn!==null?a=0:(tn=null,_n=0,a=an)}if(a!==0){if(a===2&&(S=Mh(o),S!==0&&(_=S,a=yf(o,S))),a===1)throw d=Ko,Zr(o,0),Mr(o,_),Wn(o,fn()),d;if(a===6)Mr(o,_);else{if(S=o.current.alternate,!(_&30)&&!ox(S)&&(a=Ql(o,_),a===2&&(A=Mh(o),A!==0&&(_=A,a=yf(o,A))),a===1))throw d=Ko,Zr(o,0),Mr(o,_),Wn(o,fn()),d;switch(o.finishedWork=S,o.finishedLanes=_,a){case 0:case 1:throw Error(l(345));case 2:Jr(o,Gn);break;case 3:if(Mr(o,_),(_&130023424)===_&&(a=mf+500-fn(),10<a)){if(hl(o,0)!==0)break;if(S=o.suspendedLanes,(S&_)!==_){Ln(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Ae(Jr.bind(null,o,Gn),a);break}Jr(o,Gn);break;case 4:if(Mr(o,_),(_&4194240)===_)break;for(a=o.eventTimes,S=-1;0<_;){var B=31-Ct(_);A=1<<B,B=a[B],B>S&&(S=B),_&=~A}if(_=S,_=fn()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*sx(_/1960))-_,10<_){o.timeoutHandle=Ae(Jr.bind(null,o,Gn),_);break}Jr(o,Gn);break;case 5:Jr(o,Gn);break;default:throw Error(l(329))}}}return Wn(o,fn()),o.callbackNode===d?Km.bind(null,o):null}function yf(o,a){var d=Qo;return o.current.memoizedState.isDehydrated&&(Zr(o,a).flags|=256),o=Ql(o,a),o!==2&&(a=Gn,Gn=d,a!==null&&xf(a)),o}function xf(o){Gn===null?Gn=o:Gn.push.apply(Gn,o)}function ox(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var _=0;_<d.length;_++){var S=d[_],A=S.getSnapshot;S=S.value;try{if(!Ii(A(),S))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function Mr(o,a){for(a&=~pf,a&=~Xl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-Ct(a),_=1<<d;o[d]=-1,a&=~_}}function Qm(o){if(Et&6)throw Error(l(327));jr();var a=hl(o,0);if(!(a&1))return Wn(o,fn()),null;var d=Ql(o,a);if(o.tag!==0&&d===2){var _=Mh(o);_!==0&&(a=_,d=yf(o,_))}if(d===1)throw d=Ko,Zr(o,0),Mr(o,a),Wn(o,fn()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Jr(o,Gn),Wn(o,fn()),null}function $m(o){xr!==null&&xr.tag===0&&!(Et&6)&&jr();var a=Et;Et|=1;var d=Kt.transition,_=Ot;try{if(Kt.transition=null,Ot=1,o)return o()}finally{Ot=_,Kt.transition=d,Et=a,!(Et&6)&&Li()}}function Sf(){ni=Ws.current,Re(Ws)}function Zr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==St&&(o.timeoutHandle=St,tt(d)),nn!==null)for(d=nn.return;d!==null;){var _=d;switch(Fh(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&Rt();break;case 3:Vs(),Re(At),Re(Tt),Wh();break;case 5:Vh(_);break;case 4:Vs();break;case 13:Re(Yt);break;case 19:Re(Yt);break;case 10:Ih(_.type._context);break;case 22:case 23:Sf()}d=d.return}if(tn=o,nn=o=Er(o.current,null),_n=ni=a,an=0,Ko=null,pf=Xl=Xs=0,Gn=Qo=null,Di!==null){for(a=0;a<Di.length;a++)if(d=Di[a],_=d.interleaved,_!==null){d.interleaved=null;var S=_.next,A=d.pending;if(A!==null){var B=A.next;A.next=S,_.next=B}d.pending=_}Di=null}return o}function eg(o,a){do{var d=nn;try{if(Ph(),wl.current=Pl,Tl){for(var _=Zt.memoizedState;_!==null;){var S=_.queue;S!==null&&(S.pending=null),_=_.next}Tl=!1}if(Gs=0,dn=xn=Zt=null,Vo=!1,Go=0,df.current=null,d===null||d.return===null){an=1,Ko=a,nn=null;break}e:{var A=o,B=d.return,G=d,le=a;if(a=_n,G.flags|=32768,le!==null&&typeof le=="object"&&typeof le.then=="function"){var we=le,Ye=G,ft=Ye.tag;if(!(Ye.mode&1)&&(ft===0||ft===11||ft===15)){var at=Ye.alternate;at?(Ye.updateQueue=at.updateQueue,Ye.memoizedState=at.memoizedState,Ye.lanes=at.lanes):(Ye.updateQueue=null,Ye.memoizedState=null)}var Ht=Sm(B);if(Ht!==null){Ht.flags&=-257,Mm(Ht,B,G,A,a),Ht.mode&1&&xm(A,we,a),a=Ht,le=we;var Qe=a.updateQueue;if(Qe===null){var En=new Set;En.add(le),a.updateQueue=En}else Qe.add(le);break e}else{if(!(a&1)){xm(A,we,a),Mf();break e}le=Error(l(426))}}else if(Xt&&G.mode&1){var pi=Sm(B);if(pi!==null){!(pi.flags&65536)&&(pi.flags|=256),Mm(pi,B,G,A,a),kh(le);break e}}A=le,an!==4&&(an=2),Qo===null?Qo=[A]:Qo.push(A),le=Kh(le,G),G=B;do{switch(G.tag){case 3:G.flags|=65536,a&=-a,G.lanes|=a;var j=vm(G,le,a);kp(G,j);break e;case 1:A=le;var X=G.type,ie=G.stateNode;if(!(G.flags&128)&&(typeof X.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(yr===null||!yr.has(ie)))){G.flags|=65536,a&=-a,G.lanes|=a;var Be=ym(G,A,a);kp(G,Be);break e}}G=G.return}while(G!==null)}ig(d)}catch(Ke){a=Ke,nn===d&&d!==null&&(nn=d=d.return);continue}break}while(1)}function tg(){var o=Wl.current;return Wl.current=Pl,o===null?Pl:o}function Mf(){(an===0||an===3||an===2)&&(an=4),tn===null||!(Xs&268435455)&&!(Xl&268435455)||Mr(tn,_n)}function Ql(o,a){var d=Et;Et|=2;var _=tg();tn===o&&_n===a||Zr(o,a);do try{ax();break}catch(S){eg(o,S)}while(1);if(Ph(),Et=d,Wl.current=_,nn!==null)throw Error(l(261));return tn=null,_n=0,an}function ax(){for(;nn!==null;)ng(nn)}function lx(){for(;nn!==null&&!Ny();)ng(nn)}function ng(o){var a=og(o.alternate,o,ni);o.memoizedProps=o.pendingProps,a===null?ig(o):nn=a,df.current=null}function ig(o){var a=o;do{var d=a.alternate;if(o=a.return,a.flags&32768){if(d=ex(d,a),d!==null){d.flags&=32767,nn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{an=6,nn=null;return}}else if(d=Ky(d,a,ni),d!==null){nn=d;return}if(a=a.sibling,a!==null){nn=a;return}nn=a=o}while(a!==null);an===0&&(an=5)}function Jr(o,a){var d=Ot,_=Kt.transition;try{Kt.transition=null,Ot=1,cx(o,a,d)}finally{Kt.transition=_,Ot=d}return null}function cx(o,a,d){do jr();while(xr!==null);if(Et&6)throw Error(l(327));var _=o.finishedWork,S=o.finishedLanes;if(_===null)return null;if(o.finishedWork=null,o.finishedLanes=0,_===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var A=_.lanes|_.childLanes;if(Dy(o,A),o===tn&&(nn=tn=null,_n=0),!(_.subtreeFlags&2064)&&!(_.flags&2064)||ql||(ql=!0,ag(bh,function(){return jr(),null})),A=(_.flags&15990)!==0,_.subtreeFlags&15990||A){A=Kt.transition,Kt.transition=null;var B=Ot;Ot=1;var G=Et;Et|=4,df.current=null,nx(o,_),ix(o,_),re(o.containerInfo),o.current=_,rx(_),Uy(),Et=G,Ot=B,Kt.transition=A}else o.current=_;if(ql&&(ql=!1,xr=o,Zl=S),A=o.pendingLanes,A===0&&(yr=null),By(_.stateNode),Wn(o,fn()),a!==null)for(d=o.onRecoverableError,_=0;_<a.length;_++)d(a[_]);if(Yl)throw Yl=!1,o=_f,_f=null,o;return Zl&1&&o.tag!==0&&jr(),A=o.pendingLanes,A&1?o===vf?$o++:($o=0,vf=o):$o=0,Li(),null}function jr(){if(xr!==null){var o=Up(Zl),a=Kt.transition,d=Ot;try{if(Kt.transition=null,Ot=16>o?16:o,xr===null)var _=!1;else{if(o=xr,xr=null,Zl=0,Et&6)throw Error(l(331));var S=Et;for(Et|=4,Ue=o.current;Ue!==null;){var A=Ue,B=A.child;if(Ue.flags&16){var G=A.deletions;if(G!==null){for(var le=0;le<G.length;le++){var we=G[le];for(Ue=we;Ue!==null;){var Ye=Ue;switch(Ye.tag){case 0:case 11:case 15:qr(8,Ye,A)}var ft=Ye.child;if(ft!==null)ft.return=Ye,Ue=ft;else for(;Ue!==null;){Ye=Ue;var at=Ye.sibling,Ht=Ye.return;if(Hm(Ye),Ye===we){Ue=null;break}if(at!==null){at.return=Ht,Ue=at;break}Ue=Ht}}}var Qe=A.alternate;if(Qe!==null){var En=Qe.child;if(En!==null){Qe.child=null;do{var pi=En.sibling;En.sibling=null,En=pi}while(En!==null)}}Ue=A}}if(A.subtreeFlags&2064&&B!==null)B.return=A,Ue=B;else e:for(;Ue!==null;){if(A=Ue,A.flags&2048)switch(A.tag){case 0:case 11:case 15:qr(9,A,A.return)}var j=A.sibling;if(j!==null){j.return=A.return,Ue=j;break e}Ue=A.return}}var X=o.current;for(Ue=X;Ue!==null;){B=Ue;var ie=B.child;if(B.subtreeFlags&2064&&ie!==null)ie.return=B,Ue=ie;else e:for(B=X;Ue!==null;){if(G=Ue,G.flags&2048)try{switch(G.tag){case 0:case 11:case 15:Jo(9,G)}}catch(Ke){Xn(G,G.return,Ke)}if(G===B){Ue=null;break e}var Be=G.sibling;if(Be!==null){Be.return=G.return,Ue=Be;break e}Ue=G.return}}if(Et=S,Li(),Pi&&typeof Pi.onPostCommitFiberRoot=="function")try{Pi.onPostCommitFiberRoot(fl,o)}catch{}_=!0}return _}finally{Ot=d,Kt.transition=a}}return!1}function rg(o,a,d){a=Kh(d,a),a=vm(o,a,1),vr(o,a),a=Ln(),o=Kl(o,1),o!==null&&(Oo(o,1,a),Wn(o,a))}function Xn(o,a,d){if(o.tag===3)rg(o,o,d);else for(;a!==null;){if(a.tag===3){rg(a,o,d);break}else if(a.tag===1){var _=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(yr===null||!yr.has(_))){o=Kh(d,o),o=ym(a,o,1),vr(a,o),o=Ln(),a=Kl(a,1),a!==null&&(Oo(a,1,o),Wn(a,o));break}}a=a.return}}function ux(o,a,d){var _=o.pingCache;_!==null&&_.delete(a),a=Ln(),o.pingedLanes|=o.suspendedLanes&d,tn===o&&(_n&d)===d&&(an===4||an===3&&(_n&130023424)===_n&&500>fn()-mf?Zr(o,0):pf|=d),Wn(o,a)}function sg(o,a){a===0&&(o.mode&1?(a=gr,gr<<=1,!(gr&130023424)&&(gr=4194304)):a=1);var d=Ln();o=Kl(o,a),o!==null&&(Oo(o,a,d),Wn(o,d))}function hx(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),sg(o,d)}function fx(o,a){var d=0;switch(o.tag){case 13:var _=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:_=o.stateNode;break;default:throw Error(l(314))}_!==null&&_.delete(a),sg(o,d)}var og;og=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||At.current)ti=!0;else{if(!(o.lanes&d)&&!(a.flags&128))return ti=!1,$y(o,a,d);ti=!!(o.flags&131072)}else ti=!1,Xt&&a.flags&1048576&&Yp(a,Sl,a.index);switch(a.lanes=0,a.tag){case 2:var _=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=je(a,Tt.current);Os(a,d),S=Yh(null,a,_,o,S,d);var A=qh();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,Ut(_)?(A=!0,hn(a)):A=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Dh(a),S.updater=yl,a.stateNode=S,S._reactInternals=a,Uh(a,_,o,d),a=ef(null,a,_,!0,A,d)):(a.tag=0,Xt&&A&&Oh(a),In(null,a,S,d),a=a.child),a;case 16:_=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=_._init,_=S(_._payload),a.type=_,S=a.tag=px(_),o=vi(_,o),S){case 0:a=$h(null,a,_,o,d);break e;case 1:a=Pm(null,a,_,o,d);break e;case 11:a=Tm(null,a,_,o,d);break e;case 14:a=Am(null,a,_,vi(_.type,o),d);break e}throw Error(l(306,_,""))}return a;case 0:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:vi(_,S),$h(o,a,_,S,d);case 1:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:vi(_,S),Pm(o,a,_,S,d);case 3:e:{if(Im(a),o===null)throw Error(l(387));_=a.pendingProps,A=a.memoizedState,S=A.element,zp(o,a),vl(a,_,null,d);var B=a.memoizedState;if(_=B.element,it&&A.isDehydrated)if(A={element:_,isDehydrated:!1,cache:B.cache,transitions:B.transitions},a.updateQueue.baseState=A,a.memoizedState=A,a.flags&256){S=Error(l(423)),a=Lm(o,a,_,d,S);break e}else if(_!==S){S=Error(l(424)),a=Lm(o,a,_,d,S);break e}else for(it&&(ei=al(a.stateNode.containerInfo),$n=a,Xt=!0,yi=null,Fo=!1),d=Qp(a,null,_,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(zs(),_===S){a=Ki(o,a,d);break e}In(o,a,_,d)}a=a.child}return a;case 5:return $p(a),o===null&&zh(a),_=a.type,S=a.pendingProps,A=o!==null?o.memoizedProps:null,B=S.children,xe(_,S)?B=null:A!==null&&xe(_,A)&&(a.flags|=32),Rm(o,a),In(o,a,B,d),a.child;case 6:return o===null&&zh(a),null;case 13:return Dm(o,a,d);case 4:return Hh(a,a.stateNode.containerInfo),_=a.pendingProps,o===null?a.child=ks(a,null,_,d):In(o,a,_,d),a.child;case 11:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:vi(_,S),Tm(o,a,_,S,d);case 7:return In(o,a,a.pendingProps,d),a.child;case 8:return In(o,a,a.pendingProps.children,d),a.child;case 12:return In(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(_=a.type._context,S=a.pendingProps,A=a.memoizedProps,B=S.value,Bp(a,_,B),A!==null)if(Ii(A.value,B)){if(A.children===S.children&&!At.current){a=Ki(o,a,d);break e}}else for(A=a.child,A!==null&&(A.return=a);A!==null;){var G=A.dependencies;if(G!==null){B=A.child;for(var le=G.firstContext;le!==null;){if(le.context===_){if(A.tag===1){le=qi(-1,d&-d),le.tag=2;var we=A.updateQueue;if(we!==null){we=we.shared;var Ye=we.pending;Ye===null?le.next=le:(le.next=Ye.next,Ye.next=le),we.pending=le}}A.lanes|=d,le=A.alternate,le!==null&&(le.lanes|=d),Lh(A.return,d,a),G.lanes|=d;break}le=le.next}}else if(A.tag===10)B=A.type===a.type?null:A.child;else if(A.tag===18){if(B=A.return,B===null)throw Error(l(341));B.lanes|=d,G=B.alternate,G!==null&&(G.lanes|=d),Lh(B,d,a),B=A.sibling}else B=A.child;if(B!==null)B.return=A;else for(B=A;B!==null;){if(B===a){B=null;break}if(A=B.sibling,A!==null){A.return=B.return,B=A;break}B=B.return}A=B}In(o,a,S.children,d),a=a.child}return a;case 9:return S=a.type,_=a.pendingProps.children,Os(a,d),S=ai(S),_=_(S),a.flags|=1,In(o,a,_,d),a.child;case 14:return _=a.type,S=vi(_,a.pendingProps),S=vi(_.type,S),Am(o,a,_,S,d);case 15:return bm(o,a,a.type,a.pendingProps,d);case 17:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:vi(_,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,Ut(_)?(o=!0,hn(a)):o=!1,Os(a,d),Wp(a,_,S),Uh(a,_,S,d),ef(null,a,_,!0,o,d);case 19:return Fm(o,a,d);case 22:return Cm(o,a,d)}throw Error(l(156,a.tag))};function ag(o,a){return Th(o,a)}function dx(o,a,d,_){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function di(o,a,d,_){return new dx(o,a,d,_)}function Ef(o){return o=o.prototype,!(!o||!o.isReactComponent)}function px(o){if(typeof o=="function")return Ef(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===E)return 14}return 2}function Er(o,a){var d=o.alternate;return d===null?(d=di(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function $l(o,a,d,_,S,A){var B=2;if(_=o,typeof o=="function")Ef(o)&&(B=1);else if(typeof o=="string")B=5;else e:switch(o){case f:return Kr(d.children,S,A,a);case p:B=8,S|=8;break;case m:return o=di(12,d,a,S|2),o.elementType=m,o.lanes=A,o;case x:return o=di(13,d,a,S),o.elementType=x,o.lanes=A,o;case v:return o=di(19,d,a,S),o.elementType=v,o.lanes=A,o;case T:return ec(d,S,A,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:B=10;break e;case y:B=9;break e;case M:B=11;break e;case E:B=14;break e;case w:B=16,_=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=di(B,d,a,S),a.elementType=o,a.type=_,a.lanes=A,a}function Kr(o,a,d,_){return o=di(7,o,_,a),o.lanes=d,o}function ec(o,a,d,_){return o=di(22,o,_,a),o.elementType=T,o.lanes=d,o.stateNode={},o}function wf(o,a,d){return o=di(6,o,null,a),o.lanes=d,o}function Tf(o,a,d){return a=di(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function mx(o,a,d,_,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=St,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Eh(0),this.expirationTimes=Eh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Eh(0),this.identifierPrefix=_,this.onRecoverableError=S,it&&(this.mutableSourceEagerHydrationData=null)}function lg(o,a,d,_,S,A,B,G,le){return o=new mx(o,a,d,G,le),a===1?(a=1,A===!0&&(a|=8)):a=0,A=di(3,null,null,a),o.current=A,A.stateNode=o,A.memoizedState={element:_,isDehydrated:d,cache:null,transitions:null},Dh(A),o}function cg(o){if(!o)return Mt;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(Ut(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(Ut(d))return Xi(o,d,a)}return a}function ug(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=J(a),o===null?null:o.stateNode}function hg(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function Af(o,a){hg(o,a),(o=o.alternate)&&hg(o,a)}function gx(o){return o=J(o),o===null?null:o.stateNode}function _x(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Ln();fi(o,134217728,a),Af(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Ln(),d=Sr(o);fi(o,d,a),Af(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=Qn(a.pendingLanes);d!==0&&(wh(a,d|1),Wn(a,fn()),!(Et&6)&&(Ys(),Li()))}break;case 13:var _=Ln();$m(function(){return fi(o,1,_)}),Af(o,1)}},t.batchedUpdates=function(o,a){var d=Et;Et|=1;try{return o(a)}finally{Et=d,Et===0&&(Ys(),dl&&Li())}},t.createComponentSelector=function(o){return{$$typeof:zl,value:o}},t.createContainer=function(o,a,d,_,S,A,B){return lg(o,a,!1,null,d,_,S,A,B)},t.createHasPseudoClassSelector=function(o){return{$$typeof:kl,value:o}},t.createHydrationContainer=function(o,a,d,_,S,A,B,G,le){return o=lg(d,_,!0,o,S,A,B,G,le),o.context=cg(null),d=o.current,_=Ln(),S=Sr(d),A=qi(_,S),A.callback=a??null,vr(d,A),o.current.lanes=S,Oo(o,S,_),Wn(o,_),o},t.createPortal=function(o,a,d){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:_==null?null:""+_,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Hl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Vl,value:o}},t.createTextSelector=function(o){return{$$typeof:Gl,value:o}},t.deferredUpdates=function(o){var a=Ot,d=Kt.transition;try{return Kt.transition=null,Ot=16,o()}finally{Ot=a,Kt.transition=d}},t.discreteUpdates=function(o,a,d,_,S){var A=Ot,B=Kt.transition;try{return Kt.transition=null,Ot=1,o(a,d,_,S)}finally{Ot=A,Kt.transition=B,Et===0&&Ys()}},t.findAllNodes=ff,t.findBoundingRects=function(o,a){if(!ue)throw Error(l(363));a=ff(o,a),o=[];for(var d=0;d<a.length;d++)o.push(C(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var _=d.x,S=_+d.width,A=d.y,B=A+d.height,G=a-1;0<=G;G--)if(a!==G){var le=o[G],we=le.x,Ye=we+le.width,ft=le.y,at=ft+le.height;if(_>=we&&A>=ft&&S<=Ye&&B<=at){o.splice(a,1);break}else if(_!==we||d.width!==le.width||at<A||ft>B){if(!(A!==ft||d.height!==le.height||Ye<_||we>S)){we>_&&(le.width+=we-_,le.x=_),Ye<S&&(le.width=S-we),o.splice(a,1);break}}else{ft>A&&(le.height+=ft-A,le.y=A),at<B&&(le.height=B-ft),o.splice(a,1);break}}}return o},t.findHostInstance=ug,t.findHostInstanceWithNoPortals=function(o){return o=U(o),o=o!==null?ee(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return ug(o)},t.flushControlled=function(o){var a=Et;Et|=1;var d=Kt.transition,_=Ot;try{Kt.transition=null,Ot=1,o()}finally{Ot=_,Kt.transition=d,Et=a,Et===0&&(Ys(),Li())}},t.flushPassiveEffects=jr,t.flushSync=$m,t.focusWithin=function(o,a){if(!ue)throw Error(l(363));for(o=cf(o),a=jm(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!te(d)){if(d.tag===5&&ae(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Ot},t.getFindAllNodesFailureDescription=function(o,a){if(!ue)throw Error(l(363));var d=0,_=[];o=[cf(o),0];for(var S=0;S<o.length;){var A=o[S++],B=o[S++],G=a[B];if((A.tag!==5||!te(A))&&(uf(A,G)&&(_.push(hf(G)),B++,B>d&&(d=B)),B<a.length))for(A=A.child;A!==null;)o.push(A,B),A=A.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(hf(a[d]));return`findAllNodes was able to match part of the selector:
  `+(_.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return K(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:gx,findFiberByHostInstance:o.findFiberByHostInstance||_x,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{fl=a.inject(o),Pi=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,_){if(!ue)throw Error(l(363));o=ff(o,a);var S=Ve(o,d,_).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=Ot;try{return Ot=o,a()}finally{Ot=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,_){var S=a.current,A=Ln(),B=Sr(S);return d=cg(d),a.context===null?a.context=d:a.pendingContext=d,a=qi(A,B),a.payload={element:o},_=_===void 0?null:_,_!==null&&(a.callback=_),vr(S,a),o=fi(S,B,A),o!==null&&_l(o,S,B),B},t};hy.exports=kb;var Hb=hy.exports;const Vb=yx(Hb),Ip={},Gb=r=>void Object.assign(Ip,r);function Wb(r,e){function t(f,{args:p=[],attach:m,...g},y){let M=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=g.object;x=po(v,{type:f,root:y,attach:m,primitive:!0})}else{const v=Ip[M];if(!v)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=po(new v(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),M!=="inject"&&gd(x,g),x}function n(f,p){let m=!1;if(p){var g,y;(g=p.__r3f)!=null&&g.attach?md(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||po(p,{}),p.__r3f.parent=f,Hd(p),mo(p)}}function i(f,p,m){let g=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)md(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(E=>E!==p),v=x.indexOf(m);f.children=[...x.slice(0,v),p,...x.slice(v)],g=!0}g||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||po(p,{}),p.__r3f.parent=f,Hd(p),mo(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>l(p,g,m))}function l(f,p,m){if(p){var g,y,M;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(T=>T!==p)),(y=p.__r3f)!=null&&y.attach)Z0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&Qb($c(p),p)}const E=(M=p.__r3f)==null?void 0:M.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var v;s((v=p.__r3f)==null?void 0:v.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?zd.unstable_scheduleCallback(zd.unstable_IdlePriority,T):T()}mo(f)}}function c(f,p,m,g){var y;const M=(y=f.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const v of f.children)v.__r3f&&n(x,v);f.children=f.children.filter(v=>!v.__r3f)}f.__r3f.objects.forEach(v=>n(x,v)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(M,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&$c(x).getState().internal.interaction.push(x),[g,g.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:Vb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&i(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:x=[],children:v,...E}=g,{args:w=[],children:T,...L}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((N,F)=>N!==w[F]))return[!0];const P=xy(f,E,L,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],g,y,M,x){p?c(f,g,M,x):gd(f,m)},commitMount(f,p,m,g){var y;const M=(y=f.__r3f)!=null?y:{};f.raycast&&M.handlers&&M.eventCount&&$c(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>po(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&Z0(g,f,m),f.isObject3D&&(f.visible=!1),mo(f)},unhideInstance(f,p){var m;const{attach:g,parent:y}=(m=f.__r3f)!=null?m:{};g&&y&&md(y,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),mo(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():xo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Gt.fun(performance.now)?performance.now:Gt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Gt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Gt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:gd}}var W0,X0;const pd=r=>"colorSpace"in r||"outputColorSpace"in r,py=()=>{var r;return(r=Ip.ColorManagement)!=null?r:null},my=r=>r&&r.isOrthographicCamera,Xb=r=>r&&r.hasOwnProperty("current"),il=typeof window<"u"&&((W0=window.document)!=null&&W0.createElement||((X0=window.navigator)==null?void 0:X0.product)==="ReactNative")?Xe.useLayoutEffect:Xe.useEffect;function gy(r){const e=Xe.useRef(r);return il(()=>void(e.current=r),[r]),e}function Yb({set:r}){return il(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class _y extends Xe.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}_y.getDerivedStateFromError=()=>({error:!0});const vy="__default",Y0=new Map,qb=r=>r&&!!r.memoized&&!!r.changes;function yy(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const fa=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function $c(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Gt={obj:r=>r===Object(r)&&!Gt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Gt.str(r)||Gt.num(r)||Gt.boo(r))return r===e;const s=Gt.obj(r);if(s&&n==="reference")return r===e;const l=Gt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Gt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Gt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function Zb(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function Jb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function po(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function kd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const q0=/-\d+$/;function md(r,e,t){if(Gt.str(t)){if(q0.test(t)){const s=t.replace(q0,""),{target:l,key:c}=kd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=kd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function Z0(r,e,t){var n,i;if(Gt.str(t)){const{target:s,key:l}=kd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function xy(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const f=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let M=0;M<y.length;M++)i.hasOwnProperty(y[M])||p.unshift([y[M],vy+"remove"])}p.forEach(([y,M])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Gt.equ(M,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,M,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,M,!1,v]);for(const E in i){const w=i[E];E.startsWith(`${y}-`)&&m.push([E,w,!1,E.split("-")])}});const g={...i};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(g.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(g.attach=f.memoizedProps.attach),{memoized:g,changes:m}}const jb=typeof process<"u"&&!1;function gd(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=qb(e)?e:xy(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[g,y,M,x]=c[m];if(pd(r)){const T="srgb",L="srgb-linear";g==="encoding"?(g="colorSpace",y=y===3001?T:L):g==="outputEncoding"&&(g="outputColorSpace",y=y===3001?T:L)}let v=r,E=v[g];if(x.length&&(E=x.reduce((w,T)=>w[T],r),!(E&&E.set))){const[w,...T]=x.reverse();v=T.reverse().reduce((L,P)=>L[P],r),g=w}if(y===vy+"remove")if(v.constructor){let w=Y0.get(v.constructor);w||(w=new v.constructor,Y0.set(v.constructor,w)),y=w[g]}else y=0;if(M&&n)y?n.handlers[g]=y:delete n.handlers[g],n.eventCount=Object.keys(n.handlers).length;else if(E&&E.set&&(E.copy||E instanceof Ms)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&(jb?E.constructor.name===y.constructor.name:E.constructor===y.constructor))E.copy(y);else if(y!==void 0){var h;const w=(h=E)==null?void 0:h.isColor;!w&&E.setScalar?E.setScalar(y):E instanceof Ms&&y instanceof Ms?E.mask=y.mask:E.set(y),!py()&&s&&!s.linear&&w&&E.convertSRGBToLinear()}}else{var f;if(v[g]=y,(f=v[g])!=null&&f.isTexture&&v[g].format===bn&&v[g].type===Ai&&s){const w=v[g];pd(w)&&pd(s.gl)?w.colorSpace=s.gl.outputColorSpace:w.encoding=s.gl.outputEncoding}}mo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=$c(r).getState().internal,g=m.interaction.indexOf(r);g>-1&&m.interaction.splice(g,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&Hd(r),r}function mo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Hd(r){r.onUpdate==null||r.onUpdate(r)}function Sy(r,e){r.manual||(my(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Yc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function Kb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return xo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return xo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return xo.ContinuousEventPriority;default:return xo.DefaultEventPriority}}function My(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function Qb(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{My(t.capturedMap,e,n,i)})}function $b(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let v=0;v<g.length;v++){const E=fa(g[v]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(v){const E=fa(v);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(v,!0):[]}let M=g.flatMap(y).sort((v,E)=>{const w=fa(v.object),T=fa(E.object);return!w||!T?v.distance-E.distance:T.events.priority-w.events.priority||v.distance-E.distance}).filter(v=>{const E=Yc(v);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const v of M){let E=v.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let v of f.internal.capturedMap.get(u.pointerId).values())p.has(Yc(v.intersection))||m.push(v.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const g={stopped:!1};for(const y of u){const M=fa(y.object)||m,{raycaster:x,pointer:v,camera:E,internal:w}=M,T=new O(v.x,v.y,0).unproject(E),L=b=>{var U,J;return(U=(J=w.capturedMap.get(b))==null?void 0:J.has(y.eventObject))!=null?U:!1},P=b=>{const U={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,U):w.capturedMap.set(b,new Map([[y.eventObject,U]])),h.target.setPointerCapture(b)},N=b=>{const U=w.capturedMap.get(b);U&&My(w.capturedMap,y.eventObject,U,b)};let F={};for(let b in h){let U=h[b];typeof U!="function"&&(F[b]=U)}let R={...y,...F,pointer:v,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:T,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=g.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(U=>U.eventObject===y.eventObject))){const U=u.slice(0,u.indexOf(y));s([...U,y])}},target:{hasPointerCapture:L,setPointerCapture:P,releasePointerCapture:N},currentTarget:{hasPointerCapture:L,setPointerCapture:P,releasePointerCapture:N},nativeEvent:h};if(p(R),g.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m==null?void 0:m.handlers;if(h.hovered.delete(Yc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(y),g.onPointerLeave==null||g.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const g=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,g?t:void 0),v=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&v<=2&&(l(f,m.interaction),p&&p(f)),g&&s(x);function E(w){const T=w.eventObject,L=T.__r3f,P=L==null?void 0:L.handlers;if(L!=null&&L.eventCount)if(g){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const N=Yc(w),F=m.hovered.get(N);F?F.stopped&&w.stopPropagation():(m.hovered.set(N,w),P.onPointerOver==null||P.onPointerOver(w),P.onPointerEnter==null||P.onPointerEnter(w))}P.onPointerMove==null||P.onPointerMove(w)}else{const N=P[u];N?(!y||m.initialHits.includes(T))&&(l(f,m.interaction.filter(F=>!m.initialHits.includes(F))),N(w)):y&&m.initialHits.includes(T)&&l(f,m.interaction.filter(F=>!m.initialHits.includes(F)))}}i(x,f,v,E)}}return{handlePointer:c}}const eC=["set","get","setSize","setFrameloop","setDpr","events","invalidate","advance","size","viewport"],Ey=r=>!!(r!=null&&r.render),Lp=Xe.createContext(null),tC=(r,e)=>{const t=ly((c,u)=>{const h=new O,f=new O,p=new O;function m(v=u().camera,E=f,w=u().size){const{width:T,height:L,top:P,left:N}=w,F=T/L;E.isVector3?p.copy(E):p.set(...E);const R=v.getWorldPosition(h).distanceTo(p);if(my(v))return{width:T/v.zoom,height:L/v.zoom,top:P,left:N,factor:1,distance:R,aspect:F};{const b=v.fov*Math.PI/180,U=2*Math.tan(b/2)*R,J=U*(T/L);return{width:J,height:U,top:P,left:N,factor:T/J,distance:R,aspect:F}}}let g;const y=v=>c(E=>({performance:{...E.performance,current:v}})),M=new pe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,E)=>e(v,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new wp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();g&&clearTimeout(g),v.performance.current!==v.performance.min&&y(v.performance.min),g=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(E=>({...E,events:{...E.events,...v}})),setSize:(v,E,w,T,L)=>{const P=u().camera,N={width:v,height:E,top:T||0,left:L||0,updateStyle:w};c(F=>({size:N,viewport:{...F.viewport,...m(P,f,N)}}))},setDpr:v=>c(E=>{const w=yy(v);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(v="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,v!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Xe.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,E,w)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:v,priority:E,store:w}),T.subscribers=T.subscribers.sort((L,P)=>L.priority-P.priority),()=>{const L=u().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(E>0?1:0),L.subscribers=L.subscribers.filter(P=>P.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,Sy(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==l&&(l=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let qc,nC=new Set,iC=new Set,rC=new Set;function _d(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function da(r,e){switch(r){case"before":return _d(nC,e);case"after":return _d(iC,e);case"tail":return _d(rC,e)}}let vd,yd;function xd(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),vd=e.internal.subscribers,qc=0;qc<vd.length;qc++)yd=vd[qc],yd.ref.current(yd.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function sC(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,da("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=xd(h,s))}if(t=!1,da("after",h),n===0)return da("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,f=!0,p,m){if(f&&da("before",h),p)xd(h,p,m);else for(const g of r.values())xd(h,g.store.getState());f&&da("after",h)}return{loop:l,invalidate:c,advance:u}}function Dp(){const r=Xe.useContext(Lp);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Lr(r=t=>t,e){return Dp()(r,e)}function oC(r,e=0){const t=Dp(),n=t.getState().internal.subscribe,i=gy(r);return il(()=>n(i,e,t),[e,n,t]),null}const J0=new WeakMap;function wy(r,e){return function(t,...n){let i=J0.get(t);return i||(i=new t,J0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,Zb(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`))))))}}function Ty(r,e,t,n){const i=Array.isArray(e)?e:[e],s=Fb(wy(t,n),[r,...i],{equal:Gt.equ});return Array.isArray(e)?s:s[0]}Ty.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return Bb(wy(t),[r,...n])};Ty.clear=function(r,e){const t=Array.isArray(e)?e:[e];return zb([r,...t])};const Po=new Map,{invalidate:j0,advance:K0}=sC(Po),{reconciler:Xa,applyProps:ho}=Wb(Po,Kb),fo={objects:"shallow",strict:!1},aC=(r,e)=>{const t=typeof r=="function"?r(e):r;return Ey(t)?t:new oy({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function lC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function cC(r){const e=Po.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||tC(j0,K0),l=t||Xa.createContainer(s,xo.ConcurrentRoot,null,!1,null,"",i,null);e||Po.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:y,onCreated:M,shadows:x=!1,linear:v=!1,flat:E=!1,legacy:w=!1,orthographic:T=!1,frameloop:L="always",dpr:P=[1,2],performance:N,raycaster:F,camera:R,onPointerMissed:b}=f,U=s.getState(),J=U.gl;U.gl||U.set({gl:J=aC(p,r)});let Z=U.raycaster;Z||U.set({raycaster:Z=new Cp});const{params:ee,...ce}=F||{};if(Gt.equ(ce,Z,fo)||ho(Z,{...ce}),Gt.equ(ee,Z.params,fo)||ho(Z,{params:{...Z.params,...ee}}),!U.camera||U.camera===h&&!Gt.equ(h,R,fo)){h=R;const re=R instanceof Ja,_e=re?R:T?new Ur(0,0,0,0,.1,1e3):new $t(75,0,.1,1e3);re||(_e.position.z=5,R&&(ho(_e,R),("aspect"in R||"left"in R||"right"in R||"bottom"in R||"top"in R)&&(_e.manual=!0,_e.updateProjectionMatrix())),!U.camera&&!(R!=null&&R.rotation)&&_e.lookAt(0,0,0)),U.set({camera:_e}),Z.camera=_e}if(!U.scene){let re;g!=null&&g.isScene?re=g:(re=new rp,g&&ho(re,g)),U.set({scene:po(re)})}if(!U.xr){var K;const re=(qe,oe)=>{const xe=s.getState();xe.frameloop!=="never"&&K0(qe,!0,xe,oe)},_e=()=>{const qe=s.getState();qe.gl.xr.enabled=qe.gl.xr.isPresenting,qe.gl.xr.setAnimationLoop(qe.gl.xr.isPresenting?re:null),qe.gl.xr.isPresenting||j0(qe)},Ie={connect(){const qe=s.getState().gl;qe.xr.addEventListener("sessionstart",_e),qe.xr.addEventListener("sessionend",_e)},disconnect(){const qe=s.getState().gl;qe.xr.removeEventListener("sessionstart",_e),qe.xr.removeEventListener("sessionend",_e)}};typeof((K=J.xr)==null?void 0:K.addEventListener)=="function"&&Ie.connect(),U.set({xr:Ie})}if(J.shadowMap){const re=J.shadowMap.enabled,_e=J.shadowMap.type;if(J.shadowMap.enabled=!!x,Gt.boo(x))J.shadowMap.type=_a;else if(Gt.str(x)){var ye;const Ie={basic:c_,percentage:ku,soft:_a,variance:Ei};J.shadowMap.type=(ye=Ie[x])!=null?ye:_a}else Gt.obj(x)&&Object.assign(J.shadowMap,x);(re!==J.shadowMap.enabled||_e!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}const H=py();H&&("enabled"in H?H.enabled=!w:"legacyMode"in H&&(H.legacyMode=w)),u||ho(J,{outputEncoding:v?3e3:3001,toneMapping:E?zi:Vd}),U.legacy!==w&&U.set(()=>({legacy:w})),U.linear!==v&&U.set(()=>({linear:v})),U.flat!==E&&U.set(()=>({flat:E})),p&&!Gt.fun(p)&&!Ey(p)&&!Gt.equ(p,J,fo)&&ho(J,p),y&&!U.events.handlers&&U.set({events:y(s)});const se=lC(r,m);return Gt.equ(se,U.size,fo)||U.setSize(se.width,se.height,se.updateStyle,se.top,se.left),P&&U.viewport.dpr!==yy(P)&&U.setDpr(P),U.frameloop!==L&&U.setFrameloop(L),U.onPointerMissed||U.set({onPointerMissed:b}),N&&!Gt.equ(N,U.performance,fo)&&U.set(re=>({performance:{...re.performance,...N}})),c=M,u=!0,this},render(f){return u||this.configure(),Xa.updateContainer(Un.jsx(uC,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){Ay(r)}}}function uC({store:r,children:e,onCreated:t,rootElement:n}){return il(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Un.jsx(Lp.Provider,{value:r,children:e})}function Ay(r,e){const t=Po.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Xa.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Jb(i),Po.delete(r),e&&e(r)}catch{}},500)})}}function zC(r,e,t){return Un.jsx(hC,{children:r,container:e,state:t},e.uuid)}function hC({state:r={},children:e,container:t}){const{events:n,size:i,...s}=r,l=Dp(),[c]=Xe.useState(()=>new Cp),[u]=Xe.useState(()=>new pe),h=Xe.useCallback((p,m)=>{const g={...p};Object.keys(p).forEach(M=>{(eC.includes(M)||p[M]!==m[M]&&m[M])&&delete g[M]});let y;if(m&&i){const M=m.camera;y=p.viewport.getCurrentViewport(M,new O,i),M!==p.camera&&Sy(M,i)}return{...g,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:l,events:{...p.events,...m==null?void 0:m.events,...n},size:{...p.size,...i},viewport:{...p.viewport,...y},...s}},[r]),[f]=Xe.useState(()=>{const p=l.getState();return ly((g,y)=>({...p,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:l,events:{...p.events,...n},size:{...p.size,...i},...s,set:g,get:y,setEvents:M=>g(x=>({...x,events:{...x.events,...M}}))}))});return Xe.useEffect(()=>{const p=l.subscribe(m=>f.setState(g=>h(m,g)));return()=>{p()}},[h]),Xe.useEffect(()=>{f.setState(p=>h(l.getState(),p))},[h]),Xe.useEffect(()=>()=>{f.destroy()},[]),Un.jsx(Un.Fragment,{children:Xa.createPortal(Un.jsx(Lp.Provider,{value:f,children:e}),f,null)})}Xa.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Xe.version});const Sd={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function fC(r){const{handlePointer:e}=$b(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Sd).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Sd[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Sd[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function Q0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function dC({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Xe.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Xe.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=Xe.useRef(!1);Xe.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,g]=Xe.useMemo(()=>{const v=()=>{if(!c.current.element)return;const{left:E,top:w,width:T,height:L,bottom:P,right:N,x:F,y:R}=c.current.element.getBoundingClientRect(),b={left:E,top:w,width:T,height:L,bottom:P,right:N,x:F,y:R};c.current.element instanceof HTMLElement&&n&&(b.height=c.current.element.offsetHeight,b.width=c.current.element.offsetWidth),Object.freeze(b),f.current&&!_C(c.current.lastBounds,b)&&l(c.current.lastBounds=b)};return[v,h?Q0(v,h):v,u?Q0(v,u):v]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(v=>v.removeEventListener("scroll",g,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(g),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(v=>v.addEventListener("scroll",g,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{g()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=v=>{!v||v===c.current.element||(y(),c.current.element=v,c.current.scrollContainers=by(v),M())};return mC(g,!!e),pC(m),Xe.useEffect(()=>{y(),M()},[e,g,m]),Xe.useEffect(()=>y,[]),[x,s,p]}function pC(r){Xe.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function mC(r,e){Xe.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function by(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...by(r.parentElement)]}const gC=["x","y","top","bottom","left","right","width","height"],_C=(r,e)=>gC.every(t=>r[t]===e[t]);var vC=Object.defineProperty,yC=Object.defineProperties,xC=Object.getOwnPropertyDescriptors,$0=Object.getOwnPropertySymbols,SC=Object.prototype.hasOwnProperty,MC=Object.prototype.propertyIsEnumerable,e_=(r,e,t)=>e in r?vC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,t_=(r,e)=>{for(var t in e||(e={}))SC.call(e,t)&&e_(r,t,e[t]);if($0)for(var t of $0(e))MC.call(e,t)&&e_(r,t,e[t]);return r},EC=(r,e)=>yC(r,xC(e)),n_,i_;typeof window<"u"&&((n_=window.document)!=null&&n_.createElement||((i_=window.navigator)==null?void 0:i_.product)==="ReactNative")?Xe.useLayoutEffect:Xe.useEffect;function Cy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=Cy(n,e,t);if(i)return i;n=e?null:n.sibling}}function Ry(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const r_=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=r_;return}return r_.apply(this,arguments)};const Np=Ry(Xe.createContext(null));class Py extends Xe.Component{render(){return Xe.createElement(Np.Provider,{value:this._reactInternals},this.props.children)}}function wC(){const r=Xe.useContext(Np);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Xe.useId();return Xe.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=Cy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function TC(){const r=wC(),[e]=Xe.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==Np&&!e.has(i)&&e.set(i,Xe.useContext(Ry(i)))}t=t.return}return e}function AC(){const r=TC();return Xe.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Xe.createElement(e,null,Xe.createElement(t.Provider,EC(t_({},n),{value:r.get(t)}))),e=>Xe.createElement(Py,t_({},e))),[r])}const bC=Xe.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=fC,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:v,camera:E,scene:w,onPointerMissed:T,onCreated:L,...P},N){Xe.useMemo(()=>Gb(Db),[]);const F=AC(),[R,b]=dC({scroll:!0,debounce:{scroll:50,resize:0},...n}),U=Xe.useRef(null),J=Xe.useRef(null);Xe.useImperativeHandle(N,()=>U.current);const Z=gy(T),[ee,ce]=Xe.useState(!1),[K,ye]=Xe.useState(!1);if(ee)throw ee;if(K)throw K;const H=Xe.useRef(null);il(()=>{const re=U.current;b.width>0&&b.height>0&&re&&(H.current||(H.current=cC(re)),H.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:v,camera:E,scene:w,size:b,onPointerMissed:(..._e)=>Z.current==null?void 0:Z.current(..._e),onCreated:_e=>{_e.events.connect==null||_e.events.connect(c?Xb(c)?c.current:c:J.current),u&&_e.setEvents({compute:(Ie,qe)=>{const oe=Ie[u+"X"],xe=Ie[u+"Y"];qe.pointer.set(oe/qe.size.width*2-1,-(xe/qe.size.height)*2+1),qe.raycaster.setFromCamera(qe.pointer,qe.camera)}}),L==null||L(_e)}}),H.current.render(Un.jsx(F,{children:Un.jsx(_y,{set:ye,children:Un.jsx(Xe.Suspense,{fallback:Un.jsx(Yb,{set:ce}),children:e??null})})})))}),Xe.useEffect(()=>{const re=U.current;if(re)return()=>Ay(re)},[]);const se=c?"none":"auto";return Un.jsx("div",{ref:J,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:se,...i},...P,children:Un.jsx("div",{ref:R,style:{width:"100%",height:"100%"},children:Un.jsx("canvas",{ref:U,style:{display:"block"},children:t})})})}),kC=Xe.forwardRef(function(e,t){return Un.jsx(Py,{children:Un.jsx(bC,{...e,ref:t})})});var CC=Object.defineProperty,RC=(r,e,t)=>e in r?CC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,PC=(r,e,t)=>(RC(r,typeof e!="symbol"?e+"":e,t),t);class IC{constructor(){PC(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}var LC=Object.defineProperty,DC=(r,e,t)=>e in r?LC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,lt=(r,e,t)=>(DC(r,typeof e!="symbol"?e+"":e,t),t);const Zc=new Cs,s_=new rr,NC=Math.cos(70*(Math.PI/180)),o_=(r,e)=>(r%e+e)%e;let UC=class extends IC{constructor(e,t){super(),lt(this,"object"),lt(this,"domElement"),lt(this,"enabled",!0),lt(this,"target",new O),lt(this,"minDistance",0),lt(this,"maxDistance",1/0),lt(this,"minZoom",0),lt(this,"maxZoom",1/0),lt(this,"minPolarAngle",0),lt(this,"maxPolarAngle",Math.PI),lt(this,"minAzimuthAngle",-1/0),lt(this,"maxAzimuthAngle",1/0),lt(this,"enableDamping",!1),lt(this,"dampingFactor",.05),lt(this,"enableZoom",!0),lt(this,"zoomSpeed",1),lt(this,"enableRotate",!0),lt(this,"rotateSpeed",1),lt(this,"enablePan",!0),lt(this,"panSpeed",1),lt(this,"screenSpacePanning",!0),lt(this,"keyPanSpeed",7),lt(this,"zoomToCursor",!1),lt(this,"autoRotate",!1),lt(this,"autoRotateSpeed",2),lt(this,"reverseOrbit",!1),lt(this,"reverseHorizontalOrbit",!1),lt(this,"reverseVerticalOrbit",!1),lt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),lt(this,"mouseButtons",{LEFT:hs.ROTATE,MIDDLE:hs.DOLLY,RIGHT:hs.PAN}),lt(this,"touches",{ONE:fs.ROTATE,TWO:fs.DOLLY_PAN}),lt(this,"target0"),lt(this,"position0"),lt(this,"zoom0"),lt(this,"_domElementKeyEvents",null),lt(this,"getPolarAngle"),lt(this,"getAzimuthalAngle"),lt(this,"setPolarAngle"),lt(this,"setAzimuthalAngle"),lt(this,"getDistance"),lt(this,"getZoomScale"),lt(this,"listenToKeyEvents"),lt(this,"stopListenToKeyEvents"),lt(this,"saveState"),lt(this,"reset"),lt(this,"update"),lt(this,"connect"),lt(this,"dispose"),lt(this,"dollyIn"),lt(this,"dollyOut"),lt(this,"getScale"),lt(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=V=>{let fe=o_(V,2*Math.PI),Ne=f.phi;Ne<0&&(Ne+=2*Math.PI),fe<0&&(fe+=2*Math.PI);let k=Math.abs(fe-Ne);2*Math.PI-k<k&&(fe<Ne?fe+=2*Math.PI:Ne+=2*Math.PI),p.phi=fe-Ne,n.update()},this.setAzimuthalAngle=V=>{let fe=o_(V,2*Math.PI),Ne=f.theta;Ne<0&&(Ne+=2*Math.PI),fe<0&&(fe+=2*Math.PI);let k=Math.abs(fe-Ne);2*Math.PI-k<k&&(fe<Ne?fe+=2*Math.PI:Ne+=2*Math.PI),p.theta=fe-Ne,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",Te),this._domElementKeyEvents=V},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Te),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const V=new O,fe=new O(0,1,0),Ne=new Cn().setFromUnitVectors(e.up,fe),k=Ne.clone().invert(),Ee=new O,ne=new Cn,me=2*Math.PI;return function(){const Pe=n.object.position;Ne.setFromUnitVectors(e.up,fe),k.copy(Ne).invert(),V.copy(Pe).sub(n.target),V.applyQuaternion(Ne),f.setFromVector3(V),n.autoRotate&&u===c.NONE&&ee(J()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let nt=n.minAzimuthAngle,Pt=n.maxAzimuthAngle;isFinite(nt)&&isFinite(Pt)&&(nt<-Math.PI?nt+=me:nt>Math.PI&&(nt-=me),Pt<-Math.PI?Pt+=me:Pt>Math.PI&&(Pt-=me),nt<=Pt?f.theta=Math.max(nt,Math.min(Pt,f.theta)):f.theta=f.theta>(nt+Pt)/2?Math.max(nt,f.theta):Math.min(Pt,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(g,n.dampingFactor):n.target.add(g),n.zoomToCursor&&R||n.object.isOrthographicCamera?f.radius=qe(f.radius):f.radius=qe(f.radius*m),V.setFromSpherical(f),V.applyQuaternion(k),Pe.copy(n.target).add(V),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,g.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),g.set(0,0,0));let Wt=!1;if(n.zoomToCursor&&R){let wt=null;if(n.object instanceof $t&&n.object.isPerspectiveCamera){const en=V.length();wt=qe(en*m);const yn=en-wt;n.object.position.addScaledVector(N,yn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const en=new O(F.x,F.y,0);en.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),Wt=!0;const yn=new O(F.x,F.y,0);yn.unproject(n.object),n.object.position.sub(yn).add(en),n.object.updateMatrixWorld(),wt=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;wt!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(wt).add(n.object.position):(Zc.origin.copy(n.object.position),Zc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Zc.direction))<NC?e.lookAt(n.target):(s_.setFromNormalAndCoplanarPoint(n.object.up,n.target),Zc.intersectPlane(s_,n.target))))}else n.object instanceof Ur&&n.object.isOrthographicCamera&&(Wt=m!==1,Wt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,R=!1,Wt||Ee.distanceToSquared(n.object.position)>h||8*(1-ne.dot(n.object.quaternion))>h?(n.dispatchEvent(i),Ee.copy(n.object.position),ne.copy(n.object.quaternion),Wt=!1,!0):!1}})(),this.connect=V=>{n.domElement=V,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Se),n.domElement.addEventListener("pointerdown",C),n.domElement.addEventListener("pointercancel",te),n.domElement.addEventListener("wheel",Ve)},this.dispose=()=>{var V,fe,Ne,k,Ee,ne;n.domElement&&(n.domElement.style.touchAction="auto"),(V=n.domElement)==null||V.removeEventListener("contextmenu",Se),(fe=n.domElement)==null||fe.removeEventListener("pointerdown",C),(Ne=n.domElement)==null||Ne.removeEventListener("pointercancel",te),(k=n.domElement)==null||k.removeEventListener("wheel",Ve),(Ee=n.domElement)==null||Ee.ownerDocument.removeEventListener("pointermove",W),(ne=n.domElement)==null||ne.ownerDocument.removeEventListener("pointerup",te),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Te)};const n=this,i={type:"change"},s={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new Ud,p=new Ud;let m=1;const g=new O,y=new pe,M=new pe,x=new pe,v=new pe,E=new pe,w=new pe,T=new pe,L=new pe,P=new pe,N=new O,F=new pe;let R=!1;const b=[],U={};function J(){return 2*Math.PI/60/60*n.autoRotateSpeed}function Z(){return Math.pow(.95,n.zoomSpeed)}function ee(V){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=V:p.theta-=V}function ce(V){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=V:p.phi-=V}const K=(()=>{const V=new O;return function(Ne,k){V.setFromMatrixColumn(k,0),V.multiplyScalar(-Ne),g.add(V)}})(),ye=(()=>{const V=new O;return function(Ne,k){n.screenSpacePanning===!0?V.setFromMatrixColumn(k,1):(V.setFromMatrixColumn(k,0),V.crossVectors(n.object.up,V)),V.multiplyScalar(Ne),g.add(V)}})(),H=(()=>{const V=new O;return function(Ne,k){const Ee=n.domElement;if(Ee&&n.object instanceof $t&&n.object.isPerspectiveCamera){const ne=n.object.position;V.copy(ne).sub(n.target);let me=V.length();me*=Math.tan(n.object.fov/2*Math.PI/180),K(2*Ne*me/Ee.clientHeight,n.object.matrix),ye(2*k*me/Ee.clientHeight,n.object.matrix)}else Ee&&n.object instanceof Ur&&n.object.isOrthographicCamera?(K(Ne*(n.object.right-n.object.left)/n.object.zoom/Ee.clientWidth,n.object.matrix),ye(k*(n.object.top-n.object.bottom)/n.object.zoom/Ee.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function se(V){n.object instanceof $t&&n.object.isPerspectiveCamera||n.object instanceof Ur&&n.object.isOrthographicCamera?m=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function re(V){se(m/V)}function _e(V){se(m*V)}function Ie(V){if(!n.zoomToCursor||!n.domElement)return;R=!0;const fe=n.domElement.getBoundingClientRect(),Ne=V.clientX-fe.left,k=V.clientY-fe.top,Ee=fe.width,ne=fe.height;F.x=Ne/Ee*2-1,F.y=-(k/ne)*2+1,N.set(F.x,F.y,1).unproject(n.object).sub(n.object.position).normalize()}function qe(V){return Math.max(n.minDistance,Math.min(n.maxDistance,V))}function oe(V){y.set(V.clientX,V.clientY)}function xe(V){Ie(V),T.set(V.clientX,V.clientY)}function Ce(V){v.set(V.clientX,V.clientY)}function Ae(V){M.set(V.clientX,V.clientY),x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const fe=n.domElement;fe&&(ee(2*Math.PI*x.x/fe.clientHeight),ce(2*Math.PI*x.y/fe.clientHeight)),y.copy(M),n.update()}function tt(V){L.set(V.clientX,V.clientY),P.subVectors(L,T),P.y>0?re(Z()):P.y<0&&_e(Z()),T.copy(L),n.update()}function St(V){E.set(V.clientX,V.clientY),w.subVectors(E,v).multiplyScalar(n.panSpeed),H(w.x,w.y),v.copy(E),n.update()}function $e(V){Ie(V),V.deltaY<0?_e(Z()):V.deltaY>0&&re(Z()),n.update()}function ut(V){let fe=!1;switch(V.code){case n.keys.UP:H(0,n.keyPanSpeed),fe=!0;break;case n.keys.BOTTOM:H(0,-n.keyPanSpeed),fe=!0;break;case n.keys.LEFT:H(n.keyPanSpeed,0),fe=!0;break;case n.keys.RIGHT:H(-n.keyPanSpeed,0),fe=!0;break}fe&&(V.preventDefault(),n.update())}function bt(){if(b.length==1)y.set(b[0].pageX,b[0].pageY);else{const V=.5*(b[0].pageX+b[1].pageX),fe=.5*(b[0].pageY+b[1].pageY);y.set(V,fe)}}function it(){if(b.length==1)v.set(b[0].pageX,b[0].pageY);else{const V=.5*(b[0].pageX+b[1].pageX),fe=.5*(b[0].pageY+b[1].pageY);v.set(V,fe)}}function z(){const V=b[0].pageX-b[1].pageX,fe=b[0].pageY-b[1].pageY,Ne=Math.sqrt(V*V+fe*fe);T.set(0,Ne)}function Vt(){n.enableZoom&&z(),n.enablePan&&it()}function ge(){n.enableZoom&&z(),n.enableRotate&&bt()}function ve(V){if(b.length==1)M.set(V.pageX,V.pageY);else{const Ne=Oe(V),k=.5*(V.pageX+Ne.x),Ee=.5*(V.pageY+Ne.y);M.set(k,Ee)}x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const fe=n.domElement;fe&&(ee(2*Math.PI*x.x/fe.clientHeight),ce(2*Math.PI*x.y/fe.clientHeight)),y.copy(M)}function he(V){if(b.length==1)E.set(V.pageX,V.pageY);else{const fe=Oe(V),Ne=.5*(V.pageX+fe.x),k=.5*(V.pageY+fe.y);E.set(Ne,k)}w.subVectors(E,v).multiplyScalar(n.panSpeed),H(w.x,w.y),v.copy(E)}function be(V){const fe=Oe(V),Ne=V.pageX-fe.x,k=V.pageY-fe.y,Ee=Math.sqrt(Ne*Ne+k*k);L.set(0,Ee),P.set(0,Math.pow(L.y/T.y,n.zoomSpeed)),re(P.y),T.copy(L)}function ue(V){n.enableZoom&&be(V),n.enablePan&&he(V)}function D(V){n.enableZoom&&be(V),n.enableRotate&&ve(V)}function C(V){var fe,Ne;n.enabled!==!1&&(b.length===0&&((fe=n.domElement)==null||fe.ownerDocument.addEventListener("pointermove",W),(Ne=n.domElement)==null||Ne.ownerDocument.addEventListener("pointerup",te)),ke(V),V.pointerType==="touch"?ze(V):de(V))}function W(V){n.enabled!==!1&&(V.pointerType==="touch"?vt(V):ae(V))}function te(V){var fe,Ne,k;rt(V),b.length===0&&((fe=n.domElement)==null||fe.releasePointerCapture(V.pointerId),(Ne=n.domElement)==null||Ne.ownerDocument.removeEventListener("pointermove",W),(k=n.domElement)==null||k.ownerDocument.removeEventListener("pointerup",te)),n.dispatchEvent(l),u=c.NONE}function de(V){let fe;switch(V.button){case 0:fe=n.mouseButtons.LEFT;break;case 1:fe=n.mouseButtons.MIDDLE;break;case 2:fe=n.mouseButtons.RIGHT;break;default:fe=-1}switch(fe){case hs.DOLLY:if(n.enableZoom===!1)return;xe(V),u=c.DOLLY;break;case hs.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enablePan===!1)return;Ce(V),u=c.PAN}else{if(n.enableRotate===!1)return;oe(V),u=c.ROTATE}break;case hs.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enableRotate===!1)return;oe(V),u=c.ROTATE}else{if(n.enablePan===!1)return;Ce(V),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function ae(V){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Ae(V);break;case c.DOLLY:if(n.enableZoom===!1)return;tt(V);break;case c.PAN:if(n.enablePan===!1)return;St(V);break}}function Ve(V){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(V.preventDefault(),n.dispatchEvent(s),$e(V),n.dispatchEvent(l))}function Te(V){n.enabled===!1||n.enablePan===!1||ut(V)}function ze(V){switch(st(V),b.length){case 1:switch(n.touches.ONE){case fs.ROTATE:if(n.enableRotate===!1)return;bt(),u=c.TOUCH_ROTATE;break;case fs.PAN:if(n.enablePan===!1)return;it(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case fs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Vt(),u=c.TOUCH_DOLLY_PAN;break;case fs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ge(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function vt(V){switch(st(V),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;ve(V),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;he(V),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ue(V),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;D(V),n.update();break;default:u=c.NONE}}function Se(V){n.enabled!==!1&&V.preventDefault()}function ke(V){b.push(V)}function rt(V){delete U[V.pointerId];for(let fe=0;fe<b.length;fe++)if(b[fe].pointerId==V.pointerId){b.splice(fe,1);return}}function st(V){let fe=U[V.pointerId];fe===void 0&&(fe=new pe,U[V.pointerId]=fe),fe.set(V.pageX,V.pageY)}function Oe(V){const fe=V.pointerId===b[0].pointerId?b[1]:b[0];return U[fe.pointerId]}this.dollyIn=(V=Z())=>{_e(V),n.update()},this.dollyOut=(V=Z())=>{re(V),n.update()},this.getScale=()=>m,this.setScale=V=>{se(V),n.update()},this.getZoomScale=()=>Z(),t!==void 0&&this.connect(t),this.update()}};const VC=Xe.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:l,onStart:c,onEnd:u,...h},f)=>{const p=Lr(P=>P.invalidate),m=Lr(P=>P.camera),g=Lr(P=>P.gl),y=Lr(P=>P.events),M=Lr(P=>P.setEvents),x=Lr(P=>P.set),v=Lr(P=>P.get),E=Lr(P=>P.performance),w=e||m,T=n||y.connected||g.domElement,L=Xe.useMemo(()=>new UC(w),[w]);return oC(()=>{L.enabled&&L.update()},-1),Xe.useEffect(()=>(s&&L.connect(s===!0?T:s),L.connect(T),()=>void L.dispose()),[s,T,t,L,p]),Xe.useEffect(()=>{const P=R=>{p(),t&&E.regress(),l&&l(R)},N=R=>{c&&c(R)},F=R=>{u&&u(R)};return L.addEventListener("change",P),L.addEventListener("start",N),L.addEventListener("end",F),()=>{L.removeEventListener("start",N),L.removeEventListener("end",F),L.removeEventListener("change",P)}},[l,c,u,L,p,M]),Xe.useEffect(()=>{if(r){const P=v().controls;return x({controls:L}),()=>x({controls:P})}},[r,L]),Xe.createElement("primitive",xx({ref:f,object:L,enableDamping:i},h))});export{vS as $,zn as A,_t as B,kC as C,lp as D,mp as E,jn as F,Fi as G,Lo as H,lv as I,Lt as J,av as K,ln as L,zr as M,sn as N,VC as O,Hv as P,Wi as Q,zu as R,kv as S,KM as T,Fr as U,fv as V,Vi as W,uv as X,hv as Y,vo as Z,$t as _,kt as a,Ur as a0,eh as a1,Ga as a2,op as a3,Uu as a4,Cn as a5,vn as a6,Gd as a7,va as a8,go as a9,Xd as aA,Wd as aB,fr as aC,Ai as aD,Sp as aE,Tx as aF,Zn as aG,lr as aH,hr as aI,ba as aJ,JM as aK,iv as aL,zC as aM,Gb as aN,ho as aO,gi as aa,Pa as ab,Ia as ac,ur as ad,As as ae,jt as af,Va as ag,Ha as ah,nl as ai,Bn as aj,Rn as ak,tl as al,Rs as am,lh as an,bi as ao,jM as ap,FS as aq,bn as ar,Xu as as,rp as at,No as au,Hu as av,oy as aw,ki as ax,Ts as ay,Vu as az,wp as b,Lr as c,oC as d,bx as e,Rx as f,Cx as g,Kn as h,Dd as i,dr as j,He as k,Vv as l,Av as m,pe as n,ct as o,O as p,Co as q,Nt as r,Fb as s,iE as t,Ty as u,$u as v,Bi as w,Ra as x,ap as y,Pn as z};
